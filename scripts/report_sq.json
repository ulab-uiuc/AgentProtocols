{
  "scanned_path": "scenarios",
  "py_total": 260,
  "yaml_total": 32,
  "py": [
    {
      "path": "scenarios/fail_storm_recovery/protocol_backends/anp/runner.py",
      "comments": [
        {
          "line": 1070,
          "text": "# 确保agent还存在"
        }
      ],
      "docstrings": []
    },
    {
      "path": "scenarios/fail_storm_recovery/protocol_backends/meta_protocol/meta_performance_metrics.py",
      "comments": [
        {
          "line": 22,
          "text": "# 任务完成统计"
        },
        {
          "line": 27,
          "text": "# Response时间统计"
        },
        {
          "line": 30,
          "text": "# Connect统计"
        },
        {
          "line": 35,
          "text": "# Meta协议特有指标"
        },
        {
          "line": 45,
          "text": "# 聚合统计"
        },
        {
          "line": 52,
          "text": "# Response时间统计"
        },
        {
          "line": 55,
          "text": "# Worker分布"
        },
        {
          "line": 58,
          "text": "# Meta协议特有统计"
        },
        {
          "line": 72,
          "text": "# Meta协议特有指标"
        },
        {
          "line": 76,
          "text": "# 全局Setup"
        },
        {
          "line": 89,
          "text": "# Record协议混合统计"
        },
        {
          "line": 125,
          "text": "# Check是否是超时"
        },
        {
          "line": 145,
          "text": "# Update所有worker的路由决策计数"
        },
        {
          "line": 348,
          "text": "# Meta协议特有统计"
        },
        {
          "line": 357,
          "text": "# Response时间统计"
        },
        {
          "line": 366,
          "text": "# 协议级别统计"
        },
        {
          "line": 379,
          "text": "# Worker级别统计"
        }
      ],
      "docstrings": [
        {
          "type": "function",
          "name": "print_meta_performance_summary",
          "text": "打印Meta协议专用的性能总结"
        }
      ]
    },
    {
      "path": "scenarios/fail_storm_recovery/protocol_backends/meta_protocol/runner.py",
      "comments": [
        {
          "line": 437,
          "text": "# Initialize统一加超时（所有协议都建议加）"
        }
      ],
      "docstrings": []
    },
    {
      "path": "scenarios/safety_tech/core/attack_scenarios.py",
      "comments": [
        {
          "line": 51,
          "text": "# 攻击配置"
        },
        {
          "line": 55,
          "text": "# 协议与钩子"
        },
        {
          "line": 59,
          "text": "# 结果存储"
        },
        {
          "line": 95,
          "text": "# Try冒充Doctor_B身份注册"
        },
        {
          "line": 98,
          "text": "# 冒用合法身份"
        },
        {
          "line": 152,
          "text": "# 首先尝试获取合法凭证（模拟泄露）"
        },
        {
          "line": 155,
          "text": "# 使用窃取的凭证注册Observer"
        },
        {
          "line": 203,
          "text": "# Create旧的注册数据（模拟之前的合法注册）"
        },
        {
          "line": 204,
          "text": "# 1小时前"
        },
        {
          "line": 217,
          "text": "# 旧时间戳"
        },
        {
          "line": 223,
          "text": "# 重放旧注册数据"
        },
        {
          "line": 260,
          "text": "# 注册恶意中继端点作为Observer"
        },
        {
          "line": 265,
          "text": "# 看似合法的ID"
        },
        {
          "line": 266,
          "text": "# 恶意端点"
        },
        {
          "line": 320,
          "text": "# 使用ANP的DID证明尝试注册Agora协议"
        },
        {
          "line": 332,
          "text": "# 声明为当前协议"
        },
        {
          "line": 342,
          "text": "# If未提供构造跨协议证明的钩子，则不再默认使用ANP，而是发送空proof以显式验证RG的协议绑定。"
        },
        {
          "line": 383,
          "text": "# Try无证明注册Observer"
        },
        {
          "line": 426,
          "text": "# 先注册一个合法Agent来获取令牌"
        },
        {
          "line": 521,
          "text": "# 统计各类攻击成功率"
        },
        {
          "line": 525,
          "text": "# 特别关注Observer相关攻击"
        },
        {
          "line": 542,
          "text": "# 数据访问指标"
        },
        {
          "line": 547,
          "text": "# 首次泄露时间"
        },
        {
          "line": 552,
          "text": "# 访问方法"
        },
        {
          "line": 559,
          "text": "# Update指标"
        },
        {
          "line": 566,
          "text": "# Calculate窃听成功率"
        },
        {
          "line": 599,
          "text": "# 准入防御评分 (40%)"
        },
        {
          "line": 602,
          "text": "# 窃听防御评分 (40%) "
        },
        {
          "line": 605,
          "text": "# 数据泄露惩罚 (20%)"
        },
        {
          "line": 607,
          "text": "# 每1KB数据泄露扣1分，最多扣20分"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "Registration Attack Scenarios\n六种注册攻击场景的实现，用于测试不同协议的准入防御能力"
        },
        {
          "type": "class",
          "name": "AttackResult",
          "text": "攻击结果"
        },
        {
          "type": "class",
          "name": "RegistrationAttackRunner",
          "text": "注册攻击场景运行器\n\n设计为协议无关：\n- protocol: 目标协议名称（如 'agora'、'a2a'、'acp'、'anp'）\n- attack_hooks: 可选钩子，用于生成各协议特定的伪造证明/载荷\n  keys 可包含：\n    - build_impersonation_proof() -> Dict[str, Any]\n    - build_endpoint_substitution_proof() -> Dict[str, Any]\n    - build_cross_protocol_proof() -> Dict[str, Any]\n    - build_observer_proof(observer_id) -> Dict[str, Any]"
        },
        {
          "type": "class",
          "name": "EavesdropMetricsCollector",
          "text": "窃听指标收集器"
        },
        {
          "type": "function",
          "name": "run_all_attacks",
          "text": "Run所有六种攻击场景"
        },
        {
          "type": "function",
          "name": "impersonation_attack",
          "text": "1. 冒名顶替攻击"
        },
        {
          "type": "function",
          "name": "stolen_credential_attack",
          "text": "2. 凭证复用攻击"
        },
        {
          "type": "function",
          "name": "replay_attack",
          "text": "3. 注册重放攻击"
        },
        {
          "type": "function",
          "name": "endpoint_substitution_attack",
          "text": "4. 端点替换攻击（目录投毒）"
        },
        {
          "type": "function",
          "name": "cross_protocol_attack",
          "text": "5. 跨协议攻击"
        },
        {
          "type": "function",
          "name": "observer_auto_admission_attack",
          "text": "6. Observer自动准入攻击"
        },
        {
          "type": "function",
          "name": "_simulate_credential_leak",
          "text": "模拟凭证泄露，获取合法会话令牌"
        },
        {
          "type": "function",
          "name": "generate_attack_report",
          "text": "Generate攻击报告"
        },
        {
          "type": "function",
          "name": "collect_attack_metrics",
          "text": "收集攻击指标"
        },
        {
          "type": "function",
          "name": "collect_eavesdrop_metrics",
          "text": "收集窃听指标"
        },
        {
          "type": "function",
          "name": "get_metrics",
          "text": "Get收集的指标"
        },
        {
          "type": "function",
          "name": "generate_protocol_comparison_data",
          "text": "Generate协议对比数据"
        },
        {
          "type": "function",
          "name": "_calculate_security_score",
          "text": "Calculate安全评分（0-100）"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/core/cert_matrix.py",
      "comments": [
        {
          "line": 34,
          "text": "# 1. 过期证书测试"
        },
        {
          "line": 37,
          "text": "# 2. 主机名不匹配测试"
        },
        {
          "line": 40,
          "text": "# 3. 自签名证书测试"
        },
        {
          "line": 43,
          "text": "# 4. 证书链不完整测试"
        },
        {
          "line": 46,
          "text": "# 5. 弱加密套件测试"
        },
        {
          "line": 49,
          "text": "# 6. TLS版本降级测试"
        },
        {
          "line": 52,
          "text": "# Calculate总体评分"
        },
        {
          "line": 68,
          "text": "# 生成过期的自签名证书"
        },
        {
          "line": 71,
          "text": "# Try使用过期证书连接"
        },
        {
          "line": 74,
          "text": "# 绕过主机名检查，专门测试过期"
        },
        {
          "line": 111,
          "text": "# 生成主机名不匹配的证书（为example.com生成，但连接localhost）"
        },
        {
          "line": 115,
          "text": "# 使用strict hostname checking"
        },
        {
          "line": 121,
          "text": "# 这里应该会因为hostname不匹配而失败"
        },
        {
          "line": 155,
          "text": "# 使用默认严格验证模式连接"
        },
        {
          "line": 164,
          "text": "# 好事，正确拒绝了自签名证书"
        },
        {
          "line": 195,
          "text": "# 测试各种弱加密套件"
        },
        {
          "line": 199,
          "text": "# NULL加密"
        },
        {
          "line": 200,
          "text": "# 40位导出级加密"
        },
        {
          "line": 236,
          "text": "# Calculate总体阻断率"
        },
        {
          "line": 256,
          "text": "# 测试各种TLS版本"
        },
        {
          "line": 294,
          "text": "# Calculate阻断率"
        },
        {
          "line": 306,
          "text": "# Create密钥对"
        },
        {
          "line": 310,
          "text": "# Create证书"
        },
        {
          "line": 315,
          "text": "# Setup为已过期（昨天到期）"
        },
        {
          "line": 316,
          "text": "# 2天前开始"
        },
        {
          "line": 317,
          "text": "# 昨天过期"
        },
        {
          "line": 323,
          "text": "# 保存到临时文件"
        },
        {
          "line": 337,
          "text": "# Create密钥对"
        },
        {
          "line": 341,
          "text": "# Create证书"
        },
        {
          "line": 346,
          "text": "# 1年有效期"
        },
        {
          "line": 351,
          "text": "# 保存到临时文件"
        },
        {
          "line": 373,
          "text": "# 过期证书：被阻止=100分，未阻止=0分"
        },
        {
          "line": 377,
          "text": "# 主机名不匹配：被阻止=100分"
        },
        {
          "line": 381,
          "text": "# 自签名证书：被阻止=100分"
        },
        {
          "line": 385,
          "text": "# 弱加密套件：按阻断率评分"
        },
        {
          "line": 389,
          "text": "# TLS版本降级：按阻断率评分"
        },
        {
          "line": 393,
          "text": "# Calculate加权总分"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "S2证书有效性矩阵测试\n系统化测试各种证书问题：过期、主机名不匹配、自签名、链不完整等"
        },
        {
          "type": "class",
          "name": "CertificateMatrixTester",
          "text": "证书有效性矩阵测试器"
        },
        {
          "type": "function",
          "name": "run_cert_matrix_test",
          "text": "Run证书矩阵测试的入口函数"
        },
        {
          "type": "function",
          "name": "run_cert_matrix_test",
          "text": "Run完整的证书矩阵测试"
        },
        {
          "type": "function",
          "name": "_test_expired_certificate",
          "text": "Test过期证书拒绝"
        },
        {
          "type": "function",
          "name": "_test_hostname_mismatch",
          "text": "Test主机名不匹配证书拒绝"
        },
        {
          "type": "function",
          "name": "_test_self_signed_cert",
          "text": "Test自签名证书处理"
        },
        {
          "type": "function",
          "name": "_test_incomplete_chain",
          "text": "Test证书链不完整的处理"
        },
        {
          "type": "function",
          "name": "_test_weak_cipher_suites",
          "text": "Test弱加密套件拒绝"
        },
        {
          "type": "function",
          "name": "_test_tls_version_downgrade",
          "text": "TestTLS版本降级拒绝"
        },
        {
          "type": "function",
          "name": "_generate_expired_certificate",
          "text": "Generate过期的自签名证书"
        },
        {
          "type": "function",
          "name": "_generate_certificate",
          "text": "Generate有效的自签名证书"
        },
        {
          "type": "function",
          "name": "_calculate_matrix_score",
          "text": "Calculate证书矩阵测试的综合评分"
        },
        {
          "type": "function",
          "name": "_get_security_grade",
          "text": "根据分数获取安全等级"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/core/e2e_detector.py",
      "comments": [
        {
          "line": 27,
          "text": "# 生成唯一水印"
        },
        {
          "line": 32,
          "text": "# 根据payload结构注入水印"
        },
        {
          "line": 34,
          "text": "# 文本消息：在末尾添加隐藏标记"
        },
        {
          "line": 37,
          "text": "# content结构：注入到内容中"
        },
        {
          "line": 41,
          "text": "# 在metadata中也注入标记"
        },
        {
          "line": 47,
          "text": "# Record注入的标记"
        },
        {
          "line": 61,
          "text": "# Create包含明显敏感信息的payload"
        },
        {
          "line": 80,
          "text": "# Record探测payload"
        },
        {
          "line": 101,
          "text": "# 检测注入的水印是否以明文形式出现"
        },
        {
          "line": 116,
          "text": "# 检测明文敏感关键字"
        },
        {
          "line": 120,
          "text": "# 信用卡"
        },
        {
          "line": 121,
          "text": "# 电话"
        },
        {
          "line": 131,
          "text": "# 检测加密指标"
        },
        {
          "line": 134,
          "text": "# 做出E2E加密判决"
        },
        {
          "line": 150,
          "text": "# 分析RG日志"
        },
        {
          "line": 156,
          "text": "# 分析Coordinator日志"
        },
        {
          "line": 162,
          "text": "# 检测是否有E2E加密泄露"
        },
        {
          "line": 186,
          "text": "# Check水印是否出现在日志中"
        },
        {
          "line": 196,
          "text": "# Check敏感数据泄露"
        },
        {
          "line": 206,
          "text": "# Calculatepayload可见性评分（0-100，越高越糟糕）"
        },
        {
          "line": 214,
          "text": "# Base64编码数据检测"
        },
        {
          "line": 224,
          "text": "# JSON Web Token检测"
        },
        {
          "line": 233,
          "text": "# 高熵数据检测（可能是加密数据）"
        },
        {
          "line": 235,
          "text": "# 高熵阈值"
        },
        {
          "line": 246,
          "text": "# 统计字符频率"
        },
        {
          "line": 251,
          "text": "# Calculate熵"
        },
        {
          "line": 268,
          "text": "# 新增：检查熵值和二进制指标"
        },
        {
          "line": 272,
          "text": "# 综合评判逻辑"
        },
        {
          "line": 275,
          "text": "# 部分加密，但有泄露"
        },
        {
          "line": 277,
          "text": "# 明确无E2E加密"
        },
        {
          "line": 279,
          "text": "# 强E2E加密指标"
        },
        {
          "line": 281,
          "text": "# 可能有E2E加密"
        },
        {
          "line": 283,
          "text": "# 弱加密指标"
        },
        {
          "line": 285,
          "text": "# 数据不足判断"
        },
        {
          "line": 301,
          "text": "# 分析payload内容"
        },
        {
          "line": 306,
          "text": "# Check水印是否可见"
        },
        {
          "line": 312,
          "text": "# Check敏感数据可见性"
        },
        {
          "line": 314,
          "text": "# 信用卡号"
        },
        {
          "line": 316,
          "text": "# 患者ID"
        },
        {
          "line": 317,
          "text": "# 病历号"
        },
        {
          "line": 326,
          "text": "# 分析中间件日志（如果提供）"
        },
        {
          "line": 329,
          "text": "# Check日志中是否泄露了payload内容"
        },
        {
          "line": 331,
          "text": "# 取前20个字符"
        },
        {
          "line": 336,
          "text": "# Calculate可读性评分 (0-100，越低越好)"
        },
        {
          "line": 340,
          "text": "# 低熵值表示可能是明文"
        },
        {
          "line": 359,
          "text": "# 综合判决"
        },
        {
          "line": 373,
          "text": "# CalculateE2E评分"
        },
        {
          "line": 389,
          "text": "# 根据置信度调整"
        },
        {
          "line": 410,
          "text": "# 默认满分，发现泄露则扣分"
        },
        {
          "line": 413,
          "text": "# 检测注入的水印是否在Response中泄露"
        },
        {
          "line": 422,
          "text": "# 水印泄露严重扣分"
        },
        {
          "line": 431,
          "text": "# 哈希泄露扣分"
        },
        {
          "line": 433,
          "text": "# 检测敏感数据标记泄露"
        },
        {
          "line": 453,
          "text": "# 每个敏感泄露扣15分"
        },
        {
          "line": 455,
          "text": "# 确保分数不低于0"
        },
        {
          "line": 458,
          "text": "# 判定E2E加密有效性"
        },
        {
          "line": 475,
          "text": "# 测试用例"
        },
        {
          "line": 478,
          "text": "# 测试payload注入"
        },
        {
          "line": 488,
          "text": "# 模拟流量分析"
        },
        {
          "line": 493,
          "text": "# 生成报告"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "S2 E2E负载加密存在性检测\n通过水印注入与中间点观察，判定协议是否具有端到端负载加密能力"
        },
        {
          "type": "class",
          "name": "E2EEncryptionDetector",
          "text": "端到端加密检测器"
        },
        {
          "type": "function",
          "name": "create_e2e_detector",
          "text": "CreateE2E加密检测器实例"
        },
        {
          "type": "function",
          "name": "inject_watermark_payload",
          "text": "向payload注入水印标记用于检测"
        },
        {
          "type": "function",
          "name": "create_plaintext_probe_payload",
          "text": "Create明显的明文探测payload"
        },
        {
          "type": "function",
          "name": "analyze_intercepted_traffic",
          "text": "分析拦截到的网络流量，检测是否包含明文水印"
        },
        {
          "type": "function",
          "name": "analyze_middleware_logs",
          "text": "分析中间件日志，检测payload是否在中间层可读"
        },
        {
          "type": "function",
          "name": "_analyze_single_middleware_log",
          "text": "分析单个中间件日志"
        },
        {
          "type": "function",
          "name": "_detect_encryption_indicators",
          "text": "检测加密指标"
        },
        {
          "type": "function",
          "name": "_calculate_entropy",
          "text": "Calculate字符串熵值"
        },
        {
          "type": "function",
          "name": "_make_e2e_verdict",
          "text": "基于分析结果做出E2E加密判决（改进版）"
        },
        {
          "type": "function",
          "name": "analyze_middleware_readability",
          "text": "分析中间点（协调器/RG）对payload的可读性"
        },
        {
          "type": "function",
          "name": "generate_e2e_report",
          "text": "GenerateE2E加密检测报告"
        },
        {
          "type": "function",
          "name": "_calculate_e2e_score",
          "text": "CalculateE2E加密评分（0-100）"
        },
        {
          "type": "function",
          "name": "analyze_response",
          "text": "分析agentResponse内容，检测水印泄露和E2E加密有效性"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/core/observer_agent.py",
      "comments": [
        {
          "line": 52,
          "text": "# FastAPI应用"
        },
        {
          "line": 56,
          "text": "# 消息存储"
        },
        {
          "line": 61,
          "text": "# 回调函数"
        },
        {
          "line": 65,
          "text": "# 统计信息"
        },
        {
          "line": 75,
          "text": "# 窃听检测"
        },
        {
          "line": 135,
          "text": "# Return所有消息，按时间排序"
        },
        {
          "line": 144,
          "text": "# 按时间排序"
        },
        {
          "line": 171,
          "text": "# 存储消息"
        },
        {
          "line": 174,
          "text": "# Update统计"
        },
        {
          "line": 177,
          "text": "# 窃听检测"
        },
        {
          "line": 180,
          "text": "# 回调"
        },
        {
          "line": 203,
          "text": "# 窃听检测"
        },
        {
          "line": 206,
          "text": "# 回调"
        },
        {
          "line": 216,
          "text": "# 限制存储大小"
        },
        {
          "line": 224,
          "text": "# 限制存储大小  "
        },
        {
          "line": 238,
          "text": "# 检测对话轮次"
        },
        {
          "line": 285,
          "text": "# 窃听指标"
        },
        {
          "line": 307,
          "text": "# Record第一次泄露时间"
        },
        {
          "line": 312,
          "text": "# 统计未授权字节数"
        },
        {
          "line": 317,
          "text": "# Record实时镜像启用"
        },
        {
          "line": 320,
          "text": "# Record参与者"
        },
        {
          "line": 323,
          "text": "# 检测敏感数据"
        },
        {
          "line": 333,
          "text": "# 统计回填的未授权数据"
        },
        {
          "line": 340,
          "text": "# 检测敏感数据"
        },
        {
          "line": 343,
          "text": "# Record参与者"
        },
        {
          "line": 352,
          "text": "# 检测姓名模式"
        },
        {
          "line": 357,
          "text": "# 检测SSN模式"
        },
        {
          "line": 361,
          "text": "# 检测电话模式"
        },
        {
          "line": 365,
          "text": "# 检测地址关键词"
        },
        {
          "line": 370,
          "text": "# 检测医疗记录关键词"
        },
        {
          "line": 385,
          "text": "# Calculate窃听成功率"
        },
        {
          "line": 388,
          "text": "# Calculate数据泄露严重程度"
        },
        {
          "line": 418,
          "text": "# 便利函数"
        },
        {
          "line": 423,
          "text": "# 在后台启动服务"
        },
        {
          "line": 431,
          "text": "# Wait服务启动"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "Observer Agent Implementation\nObserver角色Agent实现，支持只读镜像流和历史回填"
        },
        {
          "type": "class",
          "name": "MirrorMessage",
          "text": "镜像消息"
        },
        {
          "type": "class",
          "name": "BackfillMessage",
          "text": "回填消息"
        },
        {
          "type": "class",
          "name": "ObserverAgent",
          "text": "Observer角色Agent"
        },
        {
          "type": "class",
          "name": "EavesdropDetector",
          "text": "窃听检测器"
        },
        {
          "type": "function",
          "name": "create_observer_agent",
          "text": "Create并启动Observer Agent"
        },
        {
          "type": "function",
          "name": "setup_routes",
          "text": "SetupFastAPI路由"
        },
        {
          "type": "function",
          "name": "_handle_mirror_message",
          "text": "Handle镜像消息"
        },
        {
          "type": "function",
          "name": "_handle_backfill",
          "text": "Handle历史回填"
        },
        {
          "type": "function",
          "name": "_store_mirror_message",
          "text": "存储镜像消息"
        },
        {
          "type": "function",
          "name": "_store_backfill_message",
          "text": "存储回填消息"
        },
        {
          "type": "function",
          "name": "_update_stats",
          "text": "更新统计信息"
        },
        {
          "type": "function",
          "name": "_serialize_mirror_message",
          "text": "序列化镜像消息"
        },
        {
          "type": "function",
          "name": "_serialize_backfill_message",
          "text": "序列化回填消息"
        },
        {
          "type": "function",
          "name": "set_mirror_callback",
          "text": "Setup镜像消息回调"
        },
        {
          "type": "function",
          "name": "set_backfill_callback",
          "text": "Setup回填回调"
        },
        {
          "type": "function",
          "name": "run",
          "text": "RunObserver服务"
        },
        {
          "type": "function",
          "name": "analyze_mirror_message",
          "text": "分析镜像消息以检测窃听"
        },
        {
          "type": "function",
          "name": "analyze_backfill",
          "text": "分析历史回填"
        },
        {
          "type": "function",
          "name": "_detect_sensitive_data",
          "text": "检测敏感数据"
        },
        {
          "type": "function",
          "name": "get_metrics",
          "text": "Get窃听指标"
        },
        {
          "type": "function",
          "name": "generate_report",
          "text": "Generate窃听报告"
        },
        {
          "type": "function",
          "name": "receive_message",
          "text": "接收消息（镜像或回填）"
        },
        {
          "type": "function",
          "name": "get_status",
          "text": "GetObserver状态"
        },
        {
          "type": "function",
          "name": "get_messages",
          "text": "Get接收到的消息"
        },
        {
          "type": "function",
          "name": "get_eavesdrop_report",
          "text": "Get窃听报告"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/core/pcap_analyzer.py",
      "comments": [
        {
          "line": 27,
          "text": "# Create临时pcap文件"
        },
        {
          "line": 31,
          "text": "# 构建tcpdump命令"
        },
        {
          "line": 36,
          "text": "# 轮转时间"
        },
        {
          "line": 37,
          "text": "# 只保留1个文件"
        },
        {
          "line": 43,
          "text": "# 默认过滤常用端口"
        },
        {
          "line": 47,
          "text": "# Start后台捕获进程"
        },
        {
          "line": 65,
          "text": "# Wait捕获完成或超时"
        },
        {
          "line": 68,
          "text": "# 强制终止进程"
        },
        {
          "line": 79,
          "text": "# Wait文件系统同步"
        },
        {
          "line": 82,
          "text": "# 分析捕获的包"
        },
        {
          "line": 95,
          "text": "# Wait文件创建，最多等待5秒"
        },
        {
          "line": 103,
          "text": "# Check文件权限和目录"
        },
        {
          "line": 112,
          "text": "# Check文件大小"
        },
        {
          "line": 131,
          "text": "# 使用tcpdump读取并转换为文本"
        },
        {
          "line": 134,
          "text": "# 显示ASCII内容"
        },
        {
          "line": 135,
          "text": "# 捕获完整包"
        },
        {
          "line": 146,
          "text": "# 分析文本内容"
        },
        {
          "line": 150,
          "text": "# Cleanup临时文件"
        },
        {
          "line": 175,
          "text": "# 敏感关键字列表"
        },
        {
          "line": 182,
          "text": "# 统计明文字节数（粗略估算）"
        },
        {
          "line": 186,
          "text": "# 检测敏感关键字"
        },
        {
          "line": 193,
          "text": "# 检测HTTP明文传输"
        },
        {
          "line": 196,
          "text": "# 检测JSON/XML明文负载"
        },
        {
          "line": 222,
          "text": "# Checkmitmproxy是否可用"
        },
        {
          "line": 229,
          "text": "# Startmitmdump透明代理"
        },
        {
          "line": 243,
          "text": "# Wait代理启动"
        },
        {
          "line": 281,
          "text": "# macOS: 添加到Keychain"
        },
        {
          "line": 314,
          "text": "# StartMITM代理（如果启用）"
        },
        {
          "line": 326,
          "text": "# Start网络包捕获"
        },
        {
          "line": 334,
          "text": "# Wait捕获完成并分析"
        },
        {
          "line": 341,
          "text": "# StopMITM代理"
        },
        {
          "line": 349,
          "text": "# 测试运行"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "S2旁路抓包分析器\n实现透明网络流量抓包与明文检测功能"
        },
        {
          "type": "class",
          "name": "PcapAnalyzer",
          "text": "网络包捕获与分析器"
        },
        {
          "type": "class",
          "name": "MitmProxyController",
          "text": "MITM代理控制器（使用mitmproxy透明模式）"
        },
        {
          "type": "function",
          "name": "run_pcap_mitm_test",
          "text": "Run旁路抓包+MITM综合测试"
        },
        {
          "type": "function",
          "name": "start_capture",
          "text": "启动网络包捕获"
        },
        {
          "type": "function",
          "name": "stop_capture",
          "text": "停止捕获并分析结果"
        },
        {
          "type": "function",
          "name": "analyze_pcap",
          "text": "分析pcap文件，提取明文数据"
        },
        {
          "type": "function",
          "name": "_analyze_content",
          "text": "分析网络包内容，检测明文数据"
        },
        {
          "type": "function",
          "name": "start_transparent_proxy",
          "text": "启动透明代理模式"
        },
        {
          "type": "function",
          "name": "stop_proxy",
          "text": "停止MITM代理"
        },
        {
          "type": "function",
          "name": "get_ca_cert_path",
          "text": "GetMITM根CA证书路径"
        },
        {
          "type": "function",
          "name": "install_ca_cert",
          "text": "安装MITM根CA到系统（仅用于测试）"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/core/registration_gateway.py",
      "comments": [
        {
          "line": 24,
          "text": "# 引入ANP签名校验所需工具（必须可用，否则直接报错）"
        },
        {
          "line": 33,
          "text": "# 配置日志"
        },
        {
          "line": 71,
          "text": "# 存储结构"
        },
        {
          "line": 76,
          "text": "# Validate模式：transparent | native_delegated | strict"
        },
        {
          "line": 77,
          "text": "# 默认使用原生委托（只用协议原生能力做判定，不做RG兜底）"
        },
        {
          "line": 79,
          "text": "# ANP可选DID文档探针（基准模式仅记录，严格模式强制）"
        },
        {
          "line": 81,
          "text": "# 重放/时间窗观测指标（仅记录，不阻断）"
        },
        {
          "line": 87,
          "text": "# 配置参数"
        },
        {
          "line": 88,
          "text": "# 1小时"
        },
        {
          "line": 92,
          "text": "# 注册协议验证器"
        },
        {
          "line": 120,
          "text": "# Observer订阅端点已移除 - 新S2设计不需要Observer机制"
        },
        {
          "line": 144,
          "text": "# Validate必需字段"
        },
        {
          "line": 154,
          "text": "# 默认为doctor角色"
        },
        {
          "line": 158,
          "text": "# Check协议支持"
        },
        {
          "line": 162,
          "text": "# Create注册记录"
        },
        {
          "line": 174,
          "text": "# 协议验证（记录耗时与归因）"
        },
        {
          "line": 180,
          "text": "# Record归因原因"
        },
        {
          "line": 194,
          "text": "# Check会话限制"
        },
        {
          "line": 197,
          "text": "# 存储注册记录"
        },
        {
          "line": 200,
          "text": "# Update会话信息"
        },
        {
          "line": 231,
          "text": "# CheckObserver证明要求"
        },
        {
          "line": 235,
          "text": "# Check会话是否存在"
        },
        {
          "line": 241,
          "text": "# CheckObserver数量限制"
        },
        {
          "line": 246,
          "text": "# CreateObserver注册记录"
        },
        {
          "line": 249,
          "text": "# 特殊协议标识"
        },
        {
          "line": 256,
          "text": "# Observer默认通过验证"
        },
        {
          "line": 259,
          "text": "# 存储记录"
        },
        {
          "line": 281,
          "text": "# 构建参与者目录"
        },
        {
          "line": 312,
          "text": "# Check角色冲突"
        },
        {
          "line": 322,
          "text": "# Create新会话"
        },
        {
          "line": 331,
          "text": "# Update现有会话"
        },
        {
          "line": 347,
          "text": "# Cleanup相关注册记录"
        },
        {
          "line": 357,
          "text": "# 协议验证器实现"
        },
        {
          "line": 367,
          "text": "# 协议强绑定：仅当record.protocol == 'agora'时接受"
        },
        {
          "line": 371,
          "text": "# 校验必需字段（仅hash与sources）"
        },
        {
          "line": 382,
          "text": "# 使用Agora原生工具校验协议hash与来源"
        },
        {
          "line": 396,
          "text": "# 可选：端点归属证明（受配置控制，默认关闭）"
        },
        {
          "line": 403,
          "text": "# 通过后生成会话令牌"
        },
        {
          "line": 418,
          "text": "# 时间窗与nonce"
        },
        {
          "line": 425,
          "text": "# 仅记录"
        },
        {
          "line": 431,
          "text": "# Record重放嫌疑"
        },
        {
          "line": 436,
          "text": "# 可选：SDK原生challenge-echo探针"
        },
        {
          "line": 443,
          "text": "# 通过/message发送标准A2A消息体，要求服务端回执（由adapter统一封装）"
        },
        {
          "line": 457,
          "text": "# 统一JSONResponse：包含events数组；若包含至少一个事件即视为回执成功"
        },
        {
          "line": 473,
          "text": "# 1) 协议强绑定"
        },
        {
          "line": 477,
          "text": "# 2) 必需字段与时间窗/nonce 防重放"
        },
        {
          "line": 500,
          "text": "# 3) 端点原生探测：/agents 与 /ping"
        },
        {
          "line": 516,
          "text": "# 强制名称绑定：注册时的agent_id必须与/agents中的acp_agent_name一致"
        },
        {
          "line": 526,
          "text": "# 通过校验，签发会话令牌"
        },
        {
          "line": 534,
          "text": "# 透明模式：仅记录，不放行（交由上层决定），这里仍返回未验证"
        },
        {
          "line": 538,
          "text": "# 必需字段"
        },
        {
          "line": 544,
          "text": "# 时间窗检查（记录重放嫌疑，但基准模式下不作为RG兜底阻断）"
        },
        {
          "line": 569,
          "text": "# 可选DID文档探针（严格模式强制通过）"
        },
        {
          "line": 584,
          "text": "# 通过后签发会话令牌"
        },
        {
          "line": 593,
          "text": "# Direct协议无验证（最弱）"
        },
        {
          "line": 604,
          "text": "# 示例配置"
        },
        {
          "line": 612,
          "text": "# 使用8001端口避免与其他服务冲突"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "Registration Gateway (RG) - 注册网关核心服务\n\n统一的Agent注册与目录服务，支持多协议准入控制和身份验证。\n提供REST API接口供Agent注册、订阅和目录查询。"
        },
        {
          "type": "class",
          "name": "RegistrationRecord",
          "text": "注册记录数据结构"
        },
        {
          "type": "class",
          "name": "ConversationSession",
          "text": "会话信息数据结构"
        },
        {
          "type": "class",
          "name": "RegistrationGateway",
          "text": "注册网关核心类"
        },
        {
          "type": "function",
          "name": "_setup_protocol_verifiers",
          "text": "Setup协议验证器"
        },
        {
          "type": "function",
          "name": "setup_routes",
          "text": "SetupREST API路由"
        },
        {
          "type": "function",
          "name": "_handle_register",
          "text": "HandleAgent注册请求"
        },
        {
          "type": "function",
          "name": "_handle_subscribe",
          "text": "HandleObserver订阅请求"
        },
        {
          "type": "function",
          "name": "_handle_directory",
          "text": "Handle目录查询请求"
        },
        {
          "type": "function",
          "name": "_validate_session_constraints",
          "text": "验证会话约束条件"
        },
        {
          "type": "function",
          "name": "_update_conversation_session",
          "text": "更新会话信息"
        },
        {
          "type": "function",
          "name": "_cleanup_expired_sessions",
          "text": "清理过期会话"
        },
        {
          "type": "function",
          "name": "_verify_agora",
          "text": "验证Agora协议（基准模式：仅校验protocol_hash与protocol_sources；不做RG层反重放阻断）"
        },
        {
          "type": "function",
          "name": "_verify_a2a",
          "text": "验证A2A协议\n- 最小要求：a2a_token+timestamp+nonce（始终启用）\n- 可选：SDK原生challenge-echo探针（a2a_enable_challenge，默认False，以保持公平）"
        },
        {
          "type": "function",
          "name": "_verify_acp",
          "text": "验证ACP协议（原生校验，无任何fallback）"
        },
        {
          "type": "function",
          "name": "_verify_anp",
          "text": "验证ANP协议 - 使用原生DID签名验真，不做RG兜底放行"
        },
        {
          "type": "function",
          "name": "_verify_direct",
          "text": "验证Direct协议"
        },
        {
          "type": "function",
          "name": "run",
          "text": "Run注册网关服务"
        },
        {
          "type": "function",
          "name": "register_agent",
          "text": "Agent注册端点"
        },
        {
          "type": "function",
          "name": "get_directory",
          "text": "Get会话目录"
        },
        {
          "type": "function",
          "name": "health_check",
          "text": "健康检查"
        },
        {
          "type": "function",
          "name": "cleanup_sessions",
          "text": "清理过期会话"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/core/rg_coordinator.py",
      "comments": [
        {
          "line": 54,
          "text": "# FastAPI应用"
        },
        {
          "line": 58,
          "text": "# 参与者管理"
        },
        {
          "line": 60,
          "text": "# observers属性已移除 - 新S2设计不需要Observer机制"
        },
        {
          "line": 62,
          "text": "# 消息历史（用于backfill）"
        },
        {
          "line": 66,
          "text": "# Bridge配置"
        },
        {
          "line": 72,
          "text": "# 轮询配置"
        },
        {
          "line": 76,
          "text": "# 性能优化：缓存协议后端注册表"
        },
        {
          "line": 93,
          "text": "# 统一关联ID：如未提供则生成"
        },
        {
          "line": 99,
          "text": "# Extract探针配置（如果存在）"
        },
        {
          "line": 106,
          "text": "# 对于未注册发送者的错误，使用debug级别（这通常是攻击测试）"
        },
        {
          "line": 123,
          "text": "# 内容抽取"
        },
        {
          "line": 126,
          "text": "# 角色推断"
        },
        {
          "line": 137,
          "text": "# 入库"
        },
        {
          "line": 139,
          "text": "# 镜像给Observers"
        },
        {
          "line": 166,
          "text": "# Observer机制已移除"
        },
        {
          "line": 174,
          "text": "# 立即执行一次参与者刷新，确保启动时有参与者信息"
        },
        {
          "line": 178,
          "text": "# Start目录轮询任务"
        },
        {
          "line": 181,
          "text": "# StartHTTP服务器"
        },
        {
          "line": 188,
          "text": "# Wait服务器启动"
        },
        {
          "line": 190,
          "text": "# 再次刷新参与者，确保服务器启动后有最新信息"
        },
        {
          "line": 224,
          "text": "# 404表示会话不存在，正常情况"
        },
        {
          "line": 233,
          "text": "# new_observers已移除 - 新S2设计不需要Observer机制"
        },
        {
          "line": 251,
          "text": "# Observer处理已移除 - 新S2设计不需要Observer机制"
        },
        {
          "line": 254,
          "text": "# 检测新加入的参与者"
        },
        {
          "line": 260,
          "text": "# self.observers已移除 - 新S2设计不需要Observer机制"
        },
        {
          "line": 264,
          "text": "# Validate发送者 - 如果参与者信息为空，尝试强制刷新一次"
        },
        {
          "line": 268,
          "text": "# 给RG一点时间处理"
        },
        {
          "line": 271,
          "text": "# 提供详细的调试信息"
        },
        {
          "line": 277,
          "text": "# Check发送权限"
        },
        {
          "line": 281,
          "text": "# 角色配对约束：仅允许 doctor_a ↔ doctor_b 之间通信"
        },
        {
          "line": 290,
          "text": "# Validate接收者（如果指定）"
        },
        {
          "line": 294,
          "text": "# Extract消息内容"
        },
        {
          "line": 297,
          "text": "# Create消息记录"
        },
        {
          "line": 309,
          "text": "# 存储消息历史"
        },
        {
          "line": 312,
          "text": "# 路由消息"
        },
        {
          "line": 315,
          "text": "# 向Observers广播镜像"
        },
        {
          "line": 336,
          "text": "# 支持多种payload格式"
        },
        {
          "line": 350,
          "text": "# 限制历史大小"
        },
        {
          "line": 357,
          "text": "# 广播到所有非Observer参与者"
        },
        {
          "line": 369,
          "text": "# 单播到指定接收者"
        },
        {
          "line": 380,
          "text": "# Observer广播已移除 - 新S2设计不需要Observer机制"
        },
        {
          "line": 383,
          "text": "# 构建Observer镜像payload"
        },
        {
          "line": 398,
          "text": "# Observer镜像逻辑已移除 - 新S2设计不需要Observer机制"
        },
        {
          "line": 409,
          "text": "# Get最近的消息"
        },
        {
          "line": 430,
          "text": "# 直接向Observer的/message端点发送回填"
        },
        {
          "line": 460,
          "text": "# 使用缓存的注册表，避免重复查询"
        },
        {
          "line": 466,
          "text": "# 从payload中提取correlation_id（兼容现有逻辑）"
        },
        {
          "line": 469,
          "text": "# Add超时控制，避免长时间阻塞"
        },
        {
          "line": 473,
          "text": "# 35秒超时，给各协议后端足够时间处理"
        },
        {
          "line": 481,
          "text": "# 管理接口"
        },
        {
          "line": 495,
          "text": "# Observer机制已移除"
        },
        {
          "line": 530,
          "text": "# Observer回填已移除 - 新S2设计不需要Observer机制"
        },
        {
          "line": 536,
          "text": "# 使用指定限制或默认限制"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "RG-Integrated Coordinator\n基于注册网关(RG)的协调器实现，支持动态路由和Observer角色"
        },
        {
          "type": "class",
          "name": "ParticipantInfo",
          "text": "参与者信息"
        },
        {
          "type": "class",
          "name": "ConversationMessage",
          "text": "会话消息"
        },
        {
          "type": "class",
          "name": "RGCoordinator",
          "text": "基于RG的协调器"
        },
        {
          "type": "function",
          "name": "setup_routes",
          "text": "SetupHTTP路由"
        },
        {
          "type": "function",
          "name": "start",
          "text": "启动协调器"
        },
        {
          "type": "function",
          "name": "stop",
          "text": "停止协调器"
        },
        {
          "type": "function",
          "name": "_directory_polling_loop",
          "text": "目录轮询循环"
        },
        {
          "type": "function",
          "name": "_refresh_participants",
          "text": "刷新参与者列表"
        },
        {
          "type": "function",
          "name": "_update_participants",
          "text": "更新参与者信息"
        },
        {
          "type": "function",
          "name": "route_message",
          "text": "路由消息"
        },
        {
          "type": "function",
          "name": "_get_backend_registry",
          "text": "Get缓存的协议后端注册表"
        },
        {
          "type": "function",
          "name": "_extract_message_content",
          "text": "提取消息内容"
        },
        {
          "type": "function",
          "name": "_store_message",
          "text": "存储消息到历史"
        },
        {
          "type": "function",
          "name": "_deliver_message",
          "text": "投递消息到目标"
        },
        {
          "type": "function",
          "name": "_broadcast_to_observers",
          "text": "向Observers广播镜像 - 已禁用"
        },
        {
          "type": "function",
          "name": "_provide_backfill",
          "text": "为Observer提供历史回填"
        },
        {
          "type": "function",
          "name": "_send_to_endpoint",
          "text": "协议无关直连HTTP发送。\n约定：Observer等通用HTTP接收方暴露 /message 接口。"
        },
        {
          "type": "function",
          "name": "_send_to_participant",
          "text": "发送消息到参与者：通过协议注册表分发到对应后端客户端。\n\n要求：\n- 后端实现必须为原生协议，不允许mock/fallback\n- 协调器不再拼装各协议负载细节，由各client实现responsible for"
        },
        {
          "type": "function",
          "name": "get_conversation_status",
          "text": "Get会话状态"
        },
        {
          "type": "function",
          "name": "force_refresh_directory",
          "text": "强制刷新目录"
        },
        {
          "type": "function",
          "name": "get_message_history",
          "text": "Get消息历史"
        },
        {
          "type": "function",
          "name": "request_observer_backfill",
          "text": "为Observer请求历史回填 - 已禁用"
        },
        {
          "type": "function",
          "name": "route_message_endpoint",
          "text": "消息路由端点"
        },
        {
          "type": "function",
          "name": "deliver_message_endpoint",
          "text": "由目标Agent回投的业务回执。\n期望字段：sender_id, receiver_id, correlation_id, content/text/body 可三选一。"
        },
        {
          "type": "function",
          "name": "get_conversation_status_endpoint",
          "text": "Get会话状态"
        },
        {
          "type": "function",
          "name": "get_message_history_endpoint",
          "text": "Get消息历史"
        },
        {
          "type": "function",
          "name": "health_check",
          "text": "健康检查"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/a2a/__init__.py",
      "comments": [
        {
          "line": 30,
          "text": "# Auto-register发送后端"
        }
      ],
      "docstrings": []
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/a2a/client.py",
      "comments": [
        {
          "line": 32,
          "text": "# 先创建基础消息结构"
        },
        {
          "line": 44,
          "text": "# Process探针配置"
        },
        {
          "line": 46,
          "text": "# TLS降级探针"
        },
        {
          "line": 49,
          "text": "# 配置弱SSL上下文"
        },
        {
          "line": 59,
          "text": "# Setup弱加密套件"
        },
        {
          "line": 66,
          "text": "# 重放攻击探针"
        },
        {
          "line": 71,
          "text": "# 在消息中注入重放标识"
        },
        {
          "line": 74,
          "text": "# 明文嗅探探针"
        },
        {
          "line": 82,
          "text": "# DID伪造探针"
        },
        {
          "line": 88,
          "text": "# 在消息元数据中注入伪造身份"
        },
        {
          "line": 92,
          "text": "# 会话劫持探针"
        },
        {
          "line": 97,
          "text": "# 在请求头中注入会话token"
        },
        {
          "line": 100,
          "text": "# E2E负载加密检测探针（新增）"
        },
        {
          "line": 105,
          "text": "# 修改原始payload注入水印"
        },
        {
          "line": 110,
          "text": "# Create明文探测payload"
        },
        {
          "line": 118,
          "text": "# 时钟漂移矩阵探针（新增）"
        },
        {
          "line": 125,
          "text": "# 随机选择一个漂移档位进行测试"
        },
        {
          "line": 128,
          "text": "# 随机选择正负漂移"
        },
        {
          "line": 133,
          "text": "# 时间戳注入到A2A消息中"
        },
        {
          "line": 141,
          "text": "# 窗口测试：注入重复/乱序标记"
        },
        {
          "line": 151,
          "text": "# Update消息文本（可能已被探针修改）"
        },
        {
          "line": 191,
          "text": "# 使用直接代码执行方式，类似ANP的修复方法"
        },
        {
          "line": 194,
          "text": "# 找到项目root directory（包含script目录的地方）"
        },
        {
          "line": 196,
          "text": "# 从protocol_backends/a2a/client.py回到项目root directory"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "A2A 原生客户端：通过 a2a 服务器的 /message 端点发送。\n禁止 mock/fallback；保持 a2a 载荷结构。"
        },
        {
          "type": "function",
          "name": "spawn",
          "text": "启动A2A服务器进程"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/a2a/comm.py",
      "comments": [
        {
          "line": 52,
          "text": "# 标识隐私测试协议"
        },
        {
          "line": 135,
          "text": "# 标识隐私测试上下文"
        }
      ],
      "docstrings": []
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/a2a/registration_adapter.py",
      "comments": [
        {
          "line": 40,
          "text": "# 探测 A2A 端点健康状态"
        },
        {
          "line": 47,
          "text": "# 构造 A2A 原生证明"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "A2A Protocol Registration Adapter\n使用原生 A2A 服务器接口进行注册配合（无 mock / 无 fallback）"
        },
        {
          "type": "class",
          "name": "A2ARegistrationAdapter",
          "text": "A2A 协议注册适配器（配合 RegistrationGateway）\n\n设计目标：\n- 使用原生 A2A 服务接口进行端点探测与证明构造（/health）\n- 不使用任何 mock、fallback 或虚拟模式\n- 与其他协议适配器提供一致的外部方法签名"
        },
        {
          "type": "function",
          "name": "register_agent",
          "text": "注册 A2A Agent 到 RG\n\n要求：endpoint 必须是原生 A2A 服务器根地址（可直接访问 /health）"
        },
        {
          "type": "function",
          "name": "subscribe_observer",
          "text": "订阅 Observer 到 RG（独立于 A2A 服务器）"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/a2a/server.py",
      "comments": [
        {
          "line": 44,
          "text": "# 从context获取输入消息（优先使用A2A SDK提供的API）"
        },
        {
          "line": 53,
          "text": "# 从消息中提取文本内容"
        },
        {
          "line": 61,
          "text": "# Extractcorrelation_id前缀 [CID:...]"
        },
        {
          "line": 77,
          "text": "# 生成医生回复"
        },
        {
          "line": 81,
          "text": "# Send回复到事件队列"
        },
        {
          "line": 88,
          "text": "# 异步回投协调器/deliver"
        },
        {
          "line": 98,
          "text": "# Send错误消息"
        },
        {
          "line": 108,
          "text": "# 简单实现，不需要特殊处理"
        },
        {
          "line": 133,
          "text": "# Create执行器"
        },
        {
          "line": 136,
          "text": "# 构造Agent Card（传给适配器用于/.well-known）"
        },
        {
          "line": 167,
          "text": "# 使用项目自带A2A Starlette应用（内置/health）"
        },
        {
          "line": 171,
          "text": "# 兜底"
        },
        {
          "line": 204,
          "text": "# 从环境变量获取配置"
        },
        {
          "line": 217,
          "text": "# 默认启动Doctor A"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "A2A Protocol Server for Safety Tech\n简化的A2A协议服务器实现，支持Doctor A/B代理、健康检查、回执投递等"
        },
        {
          "type": "class",
          "name": "A2ADoctorExecutor",
          "text": "A2A医生代理执行器"
        },
        {
          "type": "function",
          "name": "create_doctor_app",
          "text": "CreateA2A医生代理应用（使用本项目A2A适配器，内置/health与/message）"
        },
        {
          "type": "function",
          "name": "run_server",
          "text": "RunA2A服务器"
        },
        {
          "type": "function",
          "name": "execute",
          "text": "ExecuteA2A代理逻辑"
        },
        {
          "type": "function",
          "name": "cancel",
          "text": "取消任务"
        },
        {
          "type": "function",
          "name": "_deliver_receipt",
          "text": "回投回执到协调器"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/acp/__init__.py",
      "comments": [
        {
          "line": 17,
          "text": "# Auto-register发送后端"
        },
        {
          "line": 23,
          "text": "# 注册失败不应阻塞module导入；运行时会显式报错"
        }
      ],
      "docstrings": []
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/acp/client.py",
      "comments": [
        {
          "line": 28,
          "text": "# Extract文本与关联ID，按ACP SDK RunCreateRequest(messages)格式"
        },
        {
          "line": 37,
          "text": "# Import必要的module"
        },
        {
          "line": 40,
          "text": "# Process探针配置"
        },
        {
          "line": 42,
          "text": "# TLS降级探针"
        },
        {
          "line": 45,
          "text": "# 配置弱SSL上下文"
        },
        {
          "line": 61,
          "text": "# 重放攻击探针"
        },
        {
          "line": 66,
          "text": "# 在ACP消息中注入重放标识"
        },
        {
          "line": 69,
          "text": "# 明文嗅探探针"
        },
        {
          "line": 77,
          "text": "# DID伪造探针（ACP特定）"
        },
        {
          "line": 82,
          "text": "# 在ACP请求头中注入伪造身份"
        },
        {
          "line": 90,
          "text": "# 会话劫持探针"
        },
        {
          "line": 100,
          "text": "# MITM代理探针"
        },
        {
          "line": 110,
          "text": "# E2E负载加密检测探针（新增）"
        },
        {
          "line": 115,
          "text": "# 修改原始payload注入水印"
        },
        {
          "line": 120,
          "text": "# Create明文探测payload"
        },
        {
          "line": 128,
          "text": "# 证书有效性矩阵探针（新增）"
        },
        {
          "line": 132,
          "text": "# 过期证书测试"
        },
        {
          "line": 141,
          "text": "# 自签名证书测试"
        },
        {
          "line": 143,
          "text": "# 强制严格验证模式测试自签名拒绝"
        },
        {
          "line": 145,
          "text": "# 严格验证"
        },
        {
          "line": 148,
          "text": "# 主机名不匹配测试"
        },
        {
          "line": 151,
          "text": "# 这里可以修改目标主机名来测试不匹配"
        },
        {
          "line": 153,
          "text": "# 时钟漂移矩阵探针（增强版）"
        },
        {
          "line": 160,
          "text": "# 随机选择一个漂移档位进行测试"
        },
        {
          "line": 163,
          "text": "# 随机选择正负漂移"
        },
        {
          "line": 168,
          "text": "# 增强的时间戳注入"
        },
        {
          "line": 176,
          "text": "# 窗口测试：注入重复/乱序标记"
        },
        {
          "line": 187,
          "text": "# 旁路抓包探针（新增）"
        },
        {
          "line": 192,
          "text": "# 实际的pcap捕获将在更高层的runner中启动"
        },
        {
          "line": 259,
          "text": "# 传递LLM所需环境变量，确保服务端能够正常生成回复"
        },
        {
          "line": 260,
          "text": "# 支持NVIDIA和OpenAI兼容的环境变量"
        },
        {
          "line": 264,
          "text": "# forS1快速失败/降超时"
        },
        {
          "line": 268,
          "text": "# SetupNVIDIA默认值（如环境变量未Setup）"
        },
        {
          "line": 273,
          "text": "# If未SetupS1快速模式，为测试稳定性默认启用轻量模式"
        },
        {
          "line": 278,
          "text": "# Calculate项目root directory路径"
        },
        {
          "line": 281,
          "text": "# 5级向上到项目root directory"
        },
        {
          "line": 300,
          "text": "# 给进程一点时间启动，检查是否立即失败"
        },
        {
          "line": 351,
          "text": "# 优先 /agents"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "ACP 原生客户端：基于 acp-sdk 暴露的 /runs 端点发送消息。\n禁止任何 mock/fallback；仅按原生接口调用。"
        },
        {
          "type": "function",
          "name": "spawn",
          "text": "启动原生 acp-sdk 服务器。\n改为通过内联 -c 显式调用 create_doctor_*_server(port).run()，确保名称与端口绑定正确。"
        },
        {
          "type": "function",
          "name": "register",
          "text": "使用 ACPRegistrationAdapter 向RG注册。"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/acp/registration_adapter.py",
      "comments": [
        {
          "line": 43,
          "text": "# 探测 ACP 端点，获取可用的 agent 名称"
        },
        {
          "line": 58,
          "text": "# 选择一个 ACP agent 名称用于证明（优先同名，其次第一个）"
        },
        {
          "line": 137,
          "text": "# acp_sdk /agents 返回形如 {\"agents\":[{\"name\": \"...\", ...}, ...]}"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "ACP Protocol Registration Adapter\n使用原生 ACP 服务器接口进行注册/订阅配合（无 mock / 无 fallback）"
        },
        {
          "type": "class",
          "name": "ACPRegistrationAdapter",
          "text": "ACP 协议注册适配器（配合 RegistrationGateway）\n\n设计目标：\n- 使用原生 ACP 服务接口进行端点探测与证明构造（/agents, /ping）\n- 不使用任何 mock、fallback 或虚拟模式\n- 与 AgoraRegistrationAdapter 提供一致的外部方法签名"
        },
        {
          "type": "function",
          "name": "register_agent",
          "text": "注册 ACP Agent 到 RG\n\n要求：endpoint 必须是原生 ACP 服务器根地址（可直接访问 /agents 与 /ping）"
        },
        {
          "type": "function",
          "name": "subscribe_observer",
          "text": "订阅 Observer 到 RG（独立于 ACP 服务器）"
        },
        {
          "type": "function",
          "name": "_extract_agent_names",
          "text": "从 /agents Response中提取 agent 名称列表（兼容 acp_sdk 的模型结构）"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/acp/server.py",
      "comments": [
        {
          "line": 26,
          "text": "# 支持dict或list格式"
        },
        {
          "line": 91,
          "text": "# Extract输入内容 - 支持多种格式"
        },
        {
          "line": 95,
          "text": "# Process不同的输入格式"
        },
        {
          "line": 97,
          "text": "# 格式1: {\"content\": [{\"type\": \"text\", \"text\": \"...\"}]}"
        },
        {
          "line": 105,
          "text": "# 格式2: [{\"role\": \"user\", \"parts\": [{\"content_type\": \"text/plain\", \"content\": \"...\"}]}]"
        },
        {
          "line": 119,
          "text": "# Extractcorrelation_id前缀 [CID:...]"
        },
        {
          "line": 130,
          "text": "# 生成医生回复"
        },
        {
          "line": 137,
          "text": "# CheckLLM回复是否包含错误信息 - 防止伪装成功"
        },
        {
          "line": 142,
          "text": "# 异步回投协调器/deliver"
        },
        {
          "line": 148,
          "text": "# ReturnACP标准格式Response"
        },
        {
          "line": 184,
          "text": "# 不再静默失败，记录错误但继续执行"
        },
        {
          "line": 204,
          "text": "# 从环境变量获取端口，或使用默认值"
        },
        {
          "line": 217,
          "text": "# 默认启动Doctor A"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "ACP Protocol Server\n完整的ACP协议服务器实现，支持Doctor A/B代理、健康检查、回执投递等"
        },
        {
          "type": "class",
          "name": "AgentRunRequest",
          "text": "ACP Agent执行请求"
        },
        {
          "type": "class",
          "name": "AgentRunResponse",
          "text": "ACP Agent执行Response"
        },
        {
          "type": "class",
          "name": "ACPServer",
          "text": "ACP协议服务器"
        },
        {
          "type": "function",
          "name": "create_doctor_a_server",
          "text": "CreateDoctor A服务器"
        },
        {
          "type": "function",
          "name": "create_doctor_b_server",
          "text": "CreateDoctor B服务器"
        },
        {
          "type": "function",
          "name": "setup_routes",
          "text": "SetupHTTP路由"
        },
        {
          "type": "function",
          "name": "_deliver_receipt",
          "text": "回投回执到协调器"
        },
        {
          "type": "function",
          "name": "run",
          "text": "启动服务器"
        },
        {
          "type": "function",
          "name": "get_agents",
          "text": "Get可用代理列表"
        },
        {
          "type": "function",
          "name": "health_check",
          "text": "健康检查"
        },
        {
          "type": "function",
          "name": "ping",
          "text": "ACP协议探测端点"
        },
        {
          "type": "function",
          "name": "run_agent",
          "text": "Execute代理任务"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/agora/__init__.py",
      "comments": [
        {
          "line": 28,
          "text": "# Auto-register发送后端"
        }
      ],
      "docstrings": []
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/agora/client.py",
      "comments": [
        {
          "line": 26,
          "text": "# 定义在module级，避免SDK在构建JSON Schema时找不到类型"
        },
        {
          "line": 36,
          "text": "# 严格导入官方SDK"
        },
        {
          "line": 39,
          "text": "# 基于 llm_wrapper 的LangChain兼容模型，实现Runnable接口"
        },
        {
          "line": 54,
          "text": "# Extract用户侧文本（容错拼接）"
        },
        {
          "line": 58,
          "text": "# 支持 LangChain BaseMessage 或 dict"
        },
        {
          "line": 71,
          "text": "# ReturnLangChain兼容的消息对象"
        },
        {
          "line": 74,
          "text": "# Agora Toolformer 可能会调用底层模型的 bind_tools"
        },
        {
          "line": 79,
          "text": "# 回退到简单实现"
        },
        {
          "line": 105,
          "text": "# 使用官方 LangChainToolformer，但底层模型由 llm_wrapper 驱动"
        },
        {
          "line": 111,
          "text": "# Try备用导入路径"
        },
        {
          "line": 117,
          "text": "# 为避免进入需要工具实现的多轮协议，禁止自动选择/协商/实现协议"
        },
        {
          "line": 125,
          "text": "# 按照官方文档，不指定返回类型，让SDK自动处理（参考: https://agoraprotocol.org/docs/getting-started）"
        },
        {
          "line": 139,
          "text": "# 函数体为空，由Agora SDK自动处理通信逻辑"
        },
        {
          "line": 143,
          "text": "# 全局变量已在函数开头声明"
        },
        {
          "line": 165,
          "text": "# 确保SDK正确初始化"
        },
        {
          "line": 172,
          "text": "# 可选注入CID前缀（仅作为业务文本，不改变SDK语义）"
        },
        {
          "line": 179,
          "text": "# Process探针配置"
        },
        {
          "line": 181,
          "text": "# TLS降级探针（Agora原生通信）"
        },
        {
          "line": 185,
          "text": "# Agora原生SDK可能使用内部TLS配置，这里记录尝试"
        },
        {
          "line": 189,
          "text": "# 重放攻击探针"
        },
        {
          "line": 194,
          "text": "# 在Agora消息中注入重放标识"
        },
        {
          "line": 197,
          "text": "# 明文嗅探探针"
        },
        {
          "line": 205,
          "text": "# DID伪造探针（Agora特定）"
        },
        {
          "line": 210,
          "text": "# 在Agora消息中注入伪造身份标识"
        },
        {
          "line": 213,
          "text": "# 会话劫持探针"
        },
        {
          "line": 218,
          "text": "# 在Agora消息中注入会话标识"
        },
        {
          "line": 221,
          "text": "# MITM代理探针（Agora原生通信的代理测试）"
        },
        {
          "line": 226,
          "text": "# Agora SDK可能不直接支持HTTP代理，记录尝试"
        },
        {
          "line": 229,
          "text": "# 网络扰动探针（Agora特定的延迟注入）"
        },
        {
          "line": 234,
          "text": "# 在Agora发送前添加人工延迟"
        },
        {
          "line": 237,
          "text": "# 数据包丢失模拟"
        },
        {
          "line": 243,
          "text": "# 模拟数据包丢失，返回超时错误"
        },
        {
          "line": 250,
          "text": "# E2E负载加密检测探针（新增）"
        },
        {
          "line": 255,
          "text": "# 修改原始payload注入水印"
        },
        {
          "line": 260,
          "text": "# Create明文探测payload"
        },
        {
          "line": 268,
          "text": "# 时钟漂移矩阵探针（新增）"
        },
        {
          "line": 275,
          "text": "# 随机选择一个漂移档位进行测试"
        },
        {
          "line": 278,
          "text": "# 随机选择正负漂移"
        },
        {
          "line": 283,
          "text": "# 时间戳注入到Agora消息中"
        },
        {
          "line": 291,
          "text": "# 窗口测试：注入重复/乱序标记"
        },
        {
          "line": 301,
          "text": "# 使用原生Agora SDK进行通信"
        },
        {
          "line": 305,
          "text": "# 直接使用Agora SDK发送"
        },
        {
          "line": 308,
          "text": "# 正确处理SDK返回的结果，转换为标准格式"
        },
        {
          "line": 318,
          "text": "# Return标准格式"
        },
        {
          "line": 344,
          "text": "# 使用我们新增的原生 ReceiverServer 启动"
        },
        {
          "line": 349,
          "text": "# Setup工作目录为项目root directory"
        },
        {
          "line": 351,
          "text": "# 5级向上"
        },
        {
          "line": 357,
          "text": "# 捕获stderr用于调试"
        },
        {
          "line": 367,
          "text": "# Check进程是否立即退出（表示启动失败）"
        },
        {
          "line": 376,
          "text": "# 进程没有立即退出，说明启动成功"
        },
        {
          "line": 384,
          "text": "# 通过现有 AgoraRegistrationAdapter 与 RG 交互"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "Agora 原生客户端（SDK）：使用官方 agora-protocol Sender 进行发送。\n要求：\n- 必须安装并可导入 agora-protocol 与 langchain_openai\n- 禁止任何 mock/fallback"
        },
        {
          "type": "class",
          "name": "_LLMWrapperModel",
          "text": "提供与 LangChain ChatModel 兼容的Runnable接口。\n使用 llm_wrapper 生成文本，不依赖任何外部GPT服务。"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/agora/registration_adapter.py",
      "comments": [
        {
          "line": 27,
          "text": "# Agora协议特性配置"
        },
        {
          "line": 32,
          "text": "# 内部状态"
        },
        {
          "line": 43,
          "text": "# 生成Agora协议证明"
        },
        {
          "line": 46,
          "text": "# 生成协议元数据"
        },
        {
          "line": 49,
          "text": "# 构建注册请求"
        },
        {
          "line": 60,
          "text": "# Send注册请求到RG"
        },
        {
          "line": 79,
          "text": "# Observer使用简化的证明"
        },
        {
          "line": 120,
          "text": "# 1. Toolformer模型签名"
        },
        {
          "line": 125,
          "text": "# 2. LangChain集成证明"
        },
        {
          "line": 130,
          "text": "# 3. 协议哈希验证（使用Agora原生hash + data URI 作为来源）"
        },
        {
          "line": 131,
          "text": "# 生成一个最小的医疗会诊协议文档，计算hash并提供来源"
        },
        {
          "line": 138,
          "text": "# 4. 时间戳和nonce（防重放）"
        },
        {
          "line": 142,
          "text": "# 5. Agent身份签名"
        },
        {
          "line": 157,
          "text": "# If配置要求Observer证明，生成简单签名"
        },
        {
          "line": 169,
          "text": "# 构建签名数据"
        },
        {
          "line": 178,
          "text": "# 生成签名哈希"
        },
        {
          "line": 182,
          "text": "# 模拟Toolformer签名格式"
        },
        {
          "line": 197,
          "text": "# 生成链证明哈希"
        },
        {
          "line": 253,
          "text": "# 攻击模拟方法"
        },
        {
          "line": 257,
          "text": "# Try使用空或伪造的证明注册"
        },
        {
          "line": 297,
          "text": "# 使用窃取的令牌尝试注册Observer"
        },
        {
          "line": 335,
          "text": "# 重放旧的注册数据"
        },
        {
          "line": 359,
          "text": "# 注册恶意端点作为Observer"
        },
        {
          "line": 365,
          "text": "# 恶意中继端点"
        },
        {
          "line": 395,
          "text": "# 使用ANP的DID证明尝试注册Agora协议"
        },
        {
          "line": 403,
          "text": "# 使用ANP证明"
        },
        {
          "line": 429,
          "text": "# Try无证明注册Observer"
        },
        {
          "line": 435,
          "text": "# 空证明"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "Agora Protocol Registration Adapter\nAgora协议注册适配器 - 处理Agora协议特定的身份验证和注册逻辑"
        },
        {
          "type": "class",
          "name": "AgoraRegistrationAdapter",
          "text": "Agora协议注册适配器"
        },
        {
          "type": "function",
          "name": "register_agent",
          "text": "注册Agora协议Agent"
        },
        {
          "type": "function",
          "name": "subscribe_observer",
          "text": "订阅Observer角色"
        },
        {
          "type": "function",
          "name": "get_conversation_directory",
          "text": "Get会话目录"
        },
        {
          "type": "function",
          "name": "_generate_agora_proof",
          "text": "GenerateAgora协议证明"
        },
        {
          "type": "function",
          "name": "_generate_observer_proof",
          "text": "GenerateObserver证明（简化版）"
        },
        {
          "type": "function",
          "name": "_generate_toolformer_signature",
          "text": "GenerateToolformer模型签名"
        },
        {
          "type": "function",
          "name": "_generate_langchain_proof",
          "text": "GenerateLangChain集成证明"
        },
        {
          "type": "function",
          "name": "_generate_protocol_hash",
          "text": "Generate协议哈希验证"
        },
        {
          "type": "function",
          "name": "_generate_agent_signature",
          "text": "GenerateAgent身份签名"
        },
        {
          "type": "function",
          "name": "_generate_observer_signature",
          "text": "GenerateObserver签名"
        },
        {
          "type": "function",
          "name": "_generate_protocol_meta",
          "text": "Generate协议元数据"
        },
        {
          "type": "function",
          "name": "simulate_impersonation_attack",
          "text": "模拟冒名顶替攻击"
        },
        {
          "type": "function",
          "name": "simulate_credential_reuse_attack",
          "text": "模拟凭证复用攻击"
        },
        {
          "type": "function",
          "name": "simulate_replay_attack",
          "text": "模拟重放攻击"
        },
        {
          "type": "function",
          "name": "simulate_endpoint_substitution_attack",
          "text": "模拟端点替换攻击"
        },
        {
          "type": "function",
          "name": "simulate_cross_protocol_attack",
          "text": "模拟跨协议攻击"
        },
        {
          "type": "function",
          "name": "simulate_observer_auto_admission_attack",
          "text": "模拟Observer自动准入攻击"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/agora/server.py",
      "comments": [
        {
          "line": 15,
          "text": "# 定义与client.py兼容的Response类型"
        },
        {
          "line": 21,
          "text": "# 严格导入官方SDK"
        },
        {
          "line": 28,
          "text": "# 构造与 LangChain 兼容的Runnable模型"
        },
        {
          "line": 60,
          "text": "# 回退到简单实现"
        },
        {
          "line": 86,
          "text": "# doctor_a / doctor_b 角色"
        },
        {
          "line": 89,
          "text": "# 基于 llm_wrapper 的 Toolformer"
        },
        {
          "line": 94,
          "text": "# Try备用导入路径"
        },
        {
          "line": 98,
          "text": "# 显式注册 echo_tool，使用官方 Tool 封装，避免找不到定义"
        },
        {
          "line": 117,
          "text": "# 手动指定return schema，避免类型推断问题"
        },
        {
          "line": 138,
          "text": "# Try为Agora服务器添加健康检查端点"
        },
        {
          "line": 140,
          "text": "# Check服务器是否有添加路由的方法"
        },
        {
          "line": 152,
          "text": "# ReceiverServer 自带 run(port=)，这里通过其run启动"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "Agora 原生服务端（ReceiverServer），使用基于 llm_wrapper 的 Toolformer。\n禁止mock/fallback；严格依赖 agora-protocol。"
        },
        {
          "type": "function",
          "name": "spawn_doctor",
          "text": "启动基于 llm_wrapper 的 Agora ReceiverServer。"
        },
        {
          "type": "function",
          "name": "echo_tool",
          "text": "Echo response for protocol routines.\n\nArgs:\n    text: 输入文本\n\nReturns:\n    符合Agora协议的文本Response"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/anp/client.py",
      "comments": [
        {
          "line": 32,
          "text": "# 优先使用显式correlation_id参数，fallback到payload中的值"
        },
        {
          "line": 38,
          "text": "# Process探针配置"
        },
        {
          "line": 40,
          "text": "# TLS降级探针"
        },
        {
          "line": 58,
          "text": "# 重放攻击探针  "
        },
        {
          "line": 63,
          "text": "# 在ANP消息中注入重放标识"
        },
        {
          "line": 66,
          "text": "# 明文嗅探探针"
        },
        {
          "line": 74,
          "text": "# DID伪造探针（ANP特定）"
        },
        {
          "line": 79,
          "text": "# ANP使用WebSocket，在HTTP握手头中注入伪造身份"
        },
        {
          "line": 83,
          "text": "# 会话劫持探针"
        },
        {
          "line": 90,
          "text": "# MITM代理探针"
        },
        {
          "line": 100,
          "text": "# 网络扰动探针（ANP特有的WebSocket连接测试）"
        },
        {
          "line": 105,
          "text": "# 在发送前添加人工延迟模拟网络抖动"
        },
        {
          "line": 108,
          "text": "# E2E负载加密检测探针（新增）"
        },
        {
          "line": 113,
          "text": "# 修改原始payload注入水印"
        },
        {
          "line": 118,
          "text": "# Create明文探测payload"
        },
        {
          "line": 126,
          "text": "# 时钟漂移矩阵探针（新增）"
        },
        {
          "line": 133,
          "text": "# 随机选择一个漂移档位进行测试"
        },
        {
          "line": 136,
          "text": "# 随机选择正负漂移"
        },
        {
          "line": 141,
          "text": "# 时间戳注入到ANP消息中"
        },
        {
          "line": 149,
          "text": "# 窗口测试：注入重复/乱序标记"
        },
        {
          "line": 159,
          "text": "# 使用ANP标准的/runs端点和格式"
        },
        {
          "line": 170,
          "text": "# If有correlation_id，优先发送到/message端点（兼容现有逻辑）"
        },
        {
          "line": 178,
          "text": "# 使用标准ANP /runs端点"
        },
        {
          "line": 213,
          "text": "# 使用Python直接启动服务器，需要Setup正确的路径"
        },
        {
          "line": 217,
          "text": "# 找到项目root directory（包含script目录的地方）"
        },
        {
          "line": 219,
          "text": "# 从protocol_backends/anp/client.py回到项目root directory"
        },
        {
          "line": 228,
          "text": "# Setup环境变量和工作目录为项目root directory"
        },
        {
          "line": 258,
          "text": "# 从服务端获取真实的注册证明"
        },
        {
          "line": 268,
          "text": "# 确保包含所有必需字段"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "ANP 原生客户端：Safety-Tech 中通过local HTTP shim 的 /message 入站，\n内部由 SimpleNode 使用原生 WS 通道向对端传递并回投 /deliver。\n禁止 mock/fallback；仅按真实部署调用。"
        },
        {
          "type": "function",
          "name": "spawn",
          "text": "启动ANP服务器进程"
        },
        {
          "type": "function",
          "name": "register",
          "text": "注册ANP Agent到注册网关"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/anp/server.py",
      "comments": [
        {
          "line": 51,
          "text": "# 生成真实的DID和密钥对 - 必须成功，否则报错"
        },
        {
          "line": 52,
          "text": "# ImportDID生成工具"
        },
        {
          "line": 56,
          "text": "# 生成真实的DID、密钥对和DID文档"
        },
        {
          "line": 57,
          "text": "# WebSocket端点"
        },
        {
          "line": 64,
          "text": "# 从DID文档中提取公钥十六进制表示"
        },
        {
          "line": 72,
          "text": "# 存储其他agent的信息"
        },
        {
          "line": 106,
          "text": "# 必须有有效的密钥对，否则抛出异常"
        },
        {
          "line": 110,
          "text": "# 生成真实的签名"
        },
        {
          "line": 121,
          "text": "# 注册网关会用float()解析这个字符串"
        },
        {
          "line": 129,
          "text": "# 从input中提取文本内容"
        },
        {
          "line": 134,
          "text": "# Extract第一个文本内容"
        },
        {
          "line": 146,
          "text": "# 生成医生回复"
        },
        {
          "line": 167,
          "text": "# 生成医生回复"
        },
        {
          "line": 170,
          "text": "# If有correlation_id，投递回执到协调器"
        },
        {
          "line": 191,
          "text": "# 查找目标agent的信息"
        },
        {
          "line": 193,
          "text": "# Try发现目标agent"
        },
        {
          "line": 201,
          "text": "# SendHTTP请求到目标agent"
        },
        {
          "line": 213,
          "text": "# 简化的DID认证"
        },
        {
          "line": 229,
          "text": "# Try常见端口"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "ANP Protocol Server - 符合官方ANP协议规范\n- 基于HTTP的ANP协议实现，不使用WebSocket\n- 使用DID进行身份验证\n- 提供标准的ANP端点：/agents, /health, /runs\n- 支持Agent间的直接HTTP通信"
        },
        {
          "type": "class",
          "name": "ANPServer",
          "text": "ANP协议服务器 - 符合官方规范的HTTP实现"
        },
        {
          "type": "function",
          "name": "create_doctor_a_server",
          "text": "Create医生A服务器"
        },
        {
          "type": "function",
          "name": "create_doctor_b_server",
          "text": "Create医生B服务器"
        },
        {
          "type": "function",
          "name": "_setup_routes",
          "text": "SetupANP标准路由"
        },
        {
          "type": "function",
          "name": "_discover_agent",
          "text": "发现其他ANP Agent"
        },
        {
          "type": "function",
          "name": "_deliver_receipt",
          "text": "投递回执到协调器"
        },
        {
          "type": "function",
          "name": "run",
          "text": "启动ANP服务器"
        },
        {
          "type": "function",
          "name": "health",
          "text": "健康检查端点"
        },
        {
          "type": "function",
          "name": "agents",
          "text": "ANP标准agents端点 - 返回agent信息"
        },
        {
          "type": "function",
          "name": "get_did",
          "text": "返回DID信息"
        },
        {
          "type": "function",
          "name": "get_registration_proof",
          "text": "返回注册证明信息"
        },
        {
          "type": "function",
          "name": "runs",
          "text": "ANP标准runs端点 - 处理任务请求"
        },
        {
          "type": "function",
          "name": "message",
          "text": "消息端点 - 兼容现有测试"
        },
        {
          "type": "function",
          "name": "communicate_with_peer",
          "text": "与其他ANP Agent通信"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/meta_protocol/__init__.py",
      "comments": [
        {
          "line": 13,
          "text": "# 说明：Meta Protocol 仅作为编排层，不注册到数据面后端注册表"
        }
      ],
      "docstrings": []
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/meta_protocol/a2a_meta_agent.py",
      "comments": [
        {
          "line": 60,
          "text": "# Validate必需的配置项"
        },
        {
          "line": 66,
          "text": "# 使用完整的config格式，与现有的Core接口兼容"
        },
        {
          "line": 137,
          "text": "# S2安全测试不允许静默失败，直接向上抛出"
        },
        {
          "line": 147,
          "text": "# If连错误都发不出去，直接抛出原始错误"
        },
        {
          "line": 169,
          "text": "# CreateSafety Tech A2A executor - 严格要求LLM，无fallback"
        },
        {
          "line": 176,
          "text": "# CreateBaseAgent with A2A server adapter (使用SDK native interface)"
        },
        {
          "line": 191,
          "text": "# S2安全测试不允许fallback，必须使用完整的协议实现"
        },
        {
          "line": 204,
          "text": "# 使用LLM生成专业医疗回复 (严格要求)"
        },
        {
          "line": 227,
          "text": "# S2安全测试不允许静默失败"
        }
      ],
      "docstrings": []
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/meta_protocol/agora_meta_agent.py",
      "comments": [
        {
          "line": 63,
          "text": "# Validate必需的配置项"
        },
        {
          "line": 69,
          "text": "# 使用完整的config格式，与现有的Core接口兼容"
        },
        {
          "line": 140,
          "text": "# S2安全测试不允许静默失败，直接向上抛出"
        },
        {
          "line": 150,
          "text": "# If连错误都发不出去，直接抛出原始错误"
        },
        {
          "line": 169,
          "text": "# CreateSafety Tech Agora executor - 严格要求LLM，无fallback"
        },
        {
          "line": 176,
          "text": "# CreateBaseAgent with Agora server adapter (使用SDK native interface)"
        },
        {
          "line": 190,
          "text": "# S2安全测试不允许fallback，必须使用完整的协议实现"
        },
        {
          "line": 203,
          "text": "# 使用LLM生成专业医疗回复 (严格要求)"
        }
      ],
      "docstrings": []
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/meta_protocol/anp_meta_agent.py",
      "comments": [
        {
          "line": 63,
          "text": "# Validate必需的配置项"
        },
        {
          "line": 69,
          "text": "# 使用完整的config格式，与现有的Core接口兼容"
        },
        {
          "line": 140,
          "text": "# S2安全测试不允许静默失败，直接向上抛出"
        },
        {
          "line": 150,
          "text": "# If连错误都发不出去，直接抛出原始错误"
        },
        {
          "line": 172,
          "text": "# CreateSafety Tech ANP executor - 严格要求LLM，无fallback"
        },
        {
          "line": 197,
          "text": "# S2安全测试不允许fallback，必须使用完整的协议实现"
        },
        {
          "line": 210,
          "text": "# 使用LLM生成专业医疗回复 (严格要求)"
        }
      ],
      "docstrings": []
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/meta_protocol/s2_llm_router.py",
      "comments": [
        {
          "line": 57,
          "text": "# TLS降级(40%)  "
        },
        {
          "line": 58,
          "text": "# 会话劫持(15%)"
        },
        {
          "line": 59,
          "text": "# E2E检测(18%)"
        },
        {
          "line": 60,
          "text": "# 时钟漂移(12%)"
        },
        {
          "line": 61,
          "text": "# 旁路抓包(8%) + 重放攻击(4%) + 元数据泄露(3%)"
        },
        {
          "line": 68,
          "text": "# 医生A使用的协议"
        },
        {
          "line": 69,
          "text": "# 医生B使用的协议"
        },
        {
          "line": 70,
          "text": "# 路由策略类型"
        },
        {
          "line": 71,
          "text": "# 基于S2安全分析的推理"
        },
        {
          "line": 72,
          "text": "# 预期的各协议S2评分"
        },
        {
          "line": 73,
          "text": "# 决策置信度"
        },
        {
          "line": 74,
          "text": "# 是否启用跨协议通信"
        },
        {
          "line": 114,
          "text": "# 立即验证LLM连接可用性 - 使用正确的消息格式"
        },
        {
          "line": 131,
          "text": "# ANP Protocol - 最强安全协议 (DID认证 + E2E加密 + 全面防护)"
        },
        {
          "line": 134,
          "text": "# TLS/传输层安全: 满分"
        },
        {
          "line": 135,
          "text": "# 会话劫持防护: 满分  "
        },
        {
          "line": 136,
          "text": "# E2E加密检测: 满分"
        },
        {
          "line": 137,
          "text": "# 时钟漂移防护: 舍弃 (原95→0)"
        },
        {
          "line": 138,
          "text": "# 元数据泄露防护: 标准保护 (原90→80)"
        },
        {
          "line": 141,
          "text": "# Agora Protocol - 原生SDK安全能力强，但现在次于ANP"
        },
        {
          "line": 144,
          "text": "# TLS/传输层安全: 满分 (权重40%)"
        },
        {
          "line": 145,
          "text": "# 会话劫持防护: 满分 (权重15%) "
        },
        {
          "line": 146,
          "text": "# E2E加密检测: 满分 (原90→100)"
        },
        {
          "line": 147,
          "text": "# 时钟漂移防护: 满分 (舍弃但保留)"
        },
        {
          "line": 148,
          "text": "# 元数据泄露防护: 标准保护 (原85→80)"
        },
        {
          "line": 151,
          "text": "# ACP Protocol - 企业级安全协议"
        },
        {
          "line": 154,
          "text": "# 企业级TLS配置"
        },
        {
          "line": 155,
          "text": "# 标准会话管理"
        },
        {
          "line": 156,
          "text": "# 部分端到端能力"
        },
        {
          "line": 157,
          "text": "# 较好的时序保护"
        },
        {
          "line": 158,
          "text": "# 企业级元数据保护"
        },
        {
          "line": 161,
          "text": "# A2A Protocol - 基础协议，安全能力有限"
        },
        {
          "line": 164,
          "text": "# 基础TLS支持"
        },
        {
          "line": 165,
          "text": "# 基本会话管理"
        },
        {
          "line": 166,
          "text": "# 有限的端到端能力"
        },
        {
          "line": 167,
          "text": "# 基础时序保护"
        },
        {
          "line": 168,
          "text": "# 基础元数据保护"
        },
        {
          "line": 282,
          "text": "# 显示Response的前200个字符"
        },
        {
          "line": 324,
          "text": "# Default to diverse protocol selection if parsing fails - 确保所有协议都有被选择的机会"
        },
        {
          "line": 326,
          "text": "# 根据测试重点智能选择不同协议组合"
        },
        {
          "line": 328,
          "text": "# 最强组合"
        },
        {
          "line": 330,
          "text": "# TLS能力强的协议"
        },
        {
          "line": 332,
          "text": "# E2E能力组合"
        },
        {
          "line": 334,
          "text": "# 会话保护测试"
        },
        {
          "line": 336,
          "text": "# 跨度最大的组合"
        },
        {
          "line": 338,
          "text": "# 随机选择2个不同协议，确保所有协议都有机会"
        }
      ],
      "docstrings": []
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/meta_protocol/s2_meta_coordinator.py",
      "comments": [
        {
          "line": 39,
          "text": "# Import Safety Tech meta agents - 使用local实现"
        },
        {
          "line": 45,
          "text": "# Import Safety Tech RG系统组件 - 复用现有架构"
        },
        {
          "line": 52,
          "text": "# 相对导入fallback"
        },
        {
          "line": 72,
          "text": "# 为了兼容性，也Setup llm_router 别名"
        },
        {
          "line": 89,
          "text": "# RG系统组件 - 复用Safety Tech架构"
        },
        {
          "line": 114,
          "text": "# 分配端口"
        },
        {
          "line": 115,
          "text": "# Meta专用RG端口"
        },
        {
          "line": 116,
          "text": "# Meta专用协调器端口  "
        },
        {
          "line": 117,
          "text": "# Meta专用Observer端口"
        },
        {
          "line": 124,
          "text": "# 1) 启动 RegistrationGateway 进程"
        },
        {
          "line": 138,
          "text": "# WaitRG启动"
        },
        {
          "line": 141,
          "text": "# 2) 启动 RGCoordinator 进程"
        },
        {
          "line": 171,
          "text": "# Wait协调器启动"
        },
        {
          "line": 174,
          "text": "# 3) 启动 Observer Agent (同进程)"
        },
        {
          "line": 307,
          "text": "# 统一使用Safety Techlocal实现 - 无fallback，失败直接报错"
        },
        {
          "line": 324,
          "text": "# S2测试需要完整的协议实现，不允许fallback"
        },
        {
          "line": 333,
          "text": "# TLS降级探测 (权重40%)"
        },
        {
          "line": 342,
          "text": "# E2E加密检测探测 (权重18%)"
        },
        {
          "line": 351,
          "text": "# 会话劫持探测 (权重15%)"
        },
        {
          "line": 360,
          "text": "# 时钟漂移探测 (权重12%)"
        },
        {
          "line": 368,
          "text": "# 旁路抓包保护探测 (权重8%)"
        },
        {
          "line": 377,
          "text": "# 重放攻击探测 (权重4%)  "
        },
        {
          "line": 385,
          "text": "# 元数据泄露探测 (权重3%)"
        },
        {
          "line": 403,
          "text": "# 1. Setup真实的RG基础设施 (复用Safety Tech架构)  "
        },
        {
          "line": 437,
          "text": "# Run comprehensive S2 analysis (新增详细分析)"
        },
        {
          "line": 447,
          "text": "# Generate S2 security report (传入详细分析结果)"
        },
        {
          "line": 632,
          "text": "# TLS降级探测标记"
        },
        {
          "line": 637,
          "text": "# E2E加密检测水印"
        },
        {
          "line": 643,
          "text": "# 敏感信息探测"
        },
        {
          "line": 647,
          "text": "# 会话劫持探测令牌"
        },
        {
          "line": 653,
          "text": "# 时钟漂移探测"
        },
        {
          "line": 655,
          "text": "# 5分钟偏移"
        },
        {
          "line": 659,
          "text": "# 重放攻击探测 "
        },
        {
          "line": 777,
          "text": "# TLS降级(40%)"
        },
        {
          "line": 778,
          "text": "# 会话劫持(15%) "
        },
        {
          "line": 779,
          "text": "# E2E检测(18%)"
        },
        {
          "line": 780,
          "text": "# 时钟漂移(12%)"
        },
        {
          "line": 781,
          "text": "# 旁路抓包(8%)"
        },
        {
          "line": 782,
          "text": "# 重放攻击(4%)"
        },
        {
          "line": 783,
          "text": "# 元数据泄露(3%)"
        },
        {
          "line": 859,
          "text": "# Import adapters from src (ANP使用Safety Tech模式，不导入有问题的src版本)"
        },
        {
          "line": 863,
          "text": "# ANP适配器在_create_anp_adapter方法中处理"
        },
        {
          "line": 912,
          "text": "# 使用Safety Techlocal的ANP实现，而不是有问题的src适配器"
        },
        {
          "line": 929,
          "text": "# 使用Safety Tech成功的导入模式：agentconnect_src.module"
        },
        {
          "line": 930,
          "text": "# 从 script/safety_tech/protocol_backends/meta_protocol/s2_meta_coordinator.py 到项目根"
        },
        {
          "line": 936,
          "text": "# 确保项目根在sys.path中（Safety Tech方式）"
        },
        {
          "line": 940,
          "text": "# 使用Safety Tech验证成功的导入方式：直接从agentconnect_src.agent_connect.module导入"
        },
        {
          "line": 949,
          "text": "# 测试导入是否成功"
        },
        {
          "line": 952,
          "text": "# 预先生成DID避免类内部导入问题"
        },
        {
          "line": 968,
          "text": "# Add必需的协议名称属性"
        },
        {
          "line": 973,
          "text": "# 使用正确的SimpleNode构造函数参数（基于Safety Tech comm.py）"
        },
        {
          "line": 983,
          "text": "# StartHTTP和WebSocket服务器（使用正确的方法名）"
        },
        {
          "line": 985,
          "text": "# Wait节点启动就绪"
        },
        {
          "line": 995,
          "text": "# 简化的消息发送 - 用于S2测试"
        },
        {
          "line": 1003,
          "text": "# 准备DID信息，确保格式正确"
        },
        {
          "line": 1010,
          "text": "# CreateS2ANPAdapter实例，传递get_pem_from_private_key函数"
        },
        {
          "line": 1027,
          "text": "# ANP协议需要更多时间启动WebSocket服务器"
        },
        {
          "line": 1031,
          "text": "# ANP需要更多启动时间"
        },
        {
          "line": 1037,
          "text": "# 对ANP协议多次尝试健康检查"
        },
        {
          "line": 1068,
          "text": "# 不要立即抛出异常，继续检查其他agent"
        },
        {
          "line": 1108,
          "text": "# 使用和单独协议测试相同的详细输出格式"
        },
        {
          "line": 1124,
          "text": "# 详细的S2安全测试结果"
        },
        {
          "line": 1127,
          "text": "# 不再显示理论/配置评分，只等待真实测试结果"
        },
        {
          "line": 1130,
          "text": "# 跨协议安全分析"
        },
        {
          "line": 1139,
          "text": "# 显示安全违规详情"
        },
        {
          "line": 1149,
          "text": "# 使用真实的S2详细分析结果计算最终评级"
        },
        {
          "line": 1150,
          "text": "# 首先尝试从实例变量获取详细结果"
        },
        {
          "line": 1154,
          "text": "# If仍然没有详细结果，尝试从保存的文件读取"
        },
        {
          "line": 1177,
          "text": "# 基于真实测试结果的安全等级"
        },
        {
          "line": 1190,
          "text": "# 显示S2详细分项评分"
        },
        {
          "line": 1211,
          "text": "# 生成协议优化建议"
        },
        {
          "line": 1217,
          "text": "# 协议建议基于真实安全等级"
        },
        {
          "line": 1228,
          "text": "# If没有详细结果，显示警告而不是理论分数"
        },
        {
          "line": 1238,
          "text": "# 回退到简单输出"
        },
        {
          "line": 1275,
          "text": "# InitializeS2测试结果结构 (与ACP保持一致)"
        },
        {
          "line": 1277,
          "text": "# 明文暴露字节数"
        },
        {
          "line": 1278,
          "text": "# 降级尝试次数"
        },
        {
          "line": 1279,
          "text": "# 降级被阻止次数"
        },
        {
          "line": 1280,
          "text": "# 重放尝试次数"
        },
        {
          "line": 1281,
          "text": "# 重放被阻止次数"
        },
        {
          "line": 1282,
          "text": "# 元数据泄露评分"
        },
        {
          "line": 1283,
          "text": "# 高级测试结果"
        },
        {
          "line": 1284,
          "text": "# 旁路抓包分析结果"
        },
        {
          "line": 1285,
          "text": "# 证书矩阵测试结果"
        },
        {
          "line": 1286,
          "text": "# E2E加密检测结果"
        },
        {
          "line": 1287,
          "text": "# 会话劫持测试结果"
        },
        {
          "line": 1288,
          "text": "# 时钟漂移测试结果"
        },
        {
          "line": 1291,
          "text": "# GetMeta协议代理端点进行实际测试"
        },
        {
          "line": 1295,
          "text": "# S2高级测试1: 真实旁路抓包 + MITM测试"
        },
        {
          "line": 1302,
          "text": "# 8秒抓包"
        },
        {
          "line": 1303,
          "text": "# DisableMITM以避免复杂Setup"
        },
        {
          "line": 1307,
          "text": "# 统计真实明文字节数"
        },
        {
          "line": 1320,
          "text": "# S2高级测试2: 真实证书有效性矩阵"
        },
        {
          "line": 1325,
          "text": "# 从URL提取host和port"
        },
        {
          "line": 1343,
          "text": "# S2高级测试3: 真实E2E负载加密检测"
        },
        {
          "line": 1351,
          "text": "# Send带水印的测试消息通过Meta协议"
        },
        {
          "line": 1358,
          "text": "# 注入水印"
        },
        {
          "line": 1361,
          "text": "# 通过Meta协议发送测试消息 (使用已有的doctor agents)"
        },
        {
          "line": 1367,
          "text": "# 分析Response中是否包含水印"
        },
        {
          "line": 1380,
          "text": "# S2高级测试4: 真实时钟漂移矩阵测试"
        },
        {
          "line": 1385,
          "text": "# 测试不同档位的时钟漂移"
        },
        {
          "line": 1401,
          "text": "# 每个档位测试3次"
        },
        {
          "line": 1406,
          "text": "# Setup偏移时间戳"
        },
        {
          "line": 1409,
          "text": "# 通过Meta协议发送带时间偏移的消息"
        },
        {
          "line": 1418,
          "text": "# Check是否被阻断 (基于Response状态)"
        },
        {
          "line": 1430,
          "text": "# Connect异常也可能表示被阻断"
        },
        {
          "line": 1436,
          "text": "# Calculate该档位的阻断率"
        },
        {
          "line": 1446,
          "text": "# Calculate总体时钟漂移防护评分"
        },
        {
          "line": 1460,
          "text": "# S2高级测试5: 真实会话劫持/凭据复用测试"
        },
        {
          "line": 1470,
          "text": "# 测试不同类型的会话劫持"
        },
        {
          "line": 1492,
          "text": "# 每种劫持场景测试2次"
        },
        {
          "line": 1495,
          "text": "# Create带有劫持令牌的测试payload"
        },
        {
          "line": 1498,
          "text": "# 伪造的会话令牌"
        },
        {
          "line": 1502,
          "text": "# 通过Meta协议发送劫持测试"
        },
        {
          "line": 1511,
          "text": "# Check是否被阻断"
        },
        {
          "line": 1514,
          "text": "# Check是否是认证/授权相关的错误"
        },
        {
          "line": 1526,
          "text": "# Connect异常可能表示被系统阻断"
        },
        {
          "line": 1532,
          "text": "# Calculate该场景的阻断率"
        },
        {
          "line": 1542,
          "text": "# Calculate总体会话劫持防护评分"
        },
        {
          "line": 1558,
          "text": "# S2基础测试: TLS降级、重放攻击、元数据泄露 "
        },
        {
          "line": 1561,
          "text": "# CalculateS2综合评分 (采用与ACP相同的权重系统)"
        },
        {
          "line": 1574,
          "text": "# 估算探针数量"
        },
        {
          "line": 1592,
          "text": "# S2测试1: TLS/加密降级测试"
        },
        {
          "line": 1598,
          "text": "# 模拟降级攻击尝试"
        },
        {
          "line": 1599,
          "text": "# Disable证书验证"
        },
        {
          "line": 1600,
          "text": "# 选择一个可用的端点进行测试"
        },
        {
          "line": 1605,
          "text": "# Check是否使用了强加密"
        },
        {
          "line": 1618,
          "text": "# S2测试2: 重放攻击测试"
        },
        {
          "line": 1623,
          "text": "# 模拟重放旧消息通过Meta协议"
        },
        {
          "line": 1626,
          "text": "# 1小时前的时间戳"
        },
        {
          "line": 1630,
          "text": "# 通过Meta agent发送重放消息"
        },
        {
          "line": 1637,
          "text": "# Check是否被阻断"
        },
        {
          "line": 1652,
          "text": "# S2测试3: 元数据泄露评估"
        },
        {
          "line": 1657,
          "text": "# Try获取系统信息"
        },
        {
          "line": 1661,
          "text": "# 对每个可用端点进行探测"
        },
        {
          "line": 1664,
          "text": "# 默认端点"
        },
        {
          "line": 1675,
          "text": "# 忽略连接错误"
        },
        {
          "line": 1689,
          "text": "# 1. TLS/加密降级防护 (20%)"
        },
        {
          "line": 1692,
          "text": "# 2. 证书有效性矩阵 (20%)"
        },
        {
          "line": 1695,
          "text": "# 3. E2E负载加密检测 (18%)"
        },
        {
          "line": 1699,
          "text": "# 4. 会话劫持防护 (15%)"
        },
        {
          "line": 1702,
          "text": "# 5. 时钟漂移防护 (12%)"
        },
        {
          "line": 1705,
          "text": "# 6. 旁路抓包/明文检测 (8%)"
        },
        {
          "line": 1710,
          "text": "# 7. 重放攻击防护 (4%)"
        },
        {
          "line": 1715,
          "text": "# 8. 元数据泄露防护 (3%)"
        },
        {
          "line": 1719,
          "text": "# Calculate加权总分"
        },
        {
          "line": 1721,
          "text": "# TLS降级防护 20%"
        },
        {
          "line": 1722,
          "text": "# 证书矩阵 20%"
        },
        {
          "line": 1723,
          "text": "# E2E检测 18%"
        },
        {
          "line": 1724,
          "text": "# 会话劫持防护 15%"
        },
        {
          "line": 1725,
          "text": "# 时钟漂移防护 12%"
        },
        {
          "line": 1726,
          "text": "# 旁路抓包 8%"
        },
        {
          "line": 1727,
          "text": "# 重放攻击防护 4%"
        },
        {
          "line": 1728,
          "text": "# 元数据泄露防护 3%"
        },
        {
          "line": 1733,
          "text": "# 构建评分详情"
        },
        {
          "line": 1773,
          "text": "# 分析协议安全等级差异"
        },
        {
          "line": 1775,
          "text": "# 最高：DID + E2E"
        },
        {
          "line": 1776,
          "text": "# 高：SDK级保护"
        },
        {
          "line": 1777,
          "text": "# 中：HTTP保护"
        },
        {
          "line": 1778,
          "text": "# 基础：基本保护"
        },
        {
          "line": 1811,
          "text": "# Get当前协议组合"
        },
        {
          "line": 1815,
          "text": "# 协议安全等级和特性"
        },
        {
          "line": 1839,
          "text": "# 分析当前组合的问题"
        },
        {
          "line": 1843,
          "text": "# 推荐最佳单协议组合"
        },
        {
          "line": 1847,
          "text": "# 推荐最佳跨协议组合"
        },
        {
          "line": 1853,
          "text": "# 分析弱点并给出具体建议"
        },
        {
          "line": 1863,
          "text": "# 基于具体测试结果的建议"
        },
        {
          "line": 1868,
          "text": "# TLS问题"
        },
        {
          "line": 1873,
          "text": "# E2E问题"
        },
        {
          "line": 1878,
          "text": "# 会话问题"
        },
        {
          "line": 1883,
          "text": "# 时钟漂移问题"
        },
        {
          "line": 1888,
          "text": "# 跨协议特定建议"
        },
        {
          "line": 1892,
          "text": "# 协议兼容性分析"
        },
        {
          "line": 1901,
          "text": "# 协议替代建议"
        },
        {
          "line": 1911,
          "text": "# 限制建议数量"
        }
      ],
      "docstrings": [
        {
          "type": "function",
          "name": "setup_real_rg_infrastructure",
          "text": "Setup真实的RG基础设施，复用Safety Tech架构"
        },
        {
          "type": "function",
          "name": "_wait_http_ready",
          "text": "等待HTTP服务就绪"
        },
        {
          "type": "function",
          "name": "cleanup_rg_infrastructure",
          "text": "清理RG基础设施"
        },
        {
          "type": "function",
          "name": "_run_comprehensive_s2_analysis",
          "text": "Run完整的S2保密性分析，使用真实的Safety Tech coremodule"
        },
        {
          "type": "function",
          "name": "_run_real_basic_s2_tests",
          "text": "Run真实的基础S2测试"
        },
        {
          "type": "function",
          "name": "_calculate_s2_comprehensive_score",
          "text": "CalculateS2综合评分，采用与ACP相同的权重系统"
        },
        {
          "type": "function",
          "name": "_analyze_cross_protocol_security",
          "text": "分析跨协议通信的安全影响"
        },
        {
          "type": "function",
          "name": "_generate_protocol_recommendations",
          "text": "基于当前S2得分生成协议优化建议"
        },
        {
          "type": "function",
          "name": "_analyze_protocol_risks",
          "text": "分析各协议特定风险"
        },
        {
          "type": "function",
          "name": "_assess_llm_routing_security",
          "text": "EvaluateLLM路由的安全影响"
        },
        {
          "type": "class",
          "name": "S2ANPAdapter",
          "text": "S2 Meta协议的ANP适配器，基于Safety Tech成功模式"
        },
        {
          "type": "function",
          "name": "initialize",
          "text": "初始化ANP连接"
        },
        {
          "type": "function",
          "name": "add_outbound_adapter",
          "text": "兼容BaseAgent接口"
        },
        {
          "type": "function",
          "name": "send_message",
          "text": "发送消息到ANP代理"
        },
        {
          "type": "function",
          "name": "cleanup",
          "text": "清理ANP连接"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/protocol_backends/meta_protocol/s2_meta_runner.py",
      "comments": [
        {
          "line": 80,
          "text": "# Try获取详细的S2分析结果"
        }
      ],
      "docstrings": []
    },
    {
      "path": "scenarios/safety_tech/runners/run_unified_security_test_a2a.py",
      "comments": [
        {
          "line": 30,
          "text": "# 为支持 `import src.*`，需要将项目root directory加入 sys.path（而非 src 目录本身）"
        },
        {
          "line": 35,
          "text": "# Import核心组件（Coordinator/Observer/攻击场景）"
        },
        {
          "line": 45,
          "text": "# 原生A2A（a2a-sdk）服务适配器"
        },
        {
          "line": 99,
          "text": "# A2ADoctorServer 类已移除，现在使用统一后端API"
        },
        {
          "line": 103,
          "text": "# 端口配置"
        },
        {
          "line": 113,
          "text": "# 1) 启动RG"
        },
        {
          "line": 135,
          "text": "# 2) 启动Coordinator"
        },
        {
          "line": 144,
          "text": "# 3) 新设计：不再启动Observer（S2改为保密性探针）"
        },
        {
          "line": 147,
          "text": "# 4) 使用统一后端API启动A2A医生节点"
        },
        {
          "line": 151,
          "text": "# Wait服务启动并检查健康状态"
        },
        {
          "line": 155,
          "text": "# 5) 注册到RG + 订阅Observer"
        },
        {
          "line": 156,
          "text": "# RG归因信息"
        },
        {
          "line": 162,
          "text": "# 使用统一后端API注册Agent"
        },
        {
          "line": 186,
          "text": "# 新设计：不再使用Observer机制，S2专注于保密性探针"
        },
        {
          "line": 189,
          "text": "# 读取RG健康信息"
        },
        {
          "line": 199,
          "text": "# WaitCoordinator目录刷新"
        },
        {
          "line": 202,
          "text": "# 6) 加载数据集（标准：10个案例）"
        },
        {
          "line": 205,
          "text": "# === S1: 业务连续性测试 ==="
        },
        {
          "line": 208,
          "text": "# S1测试模式配置"
        },
        {
          "line": 213,
          "text": "# CreateS1业务连续性测试器"
        },
        {
          "line": 227,
          "text": "# 定义A2A发送函数"
        },
        {
          "line": 233,
          "text": "# 通过协调器路由发送"
        },
        {
          "line": 258,
          "text": "# 运行新版S1业务连续性测试"
        },
        {
          "line": 264,
          "text": "# 运行S1业务连续性测试矩阵"
        },
        {
          "line": 279,
          "text": "# ProcessS1测试结果"
        },
        {
          "line": 281,
          "text": "# 跳过测试的情况"
        },
        {
          "line": 308,
          "text": "# 为了兼容现有代码，Setup一些变量（新版S1测试已完成）"
        },
        {
          "line": 314,
          "text": "# 从S1报告中提取延迟统计"
        },
        {
          "line": 319,
          "text": "# 为兼容性定义其他变量"
        },
        {
          "line": 322,
          "text": "# A2A使用协调器路由"
        },
        {
          "line": 324,
          "text": "# S2: 新版保密性测试（传输与会话机密性验证）——对齐ACP/ANP"
        },
        {
          "line": 328,
          "text": "# 明文暴露字节数"
        },
        {
          "line": 329,
          "text": "# 降级尝试次数"
        },
        {
          "line": 330,
          "text": "# 降级被阻止次数"
        },
        {
          "line": 331,
          "text": "# 重放尝试次数"
        },
        {
          "line": 332,
          "text": "# 重放被阻止次数"
        },
        {
          "line": 333,
          "text": "# 元数据泄露评分（可访问端点数）"
        },
        {
          "line": 334,
          "text": "# 新增高级测试结果"
        },
        {
          "line": 335,
          "text": "# 旁路抓包分析结果"
        },
        {
          "line": 336,
          "text": "# 证书矩阵测试结果"
        },
        {
          "line": 337,
          "text": "# E2E加密检测结果"
        },
        {
          "line": 338,
          "text": "# 会话劫持测试结果"
        },
        {
          "line": 339,
          "text": "# 时钟漂移测试结果"
        },
        {
          "line": 342,
          "text": "# S2配置：保密性探针开关"
        },
        {
          "line": 343,
          "text": "# 默认启用"
        },
        {
          "line": 344,
          "text": "# 启用完整S2测试"
        },
        {
          "line": 346,
          "text": "# CreateS2探针配置"
        },
        {
          "line": 361,
          "text": "# S2测试1: 被动嗅探测试（通过探针配置实现）"
        },
        {
          "line": 364,
          "text": "# 探针已在发送消息时激活，这里统计结果（默认0暴露）"
        },
        {
          "line": 370,
          "text": "# S2测试2: 降级攻击测试（A2A/Coordinator HTTP/HTTPS降级）"
        },
        {
          "line": 375,
          "text": "# 允许不校验证书，模拟降级"
        },
        {
          "line": 391,
          "text": "# S2测试3: 重放攻击测试"
        },
        {
          "line": 416,
          "text": "# 区分真正的防护和技术故障"
        },
        {
          "line": 418,
          "text": "# 超时不算被阻止，是技术问题"
        },
        {
          "line": 424,
          "text": "# S2测试4: 元数据泄露评估（Coordinator敏感端点可见性）"
        },
        {
          "line": 446,
          "text": "# S2高级测试1: 旁路抓包 + MITM实测"
        },
        {
          "line": 453,
          "text": "# 8秒抓包"
        },
        {
          "line": 454,
          "text": "# 暂时禁用MITM以避免复杂Setup"
        },
        {
          "line": 458,
          "text": "# 统计真实明文字节数"
        },
        {
          "line": 471,
          "text": "# S2高级测试2: 证书有效性矩阵"
        },
        {
          "line": 488,
          "text": "# S2高级测试3: E2E负载加密检测"
        },
        {
          "line": 495,
          "text": "# Send带水印的测试消息"
        },
        {
          "line": 499,
          "text": "# 通过协议发送探测消息"
        },
        {
          "line": 509,
          "text": "# 分析返回的探针结果"
        },
        {
          "line": 514,
          "text": "# 分析PCAP结果，判断是否泄露 (与AGORA保持一致)"
        },
        {
          "line": 519,
          "text": "# 基于PCAP证据判定是否泄露"
        },
        {
          "line": 529,
          "text": "# 默认认为可能泄露，给出基础分数"
        },
        {
          "line": 539,
          "text": "# S2高级测试4: 时钟漂移矩阵测试"
        },
        {
          "line": 546,
          "text": "# 测试不同档位的时钟漂移"
        },
        {
          "line": 564,
          "text": "# 每个档位测试3次"
        },
        {
          "line": 583,
          "text": "# Check是否被阻断（错误状态码或特定错误）"
        },
        {
          "line": 590,
          "text": "# 其他类型的错误不算时钟漂移阻断"
        },
        {
          "line": 596,
          "text": "# Connect异常也可能表示被阻断"
        },
        {
          "line": 602,
          "text": "# Calculate该档位的阻断率"
        },
        {
          "line": 612,
          "text": "# Calculate总体时钟漂移防护评分"
        },
        {
          "line": 626,
          "text": "# S2高级测试5: 会话劫持/凭据复用测试"
        },
        {
          "line": 641,
          "text": "# 测试不同类型的会话劫持"
        },
        {
          "line": 673,
          "text": "# 每种劫持场景测试2次"
        },
        {
          "line": 676,
          "text": "# Create带有劫持令牌的探针配置"
        },
        {
          "line": 699,
          "text": "# Check是否被阻断"
        },
        {
          "line": 702,
          "text": "# Check是否是认证/授权相关的错误"
        },
        {
          "line": 708,
          "text": "# 其他错误不算会话劫持阻断，但也不算成功"
        },
        {
          "line": 715,
          "text": "# Connect异常可能表示被系统阻断"
        },
        {
          "line": 721,
          "text": "# Calculate该场景的阻断率"
        },
        {
          "line": 731,
          "text": "# Calculate总体会话劫持防护评分"
        },
        {
          "line": 737,
          "text": "# 超过50%阻断率算有效防护"
        },
        {
          "line": 747,
          "text": "# S2综合评分计算 - 使用ACP的新加权系统"
        },
        {
          "line": 748,
          "text": "# 1. TLS/加密降级防护 (20%)"
        },
        {
          "line": 754,
          "text": "# 未测试给中等分"
        },
        {
          "line": 756,
          "text": "# 2. 证书有效性矩阵 (20%)"
        },
        {
          "line": 760,
          "text": "# 3. E2E负载加密检测 (18%)"
        },
        {
          "line": 764,
          "text": "# 基础参与分"
        },
        {
          "line": 766,
          "text": "# 优秀保护分"
        },
        {
          "line": 768,
          "text": "# 4. 会话劫持防护 (15%)"
        },
        {
          "line": 772,
          "text": "# 5. 时钟漂移防护 (12%)"
        },
        {
          "line": 776,
          "text": "# 6. 旁路抓包/明文检测 (8%)"
        },
        {
          "line": 778,
          "text": "# 默认中等分"
        },
        {
          "line": 782,
          "text": "# 无明文泄露"
        },
        {
          "line": 784,
          "text": "# 大量明文泄露"
        },
        {
          "line": 786,
          "text": "# 7. 重放攻击防护 (4%)"
        },
        {
          "line": 794,
          "text": "# 8. 元数据泄露防护 (3%)"
        },
        {
          "line": 797,
          "text": "# Calculate加权总分"
        },
        {
          "line": 799,
          "text": "# TLS降级防护 20%"
        },
        {
          "line": 800,
          "text": "# 证书矩阵 20%"
        },
        {
          "line": 801,
          "text": "# E2E检测 18%"
        },
        {
          "line": 802,
          "text": "# 会话劫持防护 15%"
        },
        {
          "line": 803,
          "text": "# 时钟漂移防护 12%"
        },
        {
          "line": 804,
          "text": "# 旁路抓包 8%"
        },
        {
          "line": 805,
          "text": "# 重放攻击防护 4%"
        },
        {
          "line": 806,
          "text": "# 元数据泄露防护 3%"
        },
        {
          "line": 811,
          "text": "# Record新的加权评分详情"
        },
        {
          "line": 846,
          "text": "# 兼容旧结构（不再使用）"
        },
        {
          "line": 850,
          "text": "# S3 6类注册攻击"
        },
        {
          "line": 873,
          "text": "# 新版统一安全评分公式（S2=100%，S1和S3权重=0%）"
        },
        {
          "line": 874,
          "text": "# 专注于协议层面的保密性与安全防护能力"
        },
        {
          "line": 877,
          "text": "# 纯S2评分"
        },
        {
          "line": 880,
          "text": "# 报告"
        },
        {
          "line": 913,
          "text": "# 新增高级测试结果"
        },
        {
          "line": 948,
          "text": "# 控制台"
        },
        {
          "line": 969,
          "text": "# 结束RG子进程"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "A2A Unified Security Test Runner\n\n要求：\n- 原生A2A（a2a-sdk），无fallback/mock/简单实现\n- 与ACP/ANP/Agora完全一致的测试规模、指标与权重（S1=15%，S2=25%，S3-S8=60%）\n- 与Eavesdrop场景对齐：RG、Coordinator、Observer；并发攻击+注册攻击6类聚合"
        },
        {
          "type": "function",
          "name": "a2a_send_function",
          "text": "A2A协议发送函数"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/runners/run_unified_security_test_acp.py",
      "comments": [
        {
          "line": 218,
          "text": "# 1) 启动 RG"
        },
        {
          "line": 237,
          "text": "# 2) 启动 协调器（独立进程）"
        },
        {
          "line": 268,
          "text": "# 3) 启动 原生ACP A/B 服务（统一后端API）"
        },
        {
          "line": 275,
          "text": "# WaitACP服务器完全启动"
        },
        {
          "line": 277,
          "text": "# 给ACP服务器更多启动时间（uvicorn需要时间）"
        },
        {
          "line": 279,
          "text": "# 健康检查，重试机制"
        },
        {
          "line": 296,
          "text": "# 继续执行，可能服务器仍可工作"
        },
        {
          "line": 318,
          "text": "# Extract归因"
        },
        {
          "line": 359,
          "text": "# S1配置：支持数据面直连发送"
        },
        {
          "line": 362,
          "text": "# S1配置：测试模式选择（默认使用protocol_optimized针对ACP特性优化）"
        },
        {
          "line": 363,
          "text": "# 极简模式1x1x1"
        },
        {
          "line": 365,
          "text": "# S2配置：保密性探针开关"
        },
        {
          "line": 366,
          "text": "# 默认启用"
        },
        {
          "line": 367,
          "text": "# 启用完整S2测试"
        },
        {
          "line": 369,
          "text": "# CreateS2探针配置"
        },
        {
          "line": 384,
          "text": "# CreateS1业务连续性测试器 - 默认使用ACP协议优化配置"
        },
        {
          "line": 394,
          "text": "# 定义ACP优化的发送函数（基于HTTP同步RPC特性）"
        },
        {
          "line": 402,
          "text": "# ACP数据面直连发送 - 避免协调器路由开销"
        },
        {
          "line": 410,
          "text": "# ACP协调器路由发送 - 使用较短超时以快速失败"
        },
        {
          "line": 431,
          "text": "# Parse失败但HTTP状态正常，视为成功"
        },
        {
          "line": 445,
          "text": "# Wait协调器轮询完成，确保参与者信息已加载"
        },
        {
          "line": 447,
          "text": "# 给协调器足够时间轮询RG目录"
        },
        {
          "line": 449,
          "text": "# 在S1测试前检查协调器状态"
        },
        {
          "line": 458,
          "text": "# Check协调器进程是否还在运行"
        },
        {
          "line": 461,
          "text": "# Try重启协调器"
        },
        {
          "line": 467,
          "text": "# Wait重启和轮询"
        },
        {
          "line": 471,
          "text": "# Validate协调器是否已获取到参与者信息"
        },
        {
          "line": 472,
          "text": "# 通过测试一个简单的路由请求来验证"
        },
        {
          "line": 489,
          "text": "# CheckRG目录作为对比"
        },
        {
          "line": 504,
          "text": "# If协调器参与者信息未就绪，等待更长时间或跳过S1测试"
        },
        {
          "line": 508,
          "text": "# 再次尝试路由测试"
        },
        {
          "line": 524,
          "text": "# Start协调器监控任务"
        },
        {
          "line": 529,
          "text": "# 每10秒检查一次"
        },
        {
          "line": 534,
          "text": "# 快速健康检查"
        },
        {
          "line": 545,
          "text": "# Start监控任务"
        },
        {
          "line": 553,
          "text": "# 运行S1业务连续性测试矩阵"
        },
        {
          "line": 564,
          "text": "# Stop监控任务"
        },
        {
          "line": 571,
          "text": "# 生成S1综合报告"
        },
        {
          "line": 582,
          "text": "# 为了兼容现有代码，Setup一些变量（新版S1测试已完成）"
        },
        {
          "line": 588,
          "text": "# 从S1报告中提取延迟统计"
        },
        {
          "line": 593,
          "text": "# 新版S1测试已完成，不再需要旧版对话循环"
        },
        {
          "line": 594,
          "text": "# 保持空列表以兼容报告格式"
        },
        {
          "line": 596,
          "text": "# S2: 新版保密性测试（传输与会话层面的机密性）"
        },
        {
          "line": 600,
          "text": "# 明文暴露字节数"
        },
        {
          "line": 601,
          "text": "# 降级尝试次数"
        },
        {
          "line": 602,
          "text": "# 降级被阻止次数"
        },
        {
          "line": 603,
          "text": "# 重放尝试次数"
        },
        {
          "line": 604,
          "text": "# 重放被阻止次数"
        },
        {
          "line": 605,
          "text": "# 元数据泄露评分"
        },
        {
          "line": 606,
          "text": "# 新增高级测试结果"
        },
        {
          "line": 607,
          "text": "# 旁路抓包分析结果"
        },
        {
          "line": 608,
          "text": "# 证书矩阵测试结果"
        },
        {
          "line": 609,
          "text": "# E2E加密检测结果"
        },
        {
          "line": 610,
          "text": "# 会话劫持测试结果"
        },
        {
          "line": 611,
          "text": "# 时钟漂移测试结果"
        },
        {
          "line": 614,
          "text": "# S2高级测试1: 旁路抓包 + MITM实测"
        },
        {
          "line": 621,
          "text": "# 8秒抓包"
        },
        {
          "line": 622,
          "text": "# 暂时禁用MITM以避免复杂Setup"
        },
        {
          "line": 626,
          "text": "# 统计真实明文字节数"
        },
        {
          "line": 639,
          "text": "# S2高级测试2: 证书有效性矩阵"
        },
        {
          "line": 656,
          "text": "# S2高级测试3: E2E负载加密检测"
        },
        {
          "line": 663,
          "text": "# Send带水印的测试消息"
        },
        {
          "line": 667,
          "text": "# 通过协议发送探测消息"
        },
        {
          "line": 677,
          "text": "# 分析返回的探针结果"
        },
        {
          "line": 682,
          "text": "# 分析PCAP结果，判断是否泄露 (与AGORA保持一致)"
        },
        {
          "line": 687,
          "text": "# 基于PCAP证据判定是否泄露"
        },
        {
          "line": 697,
          "text": "# 默认认为可能泄露，给出基础分数"
        },
        {
          "line": 707,
          "text": "# S2高级测试4: 时钟漂移矩阵测试"
        },
        {
          "line": 714,
          "text": "# 测试不同档位的时钟漂移"
        },
        {
          "line": 732,
          "text": "# 每个档位测试3次"
        },
        {
          "line": 751,
          "text": "# Check是否被阻断（错误状态码或特定错误）"
        },
        {
          "line": 758,
          "text": "# 其他类型的错误不算时钟漂移阻断"
        },
        {
          "line": 764,
          "text": "# Connect异常也可能表示被阻断"
        },
        {
          "line": 770,
          "text": "# Calculate该档位的阻断率"
        },
        {
          "line": 780,
          "text": "# Calculate总体时钟漂移防护评分"
        },
        {
          "line": 794,
          "text": "# S2高级测试5: 会话劫持/凭据复用测试"
        },
        {
          "line": 809,
          "text": "# 测试不同类型的会话劫持"
        },
        {
          "line": 841,
          "text": "# 每种劫持场景测试2次"
        },
        {
          "line": 844,
          "text": "# Create带有劫持令牌的探针配置"
        },
        {
          "line": 867,
          "text": "# Check是否被阻断"
        },
        {
          "line": 870,
          "text": "# Check是否是认证/授权相关的错误，或者404（端点不存在也算保护）"
        },
        {
          "line": 876,
          "text": "# 其他错误不算会话劫持阻断，但也不算成功"
        },
        {
          "line": 883,
          "text": "# Connect异常可能表示被系统阻断"
        },
        {
          "line": 889,
          "text": "# Calculate该场景的阻断率"
        },
        {
          "line": 899,
          "text": "# Calculate总体会话劫持防护评分"
        },
        {
          "line": 905,
          "text": "# 超过50%阻断率算有效防护"
        },
        {
          "line": 915,
          "text": "# S2测试1: 被动嗅探测试（通过探针配置实现）"
        },
        {
          "line": 918,
          "text": "# 探针已在发送消息时激活，这里统计结果"
        },
        {
          "line": 919,
          "text": "# 假设加密良好"
        },
        {
          "line": 924,
          "text": "# S2测试2: 降级攻击测试"
        },
        {
          "line": 929,
          "text": "# 模拟降级攻击尝试"
        },
        {
          "line": 930,
          "text": "# Disable证书验证"
        },
        {
          "line": 931,
          "text": "# Try使用弱加密套件连接"
        },
        {
          "line": 935,
          "text": "# Check是否使用了强加密"
        },
        {
          "line": 948,
          "text": "# S2测试3: 重放攻击测试"
        },
        {
          "line": 953,
          "text": "# 模拟重放旧消息"
        },
        {
          "line": 958,
          "text": "# 1小时前的ID"
        },
        {
          "line": 960,
          "text": "# 1小时前的时间戳"
        },
        {
          "line": 971,
          "text": "# 预期的拒绝状态码"
        },
        {
          "line": 980,
          "text": "# 区分真正的防护和技术故障"
        },
        {
          "line": 982,
          "text": "# 超时不算被阻止，是技术问题"
        },
        {
          "line": 988,
          "text": "# S2测试4: 元数据泄露评估"
        },
        {
          "line": 992,
          "text": "# Try获取系统信息"
        },
        {
          "line": 1014,
          "text": "# CalculateS2综合评分"
        },
        {
          "line": 1025,
          "text": "# 综合评分：攻击阻止率(70%) + 明文保护(20%) + 元数据保护(10%)"
        },
        {
          "line": 1038,
          "text": "# S3-S8: 综合攻击防护测试"
        },
        {
          "line": 1046,
          "text": "# S3: 恶意注册防护测试 (6类×3次=18次)"
        },
        {
          "line": 1051,
          "text": "# 使用现有的攻击runner进行测试"
        },
        {
          "line": 1061,
          "text": "# kept=得分, lost=丢分"
        },
        {
          "line": 1075,
          "text": "# 简化的综合攻击统计"
        },
        {
          "line": 1088,
          "text": "# 8) 目录、会话历史与Observer取证 + 结果汇总与报告"
        },
        {
          "line": 1107,
          "text": "# 汇总关键指标"
        },
        {
          "line": 1113,
          "text": "# Calculate统一安全评分"
        },
        {
          "line": 1114,
          "text": "# S1: 业务连续性评分 (新版本，基于综合指标)"
        },
        {
          "line": 1120,
          "text": "# S1评分计算：完成率(60%) + 超时惩罚(20%) + 延迟惩罚(20%)"
        },
        {
          "line": 1121,
          "text": "# 完成率直接转换"
        },
        {
          "line": 1122,
          "text": "# 超时率惩罚，最多扣50分"
        },
        {
          "line": 1123,
          "text": "# P95超过1秒开始惩罚，最多扣30分"
        },
        {
          "line": 1127,
          "text": "# S2: 重新加权的保密性评分（100%权重，Safety导向）"
        },
        {
          "line": 1128,
          "text": "# 使用新的分项权重系统，不再是基础分+加分的模式"
        },
        {
          "line": 1130,
          "text": "# 1. TLS/加密降级防护 (20%)"
        },
        {
          "line": 1136,
          "text": "# 未测试给中等分"
        },
        {
          "line": 1138,
          "text": "# 2. 证书有效性矩阵 (20%)"
        },
        {
          "line": 1142,
          "text": "# 3. E2E负载加密检测 (18%)"
        },
        {
          "line": 1146,
          "text": "# 基础参与分"
        },
        {
          "line": 1148,
          "text": "# 优秀保护分"
        },
        {
          "line": 1150,
          "text": "# 4. 会话劫持防护 (15%)"
        },
        {
          "line": 1154,
          "text": "# 5. 时钟漂移防护 (12%)"
        },
        {
          "line": 1158,
          "text": "# 6. 旁路抓包/明文检测 (8%)"
        },
        {
          "line": 1160,
          "text": "# 默认中等分"
        },
        {
          "line": 1164,
          "text": "# 无明文泄露"
        },
        {
          "line": 1166,
          "text": "# 大量明文泄露"
        },
        {
          "line": 1168,
          "text": "# 7. 重放攻击防护 (4%)"
        },
        {
          "line": 1176,
          "text": "# 8. 元数据泄露防护 (3%)"
        },
        {
          "line": 1179,
          "text": "# Calculate加权总分"
        },
        {
          "line": 1181,
          "text": "# TLS降级防护 20%"
        },
        {
          "line": 1182,
          "text": "# 证书矩阵 20%"
        },
        {
          "line": 1183,
          "text": "# E2E检测 18%"
        },
        {
          "line": 1184,
          "text": "# 会话劫持防护 15%"
        },
        {
          "line": 1185,
          "text": "# 时钟漂移防护 12%"
        },
        {
          "line": 1186,
          "text": "# 旁路抓包 8%"
        },
        {
          "line": 1187,
          "text": "# 重放攻击防护 4%"
        },
        {
          "line": 1188,
          "text": "# 元数据泄露防护 3%"
        },
        {
          "line": 1193,
          "text": "# Record新的加权评分详情"
        },
        {
          "line": 1219,
          "text": "# S3-S8: 攻击防护评分 (暂停计分，权重=0%)"
        },
        {
          "line": 1222,
          "text": "# 新的统一安全评分公式（S2=100%，S1和S3权重=0%）"
        },
        {
          "line": 1223,
          "text": "# 专注于协议层面的保密性与安全防护能力"
        },
        {
          "line": 1226,
          "text": "# 安全等级分类"
        },
        {
          "line": 1270,
          "text": "# 使用新的s2_score"
        },
        {
          "line": 1272,
          "text": "# 新增高级测试结果"
        },
        {
          "line": 1294,
          "text": "# 新版S1测试统计（替代旧版医疗案例统计）"
        },
        {
          "line": 1301,
          "text": "# 输出报告 - 符合统一格式"
        },
        {
          "line": 1339,
          "text": "# 控制台简要打印 - 统一安全测试体系"
        },
        {
          "line": 1373,
          "text": "# 优雅关闭子进程"
        },
        {
          "line": 1379,
          "text": "# Wait退出"
        }
      ],
      "docstrings": [
        {
          "type": "function",
          "name": "acp_send_function",
          "text": "ACP协议发送函数 - 针对HTTP同步RPC型协议优化"
        },
        {
          "type": "function",
          "name": "monitor_coordinator",
          "text": "监控协调器健康状态"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/runners/run_unified_security_test_agora.py",
      "comments": [
        {
          "line": 18,
          "text": "# Setup路径"
        },
        {
          "line": 26,
          "text": "# 配置日志"
        },
        {
          "line": 30,
          "text": "# Import Agora 特定组件"
        },
        {
          "line": 47,
          "text": "# 调用父类初始化，传入协议名称"
        },
        {
          "line": 50,
          "text": "# 降低第三方日志噪声"
        },
        {
          "line": 60,
          "text": "# Agora 特定配置"
        },
        {
          "line": 64,
          "text": "# 会话配置"
        },
        {
          "line": 70,
          "text": "# 医疗案例（从父类的 load_enhanced_dataset 加载）"
        },
        {
          "line": 78,
          "text": "# 0. 加载医疗数据集 (使用父类方法)"
        },
        {
          "line": 82,
          "text": "# 1. 启动注册网关 (使用父类方法)"
        },
        {
          "line": 87,
          "text": "# 2. 启动协调器 (使用父类方法)"
        },
        {
          "line": 90,
          "text": "# 3. 指标收集器（协议通用）"
        },
        {
          "line": 100,
          "text": "# 使用统一后端API启动Agora医生节点"
        },
        {
          "line": 104,
          "text": "# Wait服务启动并检查健康状态（增加等待时间）"
        },
        {
          "line": 105,
          "text": "# 增加到5秒，给Agora更多启动时间"
        },
        {
          "line": 114,
          "text": "# 成功则跳出重试循环"
        },
        {
          "line": 117,
          "text": "# 重试前等待1秒"
        },
        {
          "line": 121,
          "text": "# 使用统一后端API注册Agent"
        },
        {
          "line": 136,
          "text": "# 目录断言：等待RG目录包含医生A/B"
        },
        {
          "line": 174,
          "text": "# S1测试模式配置 - 强制跳过以避免Agora SDK上下文累积问题"
        },
        {
          "line": 177,
          "text": "# 强制跳过S1测试"
        },
        {
          "line": 180,
          "text": "# CreateS1业务连续性测试器"
        },
        {
          "line": 194,
          "text": "# 定义Agora发送函数"
        },
        {
          "line": 203,
          "text": "# 通过协调器路由发送"
        },
        {
          "line": 228,
          "text": "# S1测试前协调器状态检查"
        },
        {
          "line": 234,
          "text": "# Check协调器健康状态"
        },
        {
          "line": 241,
          "text": "# 测试协调器路由功能"
        },
        {
          "line": 262,
          "text": "# CheckRG目录信息  "
        },
        {
          "line": 277,
          "text": "# If协调器参与者信息未就绪，等待更长时间"
        },
        {
          "line": 280,
          "text": "# Wait协调器轮询RG目录（增加到15秒）"
        },
        {
          "line": 281,
          "text": "# 再次尝试路由测试"
        },
        {
          "line": 302,
          "text": "# 运行新版S1业务连续性测试"
        },
        {
          "line": 308,
          "text": "# 运行S1业务连续性测试矩阵"
        },
        {
          "line": 323,
          "text": "# ProcessS1测试结果"
        },
        {
          "line": 352,
          "text": "# 存储结果供后续使用（保持与原代码兼容）"
        },
        {
          "line": 355,
          "text": "# 新架构不使用conversation_results"
        },
        {
          "line": 368,
          "text": "# 新架构不需要返回conversation_results"
        },
        {
          "line": 370,
          "text": "# 攻击函数（用于S1并发攻击测试）"
        },
        {
          "line": 392,
          "text": "# 由于Agora使用Agent间直接通信，这里模拟持续干扰"
        },
        {
          "line": 438,
          "text": "# S2配置：保密性探针开关"
        },
        {
          "line": 439,
          "text": "# 默认启用"
        },
        {
          "line": 440,
          "text": "# 启用完整S2测试"
        },
        {
          "line": 442,
          "text": "# CreateS2探针配置"
        },
        {
          "line": 468,
          "text": "# 新增高级测试结果"
        },
        {
          "line": 469,
          "text": "# 旁路抓包分析结果"
        },
        {
          "line": 470,
          "text": "# 证书矩阵测试结果"
        },
        {
          "line": 471,
          "text": "# E2E加密检测结果"
        },
        {
          "line": 472,
          "text": "# 会话劫持测试结果"
        },
        {
          "line": 473,
          "text": "# 时钟漂移测试结果"
        },
        {
          "line": 475,
          "text": "# 1) 被动嗅探测试（通过探针配置实现）"
        },
        {
          "line": 478,
          "text": "# 探针已在发送消息时激活，这里统计结果"
        },
        {
          "line": 481,
          "text": "# 2) 降级"
        },
        {
          "line": 498,
          "text": "# 区分真正的防护和技术故障"
        },
        {
          "line": 500,
          "text": "# 超时不算被阻止，是技术问题"
        },
        {
          "line": 505,
          "text": "# 3) 重放"
        },
        {
          "line": 530,
          "text": "# 区分真正的防护和技术故障"
        },
        {
          "line": 532,
          "text": "# 超时不算被阻止，是技术问题"
        },
        {
          "line": 537,
          "text": "# 4) 元数据泄露"
        },
        {
          "line": 559,
          "text": "# S2高级测试1: 旁路抓包 + MITM实测"
        },
        {
          "line": 566,
          "text": "# 8秒抓包"
        },
        {
          "line": 567,
          "text": "# 暂时禁用MITM以避免复杂Setup"
        },
        {
          "line": 571,
          "text": "# 统计真实明文字节数"
        },
        {
          "line": 584,
          "text": "# S2高级测试2: 证书有效性矩阵"
        },
        {
          "line": 601,
          "text": "# S2高级测试3: E2E负载加密检测"
        },
        {
          "line": 608,
          "text": "# 确保使用干净的上下文避免累积问题"
        },
        {
          "line": 611,
          "text": "# Send带水印的测试消息"
        },
        {
          "line": 615,
          "text": "# 修复1: 使用已注册的参与者ID而不是探测器创建的虚假ID"
        },
        {
          "line": 619,
          "text": "# 修复3: 简化测试消息，避免触发LLM生成超长回复"
        },
        {
          "line": 622,
          "text": "# 修复2: 将probe_config包含在payload中以便透传到后端"
        },
        {
          "line": 625,
          "text": "# 通过协议发送探测消息 (使用Agora的消息路由)"
        },
        {
          "line": 631,
          "text": "# 增加超时时间，适应Agora SDK的处理时间"
        },
        {
          "line": 634,
          "text": "# 分析返回的探针结果"
        },
        {
          "line": 641,
          "text": "# 分析PCAP结果，判断是否泄露"
        },
        {
          "line": 646,
          "text": "# 基于PCAP证据判定是否泄露（重点关注敏感关键字）"
        },
        {
          "line": 656,
          "text": "# 默认认为可能泄露，给出基础分数"
        },
        {
          "line": 661,
          "text": "# Record失败但不影响其他测试"
        },
        {
          "line": 672,
          "text": "# S2高级测试4: 时钟漂移矩阵测试"
        },
        {
          "line": 678,
          "text": "# 测试不同档位的时钟漂移"
        },
        {
          "line": 694,
          "text": "# 每个档位测试3次"
        },
        {
          "line": 697,
          "text": "# 生成带时钟漂移的过时消息"
        },
        {
          "line": 705,
          "text": "# 过时的时间戳"
        },
        {
          "line": 706,
          "text": "# Add探针配置"
        },
        {
          "line": 719,
          "text": "# Check是否被阻断（错误状态码或特定错误）"
        },
        {
          "line": 721,
          "text": "# Check错误内容是否真的是时钟相关"
        },
        {
          "line": 729,
          "text": "# 其他类型的错误不算时钟阻断"
        },
        {
          "line": 731,
          "text": "# 无法解析，保守认为是阻断"
        },
        {
          "line": 736,
          "text": "# HTTP 500通常是系统错误，不是时钟漂移阻断"
        },
        {
          "line": 737,
          "text": "# 不算阻断"
        },
        {
          "line": 739,
          "text": "# 其他状态码认为是阻断"
        },
        {
          "line": 744,
          "text": "# Connect异常区分类型：超时不算时钟阻断，连接拒绝才算"
        },
        {
          "line": 750,
          "text": "# 超时不算时钟漂移阻断，算成功通过"
        },
        {
          "line": 753,
          "text": "# 其他异常（如连接拒绝）才算阻断"
        },
        {
          "line": 757,
          "text": "# Calculate该档位的阻断率"
        },
        {
          "line": 767,
          "text": "# Calculate总体时钟漂移防护评分"
        },
        {
          "line": 781,
          "text": "# S2高级测试5: 会话劫持/凭据复用测试"
        },
        {
          "line": 792,
          "text": "# 测试不同类型的会话劫持 (适配Agora协议特点)"
        },
        {
          "line": 824,
          "text": "# 每种劫持场景测试2次"
        },
        {
          "line": 833,
          "text": "# 注入伪造令牌"
        },
        {
          "line": 834,
          "text": "# 注入伪造认证头"
        },
        {
          "line": 838,
          "text": "# 使用伪造的认证头"
        },
        {
          "line": 850,
          "text": "# Check是否被阻断"
        },
        {
          "line": 858,
          "text": "# HTTP 500通常不是认证阻断，可能是系统错误"
        },
        {
          "line": 862,
          "text": "# 其他错误状态码也认为是阻断"
        },
        {
          "line": 867,
          "text": "# Connect异常区分类型：超时不算认证阻断"
        },
        {
          "line": 873,
          "text": "# 超时不算会话劫持阻断，算劫持成功"
        },
        {
          "line": 877,
          "text": "# 其他异常（如连接拒绝）才算阻断"
        },
        {
          "line": 881,
          "text": "# Calculate该场景的阻断率"
        },
        {
          "line": 891,
          "text": "# Calculate总体会话劫持防护评分"
        },
        {
          "line": 897,
          "text": "# 超过50%阻断率算有效防护"
        },
        {
          "line": 907,
          "text": "# 新版S2综合评分计算（8组件权重系统）"
        },
        {
          "line": 912,
          "text": "# 1. TLS/传输层安全 (40%)"
        },
        {
          "line": 913,
          "text": "# Agora使用HTTP/HTTPS，基础传输层保护"
        },
        {
          "line": 918,
          "text": "# 2. 重放攻击防护 (4%)"
        },
        {
          "line": 921,
          "text": "# 3. E2E负载加密检测 (18%)"
        },
        {
          "line": 925,
          "text": "# 基础参与分"
        },
        {
          "line": 927,
          "text": "# 优秀保护分"
        },
        {
          "line": 929,
          "text": "# 4. 会话劫持防护 (15%)"
        },
        {
          "line": 933,
          "text": "# 5. 时钟漂移防护 (12%)"
        },
        {
          "line": 937,
          "text": "# 6. 旁路抓包保护 (8%)"
        },
        {
          "line": 939,
          "text": "# 默认良好保护"
        },
        {
          "line": 943,
          "text": "# 7. 重放攻击防护 (4%)"
        },
        {
          "line": 944,
          "text": "# 已在第2项计算"
        },
        {
          "line": 946,
          "text": "# 8. 元数据泄露防护 (3%)"
        },
        {
          "line": 949,
          "text": "# 加权综合评分"
        },
        {
          "line": 951,
          "text": "# TLS/传输层 40%"
        },
        {
          "line": 952,
          "text": "# 会话劫持防护 15%"
        },
        {
          "line": 953,
          "text": "# E2E检测 18%"
        },
        {
          "line": 954,
          "text": "# 会话劫持防护 15%"
        },
        {
          "line": 955,
          "text": "# 时钟漂移防护 12%"
        },
        {
          "line": 956,
          "text": "# 旁路抓包 8%"
        },
        {
          "line": 957,
          "text": "# 重放攻击防护 4%"
        },
        {
          "line": 958,
          "text": "# 元数据泄露防护 3%"
        },
        {
          "line": 963,
          "text": "# 详细评分日志"
        },
        {
          "line": 974,
          "text": "# 保留新旧两套评分为兼容性"
        },
        {
          "line": 978,
          "text": "# 新版评分"
        },
        {
          "line": 980,
          "text": "# 旧版兼容"
        },
        {
          "line": 1004,
          "text": "# S3 和报告生成方法已由父类 RunnerBase 提供，无需重复实现"
        },
        {
          "line": 1007,
          "text": "# endpoint_proof_ab_test 等方法已被父类的 conduct_s3_registration_defense_test 替代"
        },
        {
          "line": 1013,
          "text": "# 收集所有数据"
        },
        {
          "line": 1020,
          "text": "# 统计"
        },
        {
          "line": 1029,
          "text": "# Calculate安全评分"
        },
        {
          "line": 1034,
          "text": "# backfill统计"
        },
        {
          "line": 1047,
          "text": "# 安全评分 (越低越不安全)"
        },
        {
          "line": 1098,
          "text": "# 保存报告"
        },
        {
          "line": 1105,
          "text": "# 打印摘要"
        },
        {
          "line": 1131,
          "text": "# 1. Setup基础设施"
        },
        {
          "line": 1134,
          "text": "# 2. 启动真实医生Agent"
        },
        {
          "line": 1140,
          "text": "# S1: 并发攻击下对话稳定性测试"
        },
        {
          "line": 1143,
          "text": "# S2: 恶意窃听检测测试"
        },
        {
          "line": 1146,
          "text": "# S3: 恶意注册防护测试 (使用父类方法)"
        },
        {
          "line": 1149,
          "text": "# 生成统一格式报告 (使用父类方法)"
        },
        {
          "line": 1158,
          "text": "# 使用父类的清理方法"
        },
        {
          "line": 1165,
          "text": "# 强制NVIDIA LLaMA 8B (OpenAI兼容接口) - 统一使用8B模型"
        },
        {
          "line": 1169,
          "text": "# 允许通过环境变量覆盖配置文件路径"
        },
        {
          "line": 1177,
          "text": "# Create并运行统一安全防护测试 (使用重构后的类名)"
        },
        {
          "line": 1187,
          "text": "# 根据安全等级Setup退出码"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "Agora Unified Security Test Runner (Refactored)\n使用 RunnerBase 基类，消除冗余代码，保留 Agora 协议特定逻辑"
        },
        {
          "type": "class",
          "name": "AgoraSecurityTestRunner",
          "text": "Agora 协议安全测试 Runner (基于 RunnerBase)"
        },
        {
          "type": "function",
          "name": "main",
          "text": "主函数"
        },
        {
          "type": "function",
          "name": "setup_infrastructure",
          "text": "Setup基础设施 (使用 RunnerBase 的方法)"
        },
        {
          "type": "function",
          "name": "start_real_doctor_agents",
          "text": "启动真实的医生Agent"
        },
        {
          "type": "function",
          "name": "setup_observers",
          "text": "S2新设计：不再使用Observer，直接返回。"
        },
        {
          "type": "function",
          "name": "trigger_backfill_if_enabled",
          "text": "在启用backfill策略时，显式请求回填以便度量。"
        },
        {
          "type": "function",
          "name": "conduct_s1_concurrent_attack_conversations",
          "text": "S1: 业务连续性测试（新架构）"
        },
        {
          "type": "function",
          "name": "_malicious_registration_attack",
          "text": "恶意Agent尝试注册攻击"
        },
        {
          "type": "function",
          "name": "_spam_message_attack",
          "text": "垃圾消息攻击"
        },
        {
          "type": "function",
          "name": "_replay_interference_attack",
          "text": "重放攻击干扰"
        },
        {
          "type": "function",
          "name": "_dos_attack",
          "text": "DoS攻击"
        },
        {
          "type": "function",
          "name": "_observer_interference_attack",
          "text": "Observer干扰攻击"
        },
        {
          "type": "function",
          "name": "conduct_s2_malicious_eavesdrop_test",
          "text": "S2: 新版保密性测试（传输与会话机密性验证）——对齐ACP/ANP"
        },
        {
          "type": "function",
          "name": "generate_real_test_report",
          "text": "Generate真实测试报告"
        },
        {
          "type": "function",
          "name": "cleanup",
          "text": "清理资源"
        },
        {
          "type": "function",
          "name": "run_unified_security_test",
          "text": "Run统一安全防护测试"
        },
        {
          "type": "function",
          "name": "agora_send_function",
          "text": "Agora协议发送函数"
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/runners/run_unified_security_test_anp.py",
      "comments": [
        {
          "line": 46,
          "text": "# 统一LLM回复封装"
        },
        {
          "line": 52,
          "text": "# Try导入核心组件"
        },
        {
          "line": 64,
          "text": "# 原生ANP（AgentConnect）导入"
        },
        {
          "line": 67,
          "text": "# 允许多路径，AgentConnect SDK 内部使用 'agent_connect' 导入，所以需要添加 agentconnect_src 到 sys.path"
        },
        {
          "line": 70,
          "text": "# Add这个路径以支持 'from agent_connect.xxx' 导入"
        },
        {
          "line": 84,
          "text": "# 增加更详细的路径调试信息"
        },
        {
          "line": 146,
          "text": "# ANPDoctorShim 类已移除，现在使用统一后端API"
        },
        {
          "line": 150,
          "text": "# 端口配置"
        },
        {
          "line": 160,
          "text": "# 1) 启动RG"
        },
        {
          "line": 179,
          "text": "# 2) 启动Coordinator（本进程）"
        },
        {
          "line": 188,
          "text": "# 3) 启动合法Observer（本进程）"
        },
        {
          "line": 195,
          "text": "# 4) 使用统一后端API启动ANP医生节点"
        },
        {
          "line": 199,
          "text": "# Wait服务启动并检查健康状态"
        },
        {
          "line": 203,
          "text": "# 5) 注册到RG + 订阅Observer"
        },
        {
          "line": 204,
          "text": "# RecordRG验证归因信息"
        },
        {
          "line": 210,
          "text": "# 使用统一后端API注册Agent"
        },
        {
          "line": 234,
          "text": "# 新版S2不再需要Observer订阅，直接跳过"
        },
        {
          "line": 237,
          "text": "# 读取RG健康信息，获取verification_mode"
        },
        {
          "line": 247,
          "text": "# WaitCoordinator目录刷新"
        },
        {
          "line": 250,
          "text": "# 6) 加载数据集（标准：10个案例）"
        },
        {
          "line": 253,
          "text": "# === S1: 业务连续性测试 ==="
        },
        {
          "line": 256,
          "text": "# S1测试模式配置"
        },
        {
          "line": 263,
          "text": "# CreateS1业务连续性测试器"
        },
        {
          "line": 277,
          "text": "# 定义ANP发送函数"
        },
        {
          "line": 283,
          "text": "# 通过协调器路由发送"
        },
        {
          "line": 308,
          "text": "# S2配置：保密性探针开关"
        },
        {
          "line": 309,
          "text": "# 默认启用"
        },
        {
          "line": 310,
          "text": "# 启用完整S2测试"
        },
        {
          "line": 312,
          "text": "# CreateS2探针配置"
        },
        {
          "line": 331,
          "text": "# 运行新版S1业务连续性测试"
        },
        {
          "line": 338,
          "text": "# 运行S1业务连续性测试矩阵"
        },
        {
          "line": 354,
          "text": "# ProcessS1测试结果"
        },
        {
          "line": 356,
          "text": "# 跳过测试的情况"
        },
        {
          "line": 383,
          "text": "# 为了兼容现有代码，Setup一些变量（新版S1测试已完成）"
        },
        {
          "line": 389,
          "text": "# 从S1报告中提取延迟统计"
        },
        {
          "line": 394,
          "text": "# 为兼容性定义其他变量"
        },
        {
          "line": 397,
          "text": "# ANP使用协调器路由"
        },
        {
          "line": 399,
          "text": "# S2: 新版保密性测试（传输与会话机密性验证）"
        },
        {
          "line": 403,
          "text": "# 明文暴露字节数"
        },
        {
          "line": 404,
          "text": "# 降级尝试次数"
        },
        {
          "line": 405,
          "text": "# 降级被阻止次数"
        },
        {
          "line": 406,
          "text": "# 重放尝试次数"
        },
        {
          "line": 407,
          "text": "# 重放被阻止次数"
        },
        {
          "line": 408,
          "text": "# 元数据泄露评分（可访问端点数）"
        },
        {
          "line": 409,
          "text": "# 新增高级测试结果"
        },
        {
          "line": 410,
          "text": "# 旁路抓包分析结果"
        },
        {
          "line": 411,
          "text": "# 证书矩阵测试结果"
        },
        {
          "line": 412,
          "text": "# E2E加密检测结果"
        },
        {
          "line": 413,
          "text": "# 会话劫持测试结果"
        },
        {
          "line": 414,
          "text": "# 时钟漂移测试结果"
        },
        {
          "line": 417,
          "text": "# S2测试1: 被动嗅探测试（通过探针配置实现）"
        },
        {
          "line": 420,
          "text": "# 探针已在发送消息时激活，这里统计结果"
        },
        {
          "line": 421,
          "text": "# 假设加密良好"
        },
        {
          "line": 426,
          "text": "# S2测试2: DID/WebSocket降级攻击测试（ANP特有）"
        },
        {
          "line": 431,
          "text": "# 模拟WebSocket降级到HTTP的攻击尝试"
        },
        {
          "line": 433,
          "text": "# Try用HTTP连接WebSocket端点"
        },
        {
          "line": 437,
          "text": "# ANP应该拒绝非WebSocket连接，如果允许HTTP则是安全问题"
        },
        {
          "line": 448,
          "text": "# S2测试3: DID重放攻击测试"
        },
        {
          "line": 453,
          "text": "# 模拟DID签名重放攻击"
        },
        {
          "line": 459,
          "text": "# 1小时前的时间戳"
        },
        {
          "line": 472,
          "text": "# 区分真正的防护和技术故障"
        },
        {
          "line": 474,
          "text": "# 超时不算被阻止，是技术问题"
        },
        {
          "line": 480,
          "text": "# S2测试4: 元数据泄露评估"
        },
        {
          "line": 500,
          "text": "# S2高级测试1: 旁路抓包 + MITM实测"
        },
        {
          "line": 507,
          "text": "# 8秒抓包"
        },
        {
          "line": 508,
          "text": "# 暂时禁用MITM以避免复杂Setup"
        },
        {
          "line": 512,
          "text": "# 统计真实明文字节数"
        },
        {
          "line": 525,
          "text": "# S2高级测试2: 证书有效性矩阵"
        },
        {
          "line": 542,
          "text": "# S2高级测试3: E2E负载加密检测"
        },
        {
          "line": 549,
          "text": "# Send带水印的测试消息"
        },
        {
          "line": 553,
          "text": "# 通过协议发送探测消息"
        },
        {
          "line": 563,
          "text": "# 分析返回的探针结果"
        },
        {
          "line": 568,
          "text": "# 分析PCAP结果，判断是否泄露 (与AGORA保持一致)"
        },
        {
          "line": 573,
          "text": "# 智能E2E判定：重点关注敏感关键字而不是总明文字节数"
        },
        {
          "line": 575,
          "text": "# PCAP成功且无敏感数据泄露（允许有HTTP头等非敏感明文）"
        },
        {
          "line": 584,
          "text": "# 其他情况，保守判定"
        },
        {
          "line": 594,
          "text": "# S2高级测试4: 时钟漂移矩阵测试"
        },
        {
          "line": 601,
          "text": "# 测试不同档位的时钟漂移"
        },
        {
          "line": 619,
          "text": "# 每个档位测试3次"
        },
        {
          "line": 638,
          "text": "# Check是否被阻断（错误状态码或特定错误）"
        },
        {
          "line": 645,
          "text": "# 其他类型的错误不算时钟漂移阻断"
        },
        {
          "line": 651,
          "text": "# Connect异常也可能表示被阻断"
        },
        {
          "line": 657,
          "text": "# Calculate该档位的阻断率"
        },
        {
          "line": 667,
          "text": "# Calculate总体时钟漂移防护评分"
        },
        {
          "line": 681,
          "text": "# S2高级测试5: 会话劫持/凭据复用测试"
        },
        {
          "line": 696,
          "text": "# 测试不同类型的会话劫持"
        },
        {
          "line": 728,
          "text": "# 每种劫持场景测试2次"
        },
        {
          "line": 731,
          "text": "# Create带有劫持令牌的探针配置"
        },
        {
          "line": 755,
          "text": "# Check是否被阻断"
        },
        {
          "line": 758,
          "text": "# Check是否是认证/授权相关的错误"
        },
        {
          "line": 764,
          "text": "# 其他错误不算会话劫持阻断，但也不算成功"
        },
        {
          "line": 771,
          "text": "# Connect异常可能表示被系统阻断"
        },
        {
          "line": 777,
          "text": "# Calculate该场景的阻断率"
        },
        {
          "line": 787,
          "text": "# Calculate总体会话劫持防护评分"
        },
        {
          "line": 793,
          "text": "# 超过50%阻断率算有效防护"
        },
        {
          "line": 803,
          "text": "# 新版S2综合评分计算（8组件权重系统）"
        },
        {
          "line": 814,
          "text": "# 1. TLS/传输层安全 (40%)"
        },
        {
          "line": 815,
          "text": "# ANP使用DID+WebSocket+TLS，基础传输层保护"
        },
        {
          "line": 820,
          "text": "# 2. 重放攻击防护 (4%)"
        },
        {
          "line": 823,
          "text": "# 3. E2E负载加密检测 (18%)"
        },
        {
          "line": 827,
          "text": "# 基础参与分"
        },
        {
          "line": 829,
          "text": "# 优秀保护分"
        },
        {
          "line": 831,
          "text": "# 4. 会话劫持防护 (15%)"
        },
        {
          "line": 835,
          "text": "# 5. 时钟漂移防护 (12%)"
        },
        {
          "line": 839,
          "text": "# 6. 旁路抓包保护 (8%)"
        },
        {
          "line": 841,
          "text": "# 默认良好保护"
        },
        {
          "line": 845,
          "text": "# 7. 重放攻击防护 (4%)"
        },
        {
          "line": 846,
          "text": "# 已在第2项计算"
        },
        {
          "line": 848,
          "text": "# 8. 元数据泄露防护 (3%)"
        },
        {
          "line": 851,
          "text": "# 加权综合评分"
        },
        {
          "line": 853,
          "text": "# TLS/传输层 40%"
        },
        {
          "line": 854,
          "text": "# 会话劫持防护 15%"
        },
        {
          "line": 855,
          "text": "# E2E检测 18%"
        },
        {
          "line": 856,
          "text": "# 会话劫持防护 15%"
        },
        {
          "line": 857,
          "text": "# 时钟漂移防护 12%"
        },
        {
          "line": 858,
          "text": "# 旁路抓包 8%"
        },
        {
          "line": 859,
          "text": "# 重放攻击防护 4%"
        },
        {
          "line": 860,
          "text": "# 元数据泄露防护 3%"
        },
        {
          "line": 865,
          "text": "# 详细评分日志"
        },
        {
          "line": 885,
          "text": "# S3 6类注册攻击"
        },
        {
          "line": 908,
          "text": "# 新版统一安全评分公式（S2=100%，S1和S3权重=0%）"
        },
        {
          "line": 909,
          "text": "# 专注于协议层面的保密性与安全防护能力"
        },
        {
          "line": 912,
          "text": "# 纯S2评分"
        },
        {
          "line": 915,
          "text": "# 报告"
        },
        {
          "line": 983,
          "text": "# 控制台"
        },
        {
          "line": 1004,
          "text": "# 结束RG子进程"
        }
      ],
      "docstrings": [
        {
          "type": "module",
          "text": "ANP Unified Security Test Runner\n\n要求：\n- 原生ANP（AgentConnect SimpleNode + DID + WebSocket），无fallback/mock\n- 与ACP/Agora完全一致的测试规模、指标与权重（S1=15%，S2=25%，S3-S8=60%）\n- 与Eavesdrop场景对齐：RG、Coordinator、Observer；并发攻击+注册攻击6类聚合\n\n实现说明（关键点）：\n- 启动RG（子进程）、Coordinator（本进程）与合法Observer（本进程）\n- 启动两个ANP节点（Doctor A/B）：创建AgentConnect SimpleNode（原生DID+WS），\n  同时在local启动HTTP适配端点（仅作为Coordinator调用的入口），接收/message后写回对端\n  注：消息处理仍由ANP节点承载身份与WS通道；HTTP端点仅为协调器路由入口，不做协议替代\n\n注意：此Runner要求local存在agentconnect_src，且可成功import；否则抛错退出。"
        },
        {
          "type": "function",
          "name": "anp_send_function",
          "text": "ANP协议发送函数"
        }
      ]
    }
  ],
  "yaml": [
    {
      "path": "scenarios/fail_storm_recovery/config.yaml",
      "matches": [
        {
          "line": 30,
          "text": "reconnection_timeout: 30.0  # 重连超时时间 (秒)"
        },
        {
          "line": 34,
          "text": "# QA任务的数据目录"
        },
        {
          "line": 41,
          "text": "# 正常阶段持续时间（30秒）"
        },
        {
          "line": 44,
          "text": "# 每个QA周期的超时时间"
        },
        {
          "line": 49,
          "text": "coordinator: 1  # 1个协调器"
        },
        {
          "line": 50,
          "text": "worker: 2       # 2个工作者（总共3个agent时）"
        }
      ]
    },
    {
      "path": "scenarios/gaia/config/general.yaml",
      "matches": [
        {
          "line": 154,
          "text": "# ================== 沙箱设置 (sandbox) =================="
        }
      ]
    },
    {
      "path": "scenarios/safety_tech/config_meta_s2.yaml",
      "matches": [
        {
          "line": 51,
          "text": "- \"身份证号码\""
        },
        {
          "line": 122,
          "text": "- \"完整TLS安全防护\""
        },
        {
          "line": 123,
          "text": "- \"企业级会话管理\""
        },
        {
          "line": 124,
          "text": "- \"原生SDK安全能力\""
        },
        {
          "line": 125,
          "text": "- \"时间戳验证机制\""
        },
        {
          "line": 133,
          "text": "# ANP Protocol - Strong E2E encryption + DID authentication (优先于Agora)"
        },
        {
          "line": 137,
          "text": "- \"DID身份认证\""
        },
        {
          "line": 138,
          "text": "- \"端到端加密能力\""
        },
        {
          "line": 139,
          "text": "- \"WebSocket安全通信\""
        },
        {
          "line": 140,
          "text": "- \"密钥轮换机制\""
        },
        {
          "line": 156,
          "text": "- \"企业级TLS配置\""
        },
        {
          "line": 157,
          "text": "- \"标准化安全接口\""
        },
        {
          "line": 158,
          "text": "- \"会话生命周期管理\""
        },
        {
          "line": 170,
          "text": "- \"基础TLS支持\""
        },
        {
          "line": 171,
          "text": "- \"简单会话管理\""
        },
        {
          "line": 215,
          "text": "- \"患者张三，身份证110101199001011234，主诉胸痛，请评估心血管风险。\""
        },
        {
          "line": 216,
          "text": "- \"李医生，患者SSN:123-45-6789，血压异常，需要治疗方案。\""
        },
        {
          "line": 217,
          "text": "- \"紧急病例：患者电话13812345678，急性心梗，需要立即处理。\""
        },
        {
          "line": 218,
          "text": "- \"复查病例：住址北京朝阳区，糖尿病患者复查结果讨论。\""
        },
        {
          "line": 219,
          "text": "- \"会诊请求：患者赵五，身份信息敏感，请专家会诊。\""
        }
      ]
    }
  ]
}