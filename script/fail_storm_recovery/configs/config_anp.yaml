scenario:
  name: "fail_storm_recovery_anp_test"
  protocol: "anp"
  agent_count: 8
  total_runtime: 180.0  # 3 minutes total for testing
  fault_injection_time: 120.0  # First fault at 2 minutes
  recovery_duration: 60  # 1 minute recovery time
  kill_fraction: 0.375  # Kill 3 out of 8 agents each cycle
  heartbeat_interval: 10.0
  heartbeat_timeout: 30.0
  cyclic_faults: true  # Enable cyclic fault injection
  fault_cycle_interval: 120.0  # Every 2 minutes (120 seconds)
  agents_per_fault: 3  # Kill 3 agents per cycle
  normal_phase_duration: 120.0  # 2 minutes normal phase before first fault
  max_groups: 5000  # Increase max groups for longer test

llm:
  type: "openai"
  model: "gpt-4o"
  openai_api_key: "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"
  openai_base_url: "https://api.openai.com/v1"
  temperature: 0.2
  max_tokens: 8192
  timeout: 30.0

anp:
  did_service_url: "https://did-service.example.com"
  enable_encryption: true
  protocol_negotiation: true
  recovery:
    reconnect_delay: 10.0
    max_retries: 3

network:
  base_port: 9100  # Use different port range to avoid conflicts
  heartbeat_interval: 5.0
  heartbeat_timeout: 12.0
  connection_timeout: 10.0

agents:
  base_port: 9100  # Use different port range to avoid conflicts
  host: "127.0.0.1"

shard_qa:
  data_dir: "data/shards"
  normal_phase_duration: 30.0
  qa_cycle_timeout: 10.0

output:
  results_file: "failstorm_metrics.json"
  logs_dir: "logs"
  artifacts_dir: "artifacts"

logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
