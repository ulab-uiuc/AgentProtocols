{
  "network_memory": [
    {
      "role": "user",
      "content": "üéØ ORIGINAL TASK REQUIREMENT:\nIn the 2018 VSCode blog post on replit.com, what was the command they clicked on in the last video to remove extra lines?\n================================================================================\nStep 1 - Current Task Input:\nIn the 2018 VSCode blog post on replit.com, what was the command they clicked on in the last video to remove extra lines?\n\n‚ö†Ô∏è  REMEMBER: All your work must contribute to answering the ORIGINAL TASK above!"
    },
    {
      "role": "assistant",
      "content": "Tool result: Observed output of cmd `browser_use` executed:\nSearch Results:\nSearch results for '2018 VSCode blog post site:replit.com':\n\n1. Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n   URL: http://www.baidu.com/link?url=ChIiRj8p1KeEbjA52MkTgfI_5oHxV4tce-_p1Akjx9LkHIR2luV9fB7HSZ2O34wo\n   Description: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n\n\nÊü•ÁúãÊ≠§ÁΩëÈ°µÁöÑ‰∏≠ÊñáÁøªËØëÔºåËØ∑ÁÇπÂáª\n\n\nÁøªËØëÊ≠§È°µ\n\n\n\nwe didn‚Äôt want to maintain a fork of VSCode as the changes we made were not going to get accepted upstream, and it was still a long way from being usable in product So we wound up with two code editors on Repli\n\n\n\n   Content: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco Blog Eng Infra Ace, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser Mon, Dec 13, 2021 Updated at: Mon, Jul 14, 2025 Faris Masad I‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using Ace , Monaco , and CodeMirror in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another. If you‚Äôre here for a dir...\n\nMetadata:\n- Total results: 1\n- Language: en\n- Country: us\n\nFetched Content from http://www.baidu.com/link?url=ChIiRj8p1KeEbjA52MkTgfI_5oHxV4tce-_p1Akjx9LkHIR2luV9fB7HSZ2O34wo:\nReplit ‚Äî Comparing Code Editors: Ace, CodeMirror and MonacoFeatures[Replit Agent](https://replit.com/ai)[Collaboration](https://replit.com/collaboration)[Deployments](https://replit.com/deployments)[Teams](https://replit.com/teams)[Pricing](https://replit.com/pricing)[Blog](https://blog.replit.com)[Careers](https://replit.com/site/careers)[Log in](https://replit.com/login)[Start building](https://replit.com/signup)\n\n* Features\n* [Pricing](https://replit.com/pricing)\n* [Blog](https://blog.replit.com)\n* [Careers](https://replit.com/site/careers)\n[Log in](https://replit.com/login)[Start building](https://replit.com/signup)[Blog](/)\n\n* [Eng](/category/eng)\n* [Infra](/category/infra)\n\nAce, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser\n====================================================================================\n\n![](https://cdn.sanity.io/images/bj34pdbp/migration/3dd7ff672c7b36fc06bf0eda3ae537c0a61a7276-674x421.png?w=1920&q=75&fit=clip&auto=format)Mon, Dec 13, 2021\n\nUpdated at:\n\nMon, Jul 14, 2025![Faris Masad](https://cdn.sanity.io/images/bj34pdbp/migration/75bc9c67f558a32f79041fc1bbe87e9c904f2bfb-800x800.jpg)\n\nFaris Masad\n\nI‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using [Ace](https://ace.c9.io/), [Monaco](https://microsoft.github.io/monaco-editor/), and [CodeMirror](https://codemirror.net/6/) in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another.\n\n*If you‚Äôre here for a direct comparison, feel free to [skip to the end](#head-to-head), where I recap and compare.*\n\nThe story\n---------\n\n### Prelude: Ace\n\nIn the early days of Replit, around 2011, there was no code editor. It was a pure [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) interface, a console with a simple input box. Adding a code editor was an obvious next step, especially if we cater to more complex programs. Code editors give us features like syntax highlighting, editor shortcuts, auto-indentation, search and replace, etc. Cloud9 released Ace at the time as a feature-full, performant web code editor. Ace editor is still actively maintained; it has a rich ecosystem and supports many languages, keybindings and works great in the browser.\n\n![OG Replit UI](https://cdn.sanity.io/images/bj34pdbp/migration/95fa6a2cc105d6582e4277514252a93c3e468816-2144x1296.png?w=3840&q=100&fit=max&auto=format)\n\nOG Replit UI\n\nWe used Ace until around late 2017 when we switched to Monaco. While Ace was still being maintained, only one person was working on it. After Amazon acquired Cloud9, it appeared as though they deprioritized the open-source project. The editor was not receiving as many updates, issues were racking up on GitHub, and the maintainers added almost no features. Overall, the API started to feel outdated and clunky. The maintainer is great, but there‚Äôs only so much he can do.\n\n### Interlude: Monaco\n\nAs you might know, Monaco is the editor that powers VSCode; in fact, Microsoft built VSCode around Monaco. If we switch to Monaco, we thought we‚Äôd be able to get all the cool updates and features from the good folks working on VSCode. Monaco had a shiny and modern UI that matched our website better, had great autocomplete for JavaScript, HTML, CSS, and seemed to have APIs that would make writing a language client for LSP easier. The docs were great, shipped with TypeScript definitions, and had more extensibili..."
    },
    {
      "role": "user",
      "content": "üéØ ORIGINAL TASK REQUIREMENT:\nIn the 2018 VSCode blog post on replit.com, what was the command they clicked on in the last video to remove extra lines?\n================================================================================\nStep 2 - Current Task Input:\nTool result: Observed output of cmd `browser_use` executed:\nSearch Results:\nSearch results for '2018 VSCode blog post site:replit.com':\n\n1. Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n   URL: http://www.baidu.com/link?url=ChIiRj8p1KeEbjA52MkTgfI_5oHxV4tce-_p1Akjx9LkHIR2luV9fB7HSZ2O34wo\n   Description: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n\n\nÊü•ÁúãÊ≠§ÁΩëÈ°µÁöÑ‰∏≠ÊñáÁøªËØëÔºåËØ∑ÁÇπÂáª\n\n\nÁøªËØëÊ≠§È°µ\n\n\n\nwe didn‚Äôt want to maintain a fork of VSCode as the changes we made were not going to get accepted upstream, and it was still a long way from being usable in product So we wound up with two code editors on Repli\n\n\n\n   Content: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco Blog Eng Infra Ace, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser Mon, Dec 13, 2021 Updated at: Mon, Jul 14, 2025 Faris Masad I‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using Ace , Monaco , and CodeMirror in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another. If you‚Äôre here for a dir...\n\nMetadata:\n- Total results: 1\n- Language: en\n- Country: us\n\nFetched Content from http://www.baidu.com/link?url=ChIiRj8p1KeEbjA52MkTgfI_5oHxV4tce-_p1Akjx9LkHIR2luV9fB7HSZ2O34wo:\nReplit ‚Äî Comparing Code Editors: Ace, CodeMirror and MonacoFeatures[Replit Agent](https://replit.com/ai)[Collaboration](https://replit.com/collaboration)[Deployments](https://replit.com/deployments)[Teams](https://replit.com/teams)[Pricing](https://replit.com/pricing)[Blog](https://blog.replit.com)[Careers](https://replit.com/site/careers)[Log in](https://replit.com/login)[Start building](https://replit.com/signup)\n\n* Features\n* [Pricing](https://replit.com/pricing)\n* [Blog](https://blog.replit.com)\n* [Careers](https://replit.com/site/careers)\n[Log in](https://replit.com/login)[Start building](https://replit.com/signup)[Blog](/)\n\n* [Eng](/category/eng)\n* [Infra](/category/infra)\n\nAce, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser\n====================================================================================\n\n![](https://cdn.sanity.io/images/bj34pdbp/migration/3dd7ff672c7b36fc06bf0eda3ae537c0a61a7276-674x421.png?w=1920&q=75&fit=clip&auto=format)Mon, Dec 13, 2021\n\nUpdated at:\n\nMon, Jul 14, 2025![Faris Masad](https://cdn.sanity.io/images/bj34pdbp/migration/75bc9c67f558a32f79041fc1bbe87e9c904f2bfb-800x800.jpg)\n\nFaris Masad\n\nI‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using [Ace](https://ace.c9.io/), [Monaco](https://microsoft.github.io/monaco-editor/), and [CodeMirror](https://codemirror.net/6/) in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another.\n\n*If you‚Äôre here for a direct comparison, feel free to [skip to the end](#head-to-head), where I recap and compare.*\n\nThe story\n---------\n\n### Prelude: Ace\n\nIn the early days of Replit, around 2011, there was no code editor. It was a pure [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) interface, a console with a simple input box. Adding a code editor was an obvious next step, especially if we cater to more complex programs. Code editors give us features like syntax highlighting, editor shortcuts, auto-indentation, search and replace, etc. Cloud9 released Ace at the time as a feature-full, performant web code editor. Ace editor is still actively maintained; it has a rich ecosystem and supports many languages, keybindings and works great in the browser.\n\n![OG Replit UI](https://cdn.sanity.io/images/bj34pdbp/migration/95fa6a2cc105d6582e4277514252a93c3e468816-2144x1296.png?w=3840&q=100&fit=max&auto=format)\n\nOG Replit UI\n\nWe used Ace until around late 2017 when we switched to Monaco. While Ace was still being maintained, only one person was working on it. After Amazon acquired Cloud9, it appeared as though they deprioritized the open-source project. The editor was not receiving as many updates, issues were racking up on GitHub, and the maintainers added almost no features. Overall, the API started to feel outdated and clunky. The maintainer is great, but there‚Äôs only so much he can do.\n\n### Interlude: Monaco\n\nAs you might know, Monaco is the editor that powers VSCode; in fact, Microsoft built VSCode around Monaco. If we switch to Monaco, we thought we‚Äôd be able to get all the cool updates and features from the good folks working on VSCode. Monaco had a shiny and modern UI that matched our website better, had great autocomplete for JavaScript, HTML, CSS, and seemed to have APIs that would make writing a language client for LSP easier. The docs were great, shipped with TypeScript definitions, and had more extensibili...\n\nPrevious Steps Context:\nStep 1 (WebNavigator - success): Tool result: Observed output of cmd `browser_use` executed:\nSearch Results:\nSearch results for '2018 VSCode blog post site:replit.com':\n\n1. Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n   URL: http://www.baidu.com/link?url=ChIiRj8p1KeEbjA52MkTgfI_5oHxV4tce-_p1Akjx9LkHIR2luV9fB7HSZ2O34wo\n   Description: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n\n\nÊü•ÁúãÊ≠§ÁΩëÈ°µÁöÑ‰∏≠ÊñáÁøªËØëÔºåËØ∑ÁÇπÂáª\n\n\nÁøªËØëÊ≠§È°µ\n\n\n\nwe didn‚Äôt want to maintain a fork of VSCode as the changes we made were not going to get accepted upstream, and it was still a long way from being usable in product So we wound up with two code editors on Repli\n\n\n\n   Content: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco Blog Eng Infra Ace, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser Mon, Dec 13, 2021 Updated at: Mon, Jul 14, 2025 Faris Masad I‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using Ace , Monaco , and CodeMirror in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another. If you‚Äôre here for a dir...\n\nMetadata:\n- Total results: 1\n- Language: en\n- Country: us\n\nFetched Content from http://www.baidu.com/link?url=ChIiRj8p1KeEbjA52MkTgfI_5oHxV4tce-_p1Akjx9LkHIR2luV9fB7HSZ2O34wo:\nReplit ‚Äî Comparing Code Editors: Ace, CodeMirror and MonacoFeatures[Replit Agent](https://replit.com/ai)[Collaboration](https://replit.com/collaboration)[Deployments](https://replit.com/deployments)[Teams](https://replit.com/teams)[Pricing](https://replit.com/pricing)[Blog](https://blog.replit.com)[Careers](https://replit.com/site/careers)[Log in](https://replit.com/login)[Start building](https://replit.com/signup)\n\n* Features\n* [Pricing](https://replit.com/pricing)\n* [Blog](https://blog.replit.com)\n* [Careers](https://replit.com/site/careers)\n[Log in](https://replit.com/login)[Start building](https://replit.com/signup)[Blog](/)\n\n* [Eng](/category/eng)\n* [Infra](/category/infra)\n\nAce, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser\n====================================================================================\n\n![](https://cdn.sanity.io/images/bj34pdbp/migration/3dd7ff672c7b36fc06bf0eda3ae537c0a61a7276-674x421.png?w=1920&q=75&fit=clip&auto=format)Mon, Dec 13, 2021\n\nUpdated at:\n\nMon, Jul 14, 2025![Faris Masad](https://cdn.sanity.io/images/bj34pdbp/migration/75bc9c67f558a32f79041fc1bbe87e9c904f2bfb-800x800.jpg)\n\nFaris Masad\n\nI‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using [Ace](https://ace.c9.io/), [Monaco](https://microsoft.github.io/monaco-editor/), and [CodeMirror](https://codemirror.net/6/) in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another.\n\n*If you‚Äôre here for a direct comparison, feel free to [skip to the end](#head-to-head), where I recap and compare.*\n\nThe story\n---------\n\n### Prelude: Ace\n\nIn the early days of Replit, around 2011, there was no code editor. It was a pure [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) interface, a console with a simple input box. Adding a code editor was an obvious next step, especially if we cater to more complex programs. Code editors give us features like syntax highlighting, editor shortcuts, auto-indentation, search and replace, etc. Cloud9 released Ace at the time as a feature-full, performant web code editor. Ace editor is still actively maintained; it has a rich ecosystem and supports many languages, keybindings and works great in the browser.\n\n![OG Replit UI](https://cdn.sanity.io/images/bj34pdbp/migration/95fa6a2cc105d6582e4277514252a93c3e468816-2144x1296.png?w=3840&q=100&fit=max&auto=format)\n\nOG Replit UI\n\nWe used Ace until around late 2017 when we switched to Monaco. While Ace was still being maintained, only one person was working on it. After Amazon acquired Cloud9, it appeared as though they deprioritized the open-source project. The editor was not receiving as many updates, issues were racking up on GitHub, and the maintainers added almost no features. Overall, the API started to feel outdated and clunky. The maintainer is great, but there‚Äôs only so much he can do.\n\n### Interlude: Monaco\n\nAs you might know, Monaco is the editor that powers VSCode; in fact, Microsoft built VSCode around Monaco. If we switch to Monaco, we thought we‚Äôd be able to get all the cool updates and features from the good folks working on VSCode. Monaco had a shiny and modern UI that matched our website better, had great autocomplete for JavaScript, HTML, CSS, and seemed to have APIs that would make writing a language client for LSP easier. The docs were great, shipped with TypeScript definitions, and had more extensibili...\n\n‚ö†Ô∏è  REMEMBER: All your work must contribute to answering the ORIGINAL TASK above!"
    },
    {
      "role": "assistant",
      "content": "Tool result: Observed output of cmd `browser_use` executed:\nSearch Results:\nSearch results for '2018 VSCode blog post site:replit.com':\n\n1. Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n   URL: http://www.baidu.com/link?url=MOb44X05uFwrapDRy2ev9shoA3N2OpmUyTQE0-SY15L236Qi5FDAvlRTMVO_H-Eo\n   Description: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n\n\nÊü•ÁúãÊ≠§ÁΩëÈ°µÁöÑ‰∏≠ÊñáÁøªËØëÔºåËØ∑ÁÇπÂáª\n\n\nÁøªËØëÊ≠§È°µ\n\n\n\nwe didn‚Äôt want to maintain a fork of VSCode as the changes we made were not going to get accepted upstream, and it was still a long way from being usable in product So we wound up with two code editors on Repli\n\n\n\n   Content: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco Blog Eng Infra Ace, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser Mon, Dec 13, 2021 Updated at: Mon, Jul 14, 2025 Faris Masad I‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using Ace , Monaco , and CodeMirror in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another. If you‚Äôre here for a dir...\n\nMetadata:\n- Total results: 1\n- Language: en\n- Country: us\n\nFetched Content from http://www.baidu.com/link?url=MOb44X05uFwrapDRy2ev9shoA3N2OpmUyTQE0-SY15L236Qi5FDAvlRTMVO_H-Eo:\nReplit ‚Äî Comparing Code Editors: Ace, CodeMirror and MonacoFeatures[Replit Agent](https://replit.com/ai)[Collaboration](https://replit.com/collaboration)[Deployments](https://replit.com/deployments)[Teams](https://replit.com/teams)[Pricing](https://replit.com/pricing)[Blog](https://blog.replit.com)[Careers](https://replit.com/site/careers)[Log in](https://replit.com/login)[Start building](https://replit.com/signup)\n\n* Features\n* [Pricing](https://replit.com/pricing)\n* [Blog](https://blog.replit.com)\n* [Careers](https://replit.com/site/careers)\n[Log in](https://replit.com/login)[Start building](https://replit.com/signup)[Blog](/)\n\n* [Eng](/category/eng)\n* [Infra](/category/infra)\n\nAce, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser\n====================================================================================\n\n![](https://cdn.sanity.io/images/bj34pdbp/migration/3dd7ff672c7b36fc06bf0eda3ae537c0a61a7276-674x421.png?w=1920&q=75&fit=clip&auto=format)Mon, Dec 13, 2021\n\nUpdated at:\n\nMon, Jul 14, 2025![Faris Masad](https://cdn.sanity.io/images/bj34pdbp/migration/75bc9c67f558a32f79041fc1bbe87e9c904f2bfb-800x800.jpg)\n\nFaris Masad\n\nI‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using [Ace](https://ace.c9.io/), [Monaco](https://microsoft.github.io/monaco-editor/), and [CodeMirror](https://codemirror.net/6/) in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another.\n\n*If you‚Äôre here for a direct comparison, feel free to [skip to the end](#head-to-head), where I recap and compare.*\n\nThe story\n---------\n\n### Prelude: Ace\n\nIn the early days of Replit, around 2011, there was no code editor. It was a pure [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) interface, a console with a simple input box. Adding a code editor was an obvious next step, especially if we cater to more complex programs. Code editors give us features like syntax highlighting, editor shortcuts, auto-indentation, search and replace, etc. Cloud9 released Ace at the time as a feature-full, performant web code editor. Ace editor is still actively maintained; it has a rich ecosystem and supports many languages, keybindings and works great in the browser.\n\n![OG Replit UI](https://cdn.sanity.io/images/bj34pdbp/migration/95fa6a2cc105d6582e4277514252a93c3e468816-2144x1296.png?w=3840&q=100&fit=max&auto=format)\n\nOG Replit UI\n\nWe used Ace until around late 2017 when we switched to Monaco. While Ace was still being maintained, only one person was working on it. After Amazon acquired Cloud9, it appeared as though they deprioritized the open-source project. The editor was not receiving as many updates, issues were racking up on GitHub, and the maintainers added almost no features. Overall, the API started to feel outdated and clunky. The maintainer is great, but there‚Äôs only so much he can do.\n\n### Interlude: Monaco\n\nAs you might know, Monaco is the editor that powers VSCode; in fact, Microsoft built VSCode around Monaco. If we switch to Monaco, we thought we‚Äôd be able to get all the cool updates and features from the good folks working on VSCode. Monaco had a shiny and modern UI that matched our website better, had great autocomplete for JavaScript, HTML, CSS, and seemed to have APIs that would make writing a language client for LSP easier. The docs were great, shipped with TypeScript definitions, and had more extensibili..."
    },
    {
      "role": "user",
      "content": "üéØ ORIGINAL TASK REQUIREMENT:\nIn the 2018 VSCode blog post on replit.com, what was the command they clicked on in the last video to remove extra lines?\n================================================================================\nStep 3 - Current Task Input:\nTool result: Observed output of cmd `browser_use` executed:\nSearch Results:\nSearch results for '2018 VSCode blog post site:replit.com':\n\n1. Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n   URL: http://www.baidu.com/link?url=MOb44X05uFwrapDRy2ev9shoA3N2OpmUyTQE0-SY15L236Qi5FDAvlRTMVO_H-Eo\n   Description: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n\n\nÊü•ÁúãÊ≠§ÁΩëÈ°µÁöÑ‰∏≠ÊñáÁøªËØëÔºåËØ∑ÁÇπÂáª\n\n\nÁøªËØëÊ≠§È°µ\n\n\n\nwe didn‚Äôt want to maintain a fork of VSCode as the changes we made were not going to get accepted upstream, and it was still a long way from being usable in product So we wound up with two code editors on Repli\n\n\n\n   Content: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco Blog Eng Infra Ace, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser Mon, Dec 13, 2021 Updated at: Mon, Jul 14, 2025 Faris Masad I‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using Ace , Monaco , and CodeMirror in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another. If you‚Äôre here for a dir...\n\nMetadata:\n- Total results: 1\n- Language: en\n- Country: us\n\nFetched Content from http://www.baidu.com/link?url=MOb44X05uFwrapDRy2ev9shoA3N2OpmUyTQE0-SY15L236Qi5FDAvlRTMVO_H-Eo:\nReplit ‚Äî Comparing Code Editors: Ace, CodeMirror and MonacoFeatures[Replit Agent](https://replit.com/ai)[Collaboration](https://replit.com/collaboration)[Deployments](https://replit.com/deployments)[Teams](https://replit.com/teams)[Pricing](https://replit.com/pricing)[Blog](https://blog.replit.com)[Careers](https://replit.com/site/careers)[Log in](https://replit.com/login)[Start building](https://replit.com/signup)\n\n* Features\n* [Pricing](https://replit.com/pricing)\n* [Blog](https://blog.replit.com)\n* [Careers](https://replit.com/site/careers)\n[Log in](https://replit.com/login)[Start building](https://replit.com/signup)[Blog](/)\n\n* [Eng](/category/eng)\n* [Infra](/category/infra)\n\nAce, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser\n====================================================================================\n\n![](https://cdn.sanity.io/images/bj34pdbp/migration/3dd7ff672c7b36fc06bf0eda3ae537c0a61a7276-674x421.png?w=1920&q=75&fit=clip&auto=format)Mon, Dec 13, 2021\n\nUpdated at:\n\nMon, Jul 14, 2025![Faris Masad](https://cdn.sanity.io/images/bj34pdbp/migration/75bc9c67f558a32f79041fc1bbe87e9c904f2bfb-800x800.jpg)\n\nFaris Masad\n\nI‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using [Ace](https://ace.c9.io/), [Monaco](https://microsoft.github.io/monaco-editor/), and [CodeMirror](https://codemirror.net/6/) in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another.\n\n*If you‚Äôre here for a direct comparison, feel free to [skip to the end](#head-to-head), where I recap and compare.*\n\nThe story\n---------\n\n### Prelude: Ace\n\nIn the early days of Replit, around 2011, there was no code editor. It was a pure [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) interface, a console with a simple input box. Adding a code editor was an obvious next step, especially if we cater to more complex programs. Code editors give us features like syntax highlighting, editor shortcuts, auto-indentation, search and replace, etc. Cloud9 released Ace at the time as a feature-full, performant web code editor. Ace editor is still actively maintained; it has a rich ecosystem and supports many languages, keybindings and works great in the browser.\n\n![OG Replit UI](https://cdn.sanity.io/images/bj34pdbp/migration/95fa6a2cc105d6582e4277514252a93c3e468816-2144x1296.png?w=3840&q=100&fit=max&auto=format)\n\nOG Replit UI\n\nWe used Ace until around late 2017 when we switched to Monaco. While Ace was still being maintained, only one person was working on it. After Amazon acquired Cloud9, it appeared as though they deprioritized the open-source project. The editor was not receiving as many updates, issues were racking up on GitHub, and the maintainers added almost no features. Overall, the API started to feel outdated and clunky. The maintainer is great, but there‚Äôs only so much he can do.\n\n### Interlude: Monaco\n\nAs you might know, Monaco is the editor that powers VSCode; in fact, Microsoft built VSCode around Monaco. If we switch to Monaco, we thought we‚Äôd be able to get all the cool updates and features from the good folks working on VSCode. Monaco had a shiny and modern UI that matched our website better, had great autocomplete for JavaScript, HTML, CSS, and seemed to have APIs that would make writing a language client for LSP easier. The docs were great, shipped with TypeScript definitions, and had more extensibili...\n\nPrevious Steps Context:\nStep 1 (WebNavigator - success): Tool result: Observed output of cmd `browser_use` executed:\nSearch Results:\nSearch results for '2018 VSCode blog post site:replit.com':\n\n1. Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n   URL: http://www.baidu.com/link?url=ChIiRj8p1KeEbjA52MkTgfI_5oHxV4tce-_p1Akjx9LkHIR2luV9fB7HSZ2O34wo\n   Description: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n\n\nÊü•ÁúãÊ≠§ÁΩëÈ°µÁöÑ‰∏≠ÊñáÁøªËØëÔºåËØ∑ÁÇπÂáª\n\n\nÁøªËØëÊ≠§È°µ\n\n\n\nwe didn‚Äôt want to maintain a fork of VSCode as the changes we made were not going to get accepted upstream, and it was still a long way from being usable in product So we wound up with two code editors on Repli\n\n\n\n   Content: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco Blog Eng Infra Ace, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser Mon, Dec 13, 2021 Updated at: Mon, Jul 14, 2025 Faris Masad I‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using Ace , Monaco , and CodeMirror in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another. If you‚Äôre here for a dir...\n\nMetadata:\n- Total results: 1\n- Language: en\n- Country: us\n\nFetched Content from http://www.baidu.com/link?url=ChIiRj8p1KeEbjA52MkTgfI_5oHxV4tce-_p1Akjx9LkHIR2luV9fB7HSZ2O34wo:\nReplit ‚Äî Comparing Code Editors: Ace, CodeMirror and MonacoFeatures[Replit Agent](https://replit.com/ai)[Collaboration](https://replit.com/collaboration)[Deployments](https://replit.com/deployments)[Teams](https://replit.com/teams)[Pricing](https://replit.com/pricing)[Blog](https://blog.replit.com)[Careers](https://replit.com/site/careers)[Log in](https://replit.com/login)[Start building](https://replit.com/signup)\n\n* Features\n* [Pricing](https://replit.com/pricing)\n* [Blog](https://blog.replit.com)\n* [Careers](https://replit.com/site/careers)\n[Log in](https://replit.com/login)[Start building](https://replit.com/signup)[Blog](/)\n\n* [Eng](/category/eng)\n* [Infra](/category/infra)\n\nAce, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser\n====================================================================================\n\n![](https://cdn.sanity.io/images/bj34pdbp/migration/3dd7ff672c7b36fc06bf0eda3ae537c0a61a7276-674x421.png?w=1920&q=75&fit=clip&auto=format)Mon, Dec 13, 2021\n\nUpdated at:\n\nMon, Jul 14, 2025![Faris Masad](https://cdn.sanity.io/images/bj34pdbp/migration/75bc9c67f558a32f79041fc1bbe87e9c904f2bfb-800x800.jpg)\n\nFaris Masad\n\nI‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using [Ace](https://ace.c9.io/), [Monaco](https://microsoft.github.io/monaco-editor/), and [CodeMirror](https://codemirror.net/6/) in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another.\n\n*If you‚Äôre here for a direct comparison, feel free to [skip to the end](#head-to-head), where I recap and compare.*\n\nThe story\n---------\n\n### Prelude: Ace\n\nIn the early days of Replit, around 2011, there was no code editor. It was a pure [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) interface, a console with a simple input box. Adding a code editor was an obvious next step, especially if we cater to more complex programs. Code editors give us features like syntax highlighting, editor shortcuts, auto-indentation, search and replace, etc. Cloud9 released Ace at the time as a feature-full, performant web code editor. Ace editor is still actively maintained; it has a rich ecosystem and supports many languages, keybindings and works great in the browser.\n\n![OG Replit UI](https://cdn.sanity.io/images/bj34pdbp/migration/95fa6a2cc105d6582e4277514252a93c3e468816-2144x1296.png?w=3840&q=100&fit=max&auto=format)\n\nOG Replit UI\n\nWe used Ace until around late 2017 when we switched to Monaco. While Ace was still being maintained, only one person was working on it. After Amazon acquired Cloud9, it appeared as though they deprioritized the open-source project. The editor was not receiving as many updates, issues were racking up on GitHub, and the maintainers added almost no features. Overall, the API started to feel outdated and clunky. The maintainer is great, but there‚Äôs only so much he can do.\n\n### Interlude: Monaco\n\nAs you might know, Monaco is the editor that powers VSCode; in fact, Microsoft built VSCode around Monaco. If we switch to Monaco, we thought we‚Äôd be able to get all the cool updates and features from the good folks working on VSCode. Monaco had a shiny and modern UI that matched our website better, had great autocomplete for JavaScript, HTML, CSS, and seemed to have APIs that would make writing a language client for LSP easier. The docs were great, shipped with TypeScript definitions, and had more extensibili...\nStep 2 (ContentAnalyzer - success): Tool result: Observed output of cmd `browser_use` executed:\nSearch Results:\nSearch results for '2018 VSCode blog post site:replit.com':\n\n1. Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n   URL: http://www.baidu.com/link?url=MOb44X05uFwrapDRy2ev9shoA3N2OpmUyTQE0-SY15L236Qi5FDAvlRTMVO_H-Eo\n   Description: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n\n\nÊü•ÁúãÊ≠§ÁΩëÈ°µÁöÑ‰∏≠ÊñáÁøªËØëÔºåËØ∑ÁÇπÂáª\n\n\nÁøªËØëÊ≠§È°µ\n\n\n\nwe didn‚Äôt want to maintain a fork of VSCode as the changes we made were not going to get accepted upstream, and it was still a long way from being usable in product So we wound up with two code editors on Repli\n\n\n\n   Content: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco Blog Eng Infra Ace, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser Mon, Dec 13, 2021 Updated at: Mon, Jul 14, 2025 Faris Masad I‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using Ace , Monaco , and CodeMirror in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another. If you‚Äôre here for a dir...\n\nMetadata:\n- Total results: 1\n- Language: en\n- Country: us\n\nFetched Content from http://www.baidu.com/link?url=MOb44X05uFwrapDRy2ev9shoA3N2OpmUyTQE0-SY15L236Qi5FDAvlRTMVO_H-Eo:\nReplit ‚Äî Comparing Code Editors: Ace, CodeMirror and MonacoFeatures[Replit Agent](https://replit.com/ai)[Collaboration](https://replit.com/collaboration)[Deployments](https://replit.com/deployments)[Teams](https://replit.com/teams)[Pricing](https://replit.com/pricing)[Blog](https://blog.replit.com)[Careers](https://replit.com/site/careers)[Log in](https://replit.com/login)[Start building](https://replit.com/signup)\n\n* Features\n* [Pricing](https://replit.com/pricing)\n* [Blog](https://blog.replit.com)\n* [Careers](https://replit.com/site/careers)\n[Log in](https://replit.com/login)[Start building](https://replit.com/signup)[Blog](/)\n\n* [Eng](/category/eng)\n* [Infra](/category/infra)\n\nAce, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser\n====================================================================================\n\n![](https://cdn.sanity.io/images/bj34pdbp/migration/3dd7ff672c7b36fc06bf0eda3ae537c0a61a7276-674x421.png?w=1920&q=75&fit=clip&auto=format)Mon, Dec 13, 2021\n\nUpdated at:\n\nMon, Jul 14, 2025![Faris Masad](https://cdn.sanity.io/images/bj34pdbp/migration/75bc9c67f558a32f79041fc1bbe87e9c904f2bfb-800x800.jpg)\n\nFaris Masad\n\nI‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using [Ace](https://ace.c9.io/), [Monaco](https://microsoft.github.io/monaco-editor/), and [CodeMirror](https://codemirror.net/6/) in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another.\n\n*If you‚Äôre here for a direct comparison, feel free to [skip to the end](#head-to-head), where I recap and compare.*\n\nThe story\n---------\n\n### Prelude: Ace\n\nIn the early days of Replit, around 2011, there was no code editor. It was a pure [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) interface, a console with a simple input box. Adding a code editor was an obvious next step, especially if we cater to more complex programs. Code editors give us features like syntax highlighting, editor shortcuts, auto-indentation, search and replace, etc. Cloud9 released Ace at the time as a feature-full, performant web code editor. Ace editor is still actively maintained; it has a rich ecosystem and supports many languages, keybindings and works great in the browser.\n\n![OG Replit UI](https://cdn.sanity.io/images/bj34pdbp/migration/95fa6a2cc105d6582e4277514252a93c3e468816-2144x1296.png?w=3840&q=100&fit=max&auto=format)\n\nOG Replit UI\n\nWe used Ace until around late 2017 when we switched to Monaco. While Ace was still being maintained, only one person was working on it. After Amazon acquired Cloud9, it appeared as though they deprioritized the open-source project. The editor was not receiving as many updates, issues were racking up on GitHub, and the maintainers added almost no features. Overall, the API started to feel outdated and clunky. The maintainer is great, but there‚Äôs only so much he can do.\n\n### Interlude: Monaco\n\nAs you might know, Monaco is the editor that powers VSCode; in fact, Microsoft built VSCode around Monaco. If we switch to Monaco, we thought we‚Äôd be able to get all the cool updates and features from the good folks working on VSCode. Monaco had a shiny and modern UI that matched our website better, had great autocomplete for JavaScript, HTML, CSS, and seemed to have APIs that would make writing a language client for LSP easier. The docs were great, shipped with TypeScript definitions, and had more extensibili...\n\n‚ö†Ô∏è  REMEMBER: All your work must contribute to answering the ORIGINAL TASK above!"
    },
    {
      "role": "assistant",
      "content": "Tool result: Observed output of cmd `browser_use` executed:\nSearch Results:\nSearch results for '2018 VSCode blog post site:replit.com':\n\n1. Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n   URL: http://www.baidu.com/link?url=Ddm_937kldbZzgPoYSmk8Wm6dx6ks4oH23nIme_FAbdRQg7qJ34Fe7YidGRdHvDq\n   Description: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n\n\nÊü•ÁúãÊ≠§ÁΩëÈ°µÁöÑ‰∏≠ÊñáÁøªËØëÔºåËØ∑ÁÇπÂáª\n\n\nÁøªËØëÊ≠§È°µ\n\n\n\nwe didn‚Äôt want to maintain a fork of VSCode as the changes we made were not going to get accepted upstream, and it was still a long way from being usable in product So we wound up with two code editors on Repli\n\n\n\n   Content: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco Blog Eng Infra Ace, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser Mon, Dec 13, 2021 Updated at: Mon, Jul 14, 2025 Faris Masad I‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using Ace , Monaco , and CodeMirror in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another. If you‚Äôre here for a dir...\n\nMetadata:\n- Total results: 1\n- Language: en\n- Country: us\n\nFetched Content from http://www.baidu.com/link?url=Ddm_937kldbZzgPoYSmk8Wm6dx6ks4oH23nIme_FAbdRQg7qJ34Fe7YidGRdHvDq:\nReplit ‚Äî Comparing Code Editors: Ace, CodeMirror and MonacoFeatures[Replit Agent](https://replit.com/ai)[Collaboration](https://replit.com/collaboration)[Deployments](https://replit.com/deployments)[Teams](https://replit.com/teams)[Pricing](https://replit.com/pricing)[Blog](https://blog.replit.com)[Careers](https://replit.com/site/careers)[Log in](https://replit.com/login)[Start building](https://replit.com/signup)\n\n* Features\n* [Pricing](https://replit.com/pricing)\n* [Blog](https://blog.replit.com)\n* [Careers](https://replit.com/site/careers)\n[Log in](https://replit.com/login)[Start building](https://replit.com/signup)[Blog](/)\n\n* [Eng](/category/eng)\n* [Infra](/category/infra)\n\nAce, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser\n====================================================================================\n\n![](https://cdn.sanity.io/images/bj34pdbp/migration/3dd7ff672c7b36fc06bf0eda3ae537c0a61a7276-674x421.png?w=1920&q=75&fit=clip&auto=format)Mon, Dec 13, 2021\n\nUpdated at:\n\nMon, Jul 14, 2025![Faris Masad](https://cdn.sanity.io/images/bj34pdbp/migration/75bc9c67f558a32f79041fc1bbe87e9c904f2bfb-800x800.jpg)\n\nFaris Masad\n\nI‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using [Ace](https://ace.c9.io/), [Monaco](https://microsoft.github.io/monaco-editor/), and [CodeMirror](https://codemirror.net/6/) in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another.\n\n*If you‚Äôre here for a direct comparison, feel free to [skip to the end](#head-to-head), where I recap and compare.*\n\nThe story\n---------\n\n### Prelude: Ace\n\nIn the early days of Replit, around 2011, there was no code editor. It was a pure [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) interface, a console with a simple input box. Adding a code editor was an obvious next step, especially if we cater to more complex programs. Code editors give us features like syntax highlighting, editor shortcuts, auto-indentation, search and replace, etc. Cloud9 released Ace at the time as a feature-full, performant web code editor. Ace editor is still actively maintained; it has a rich ecosystem and supports many languages, keybindings and works great in the browser.\n\n![OG Replit UI](https://cdn.sanity.io/images/bj34pdbp/migration/95fa6a2cc105d6582e4277514252a93c3e468816-2144x1296.png?w=3840&q=100&fit=max&auto=format)\n\nOG Replit UI\n\nWe used Ace until around late 2017 when we switched to Monaco. While Ace was still being maintained, only one person was working on it. After Amazon acquired Cloud9, it appeared as though they deprioritized the open-source project. The editor was not receiving as many updates, issues were racking up on GitHub, and the maintainers added almost no features. Overall, the API started to feel outdated and clunky. The maintainer is great, but there‚Äôs only so much he can do.\n\n### Interlude: Monaco\n\nAs you might know, Monaco is the editor that powers VSCode; in fact, Microsoft built VSCode around Monaco. If we switch to Monaco, we thought we‚Äôd be able to get all the cool updates and features from the good folks working on VSCode. Monaco had a shiny and modern UI that matched our website better, had great autocomplete for JavaScript, HTML, CSS, and seemed to have APIs that would make writing a language client for LSP easier. The docs were great, shipped with TypeScript definitions, and had more extensibili..."
    }
  ],
  "workflow_progress": {
    "total_steps": 3,
    "completed_steps": 3,
    "completion_rate": 1.0,
    "status_breakdown": {
      "pending": 0,
      "processing": 0,
      "success": 3,
      "error": 0,
      "timeout": 0
    },
    "step_details": {
      "0": "success",
      "1": "success",
      "2": "success"
    }
  },
  "step_executions": {
    "step_0": {
      "step": 0,
      "agent_id": "0",
      "agent_name": "WebNavigator",
      "status": "success",
      "start_time": 1758524205.283022,
      "end_time": 1758524225.320942,
      "duration": 20.037919998168945,
      "messages": [
        {
          "role": "user",
          "content": "üéØ ORIGINAL TASK REQUIREMENT:\nIn the 2018 VSCode blog post on replit.com, what was the command they clicked on in the last video to remove extra lines?\n================================================================================\nStep 1 - Current Task Input:\nIn the 2018 VSCode blog post on replit.com, what was the command they clicked on in the last video to remove extra lines?\n\n‚ö†Ô∏è  REMEMBER: All your work must contribute to answering the ORIGINAL TASK above!"
        },
        {
          "role": "assistant",
          "content": "Tool result: Observed output of cmd `browser_use` executed:\nSearch Results:\nSearch results for '2018 VSCode blog post site:replit.com':\n\n1. Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n   URL: http://www.baidu.com/link?url=ChIiRj8p1KeEbjA52MkTgfI_5oHxV4tce-_p1Akjx9LkHIR2luV9fB7HSZ2O34wo\n   Description: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n\n\nÊü•ÁúãÊ≠§ÁΩëÈ°µÁöÑ‰∏≠ÊñáÁøªËØëÔºåËØ∑ÁÇπÂáª\n\n\nÁøªËØëÊ≠§È°µ\n\n\n\nwe didn‚Äôt want to maintain a fork of VSCode as the changes we made were not going to get accepted upstream, and it was still a long way from being usable in product So we wound up with two code editors on Repli\n\n\n\n   Content: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco Blog Eng Infra Ace, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser Mon, Dec 13, 2021 Updated at: Mon, Jul 14, 2025 Faris Masad I‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using Ace , Monaco , and CodeMirror in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another. If you‚Äôre here for a dir...\n\nMetadata:\n- Total results: 1\n- Language: en\n- Country: us\n\nFetched Content from http://www.baidu.com/link?url=ChIiRj8p1KeEbjA52MkTgfI_5oHxV4tce-_p1Akjx9LkHIR2luV9fB7HSZ2O34wo:\nReplit ‚Äî Comparing Code Editors: Ace, CodeMirror and MonacoFeatures[Replit Agent](https://replit.com/ai)[Collaboration](https://replit.com/collaboration)[Deployments](https://replit.com/deployments)[Teams](https://replit.com/teams)[Pricing](https://replit.com/pricing)[Blog](https://blog.replit.com)[Careers](https://replit.com/site/careers)[Log in](https://replit.com/login)[Start building](https://replit.com/signup)\n\n* Features\n* [Pricing](https://replit.com/pricing)\n* [Blog](https://blog.replit.com)\n* [Careers](https://replit.com/site/careers)\n[Log in](https://replit.com/login)[Start building](https://replit.com/signup)[Blog](/)\n\n* [Eng](/category/eng)\n* [Infra](/category/infra)\n\nAce, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser\n====================================================================================\n\n![](https://cdn.sanity.io/images/bj34pdbp/migration/3dd7ff672c7b36fc06bf0eda3ae537c0a61a7276-674x421.png?w=1920&q=75&fit=clip&auto=format)Mon, Dec 13, 2021\n\nUpdated at:\n\nMon, Jul 14, 2025![Faris Masad](https://cdn.sanity.io/images/bj34pdbp/migration/75bc9c67f558a32f79041fc1bbe87e9c904f2bfb-800x800.jpg)\n\nFaris Masad\n\nI‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using [Ace](https://ace.c9.io/), [Monaco](https://microsoft.github.io/monaco-editor/), and [CodeMirror](https://codemirror.net/6/) in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another.\n\n*If you‚Äôre here for a direct comparison, feel free to [skip to the end](#head-to-head), where I recap and compare.*\n\nThe story\n---------\n\n### Prelude: Ace\n\nIn the early days of Replit, around 2011, there was no code editor. It was a pure [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) interface, a console with a simple input box. Adding a code editor was an obvious next step, especially if we cater to more complex programs. Code editors give us features like syntax highlighting, editor shortcuts, auto-indentation, search and replace, etc. Cloud9 released Ace at the time as a feature-full, performant web code editor. Ace editor is still actively maintained; it has a rich ecosystem and supports many languages, keybindings and works great in the browser.\n\n![OG Replit UI](https://cdn.sanity.io/images/bj34pdbp/migration/95fa6a2cc105d6582e4277514252a93c3e468816-2144x1296.png?w=3840&q=100&fit=max&auto=format)\n\nOG Replit UI\n\nWe used Ace until around late 2017 when we switched to Monaco. While Ace was still being maintained, only one person was working on it. After Amazon acquired Cloud9, it appeared as though they deprioritized the open-source project. The editor was not receiving as many updates, issues were racking up on GitHub, and the maintainers added almost no features. Overall, the API started to feel outdated and clunky. The maintainer is great, but there‚Äôs only so much he can do.\n\n### Interlude: Monaco\n\nAs you might know, Monaco is the editor that powers VSCode; in fact, Microsoft built VSCode around Monaco. If we switch to Monaco, we thought we‚Äôd be able to get all the cool updates and features from the good folks working on VSCode. Monaco had a shiny and modern UI that matched our website better, had great autocomplete for JavaScript, HTML, CSS, and seemed to have APIs that would make writing a language client for LSP easier. The docs were great, shipped with TypeScript definitions, and had more extensibili..."
        }
      ],
      "error_message": null
    },
    "step_1": {
      "step": 1,
      "agent_id": "1",
      "agent_name": "ContentAnalyzer",
      "status": "success",
      "start_time": 1758524225.8219173,
      "end_time": 1758524248.568751,
      "duration": 22.74683380126953,
      "messages": [
        {
          "role": "user",
          "content": "üéØ ORIGINAL TASK REQUIREMENT:\nIn the 2018 VSCode blog post on replit.com, what was the command they clicked on in the last video to remove extra lines?\n================================================================================\nStep 2 - Current Task Input:\nTool result: Observed output of cmd `browser_use` executed:\nSearch Results:\nSearch results for '2018 VSCode blog post site:replit.com':\n\n1. Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n   URL: http://www.baidu.com/link?url=ChIiRj8p1KeEbjA52MkTgfI_5oHxV4tce-_p1Akjx9LkHIR2luV9fB7HSZ2O34wo\n   Description: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n\n\nÊü•ÁúãÊ≠§ÁΩëÈ°µÁöÑ‰∏≠ÊñáÁøªËØëÔºåËØ∑ÁÇπÂáª\n\n\nÁøªËØëÊ≠§È°µ\n\n\n\nwe didn‚Äôt want to maintain a fork of VSCode as the changes we made were not going to get accepted upstream, and it was still a long way from being usable in product So we wound up with two code editors on Repli\n\n\n\n   Content: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco Blog Eng Infra Ace, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser Mon, Dec 13, 2021 Updated at: Mon, Jul 14, 2025 Faris Masad I‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using Ace , Monaco , and CodeMirror in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another. If you‚Äôre here for a dir...\n\nMetadata:\n- Total results: 1\n- Language: en\n- Country: us\n\nFetched Content from http://www.baidu.com/link?url=ChIiRj8p1KeEbjA52MkTgfI_5oHxV4tce-_p1Akjx9LkHIR2luV9fB7HSZ2O34wo:\nReplit ‚Äî Comparing Code Editors: Ace, CodeMirror and MonacoFeatures[Replit Agent](https://replit.com/ai)[Collaboration](https://replit.com/collaboration)[Deployments](https://replit.com/deployments)[Teams](https://replit.com/teams)[Pricing](https://replit.com/pricing)[Blog](https://blog.replit.com)[Careers](https://replit.com/site/careers)[Log in](https://replit.com/login)[Start building](https://replit.com/signup)\n\n* Features\n* [Pricing](https://replit.com/pricing)\n* [Blog](https://blog.replit.com)\n* [Careers](https://replit.com/site/careers)\n[Log in](https://replit.com/login)[Start building](https://replit.com/signup)[Blog](/)\n\n* [Eng](/category/eng)\n* [Infra](/category/infra)\n\nAce, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser\n====================================================================================\n\n![](https://cdn.sanity.io/images/bj34pdbp/migration/3dd7ff672c7b36fc06bf0eda3ae537c0a61a7276-674x421.png?w=1920&q=75&fit=clip&auto=format)Mon, Dec 13, 2021\n\nUpdated at:\n\nMon, Jul 14, 2025![Faris Masad](https://cdn.sanity.io/images/bj34pdbp/migration/75bc9c67f558a32f79041fc1bbe87e9c904f2bfb-800x800.jpg)\n\nFaris Masad\n\nI‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using [Ace](https://ace.c9.io/), [Monaco](https://microsoft.github.io/monaco-editor/), and [CodeMirror](https://codemirror.net/6/) in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another.\n\n*If you‚Äôre here for a direct comparison, feel free to [skip to the end](#head-to-head), where I recap and compare.*\n\nThe story\n---------\n\n### Prelude: Ace\n\nIn the early days of Replit, around 2011, there was no code editor. It was a pure [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) interface, a console with a simple input box. Adding a code editor was an obvious next step, especially if we cater to more complex programs. Code editors give us features like syntax highlighting, editor shortcuts, auto-indentation, search and replace, etc. Cloud9 released Ace at the time as a feature-full, performant web code editor. Ace editor is still actively maintained; it has a rich ecosystem and supports many languages, keybindings and works great in the browser.\n\n![OG Replit UI](https://cdn.sanity.io/images/bj34pdbp/migration/95fa6a2cc105d6582e4277514252a93c3e468816-2144x1296.png?w=3840&q=100&fit=max&auto=format)\n\nOG Replit UI\n\nWe used Ace until around late 2017 when we switched to Monaco. While Ace was still being maintained, only one person was working on it. After Amazon acquired Cloud9, it appeared as though they deprioritized the open-source project. The editor was not receiving as many updates, issues were racking up on GitHub, and the maintainers added almost no features. Overall, the API started to feel outdated and clunky. The maintainer is great, but there‚Äôs only so much he can do.\n\n### Interlude: Monaco\n\nAs you might know, Monaco is the editor that powers VSCode; in fact, Microsoft built VSCode around Monaco. If we switch to Monaco, we thought we‚Äôd be able to get all the cool updates and features from the good folks working on VSCode. Monaco had a shiny and modern UI that matched our website better, had great autocomplete for JavaScript, HTML, CSS, and seemed to have APIs that would make writing a language client for LSP easier. The docs were great, shipped with TypeScript definitions, and had more extensibili...\n\nPrevious Steps Context:\nStep 1 (WebNavigator - success): Tool result: Observed output of cmd `browser_use` executed:\nSearch Results:\nSearch results for '2018 VSCode blog post site:replit.com':\n\n1. Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n   URL: http://www.baidu.com/link?url=ChIiRj8p1KeEbjA52MkTgfI_5oHxV4tce-_p1Akjx9LkHIR2luV9fB7HSZ2O34wo\n   Description: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n\n\nÊü•ÁúãÊ≠§ÁΩëÈ°µÁöÑ‰∏≠ÊñáÁøªËØëÔºåËØ∑ÁÇπÂáª\n\n\nÁøªËØëÊ≠§È°µ\n\n\n\nwe didn‚Äôt want to maintain a fork of VSCode as the changes we made were not going to get accepted upstream, and it was still a long way from being usable in product So we wound up with two code editors on Repli\n\n\n\n   Content: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco Blog Eng Infra Ace, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser Mon, Dec 13, 2021 Updated at: Mon, Jul 14, 2025 Faris Masad I‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using Ace , Monaco , and CodeMirror in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another. If you‚Äôre here for a dir...\n\nMetadata:\n- Total results: 1\n- Language: en\n- Country: us\n\nFetched Content from http://www.baidu.com/link?url=ChIiRj8p1KeEbjA52MkTgfI_5oHxV4tce-_p1Akjx9LkHIR2luV9fB7HSZ2O34wo:\nReplit ‚Äî Comparing Code Editors: Ace, CodeMirror and MonacoFeatures[Replit Agent](https://replit.com/ai)[Collaboration](https://replit.com/collaboration)[Deployments](https://replit.com/deployments)[Teams](https://replit.com/teams)[Pricing](https://replit.com/pricing)[Blog](https://blog.replit.com)[Careers](https://replit.com/site/careers)[Log in](https://replit.com/login)[Start building](https://replit.com/signup)\n\n* Features\n* [Pricing](https://replit.com/pricing)\n* [Blog](https://blog.replit.com)\n* [Careers](https://replit.com/site/careers)\n[Log in](https://replit.com/login)[Start building](https://replit.com/signup)[Blog](/)\n\n* [Eng](/category/eng)\n* [Infra](/category/infra)\n\nAce, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser\n====================================================================================\n\n![](https://cdn.sanity.io/images/bj34pdbp/migration/3dd7ff672c7b36fc06bf0eda3ae537c0a61a7276-674x421.png?w=1920&q=75&fit=clip&auto=format)Mon, Dec 13, 2021\n\nUpdated at:\n\nMon, Jul 14, 2025![Faris Masad](https://cdn.sanity.io/images/bj34pdbp/migration/75bc9c67f558a32f79041fc1bbe87e9c904f2bfb-800x800.jpg)\n\nFaris Masad\n\nI‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using [Ace](https://ace.c9.io/), [Monaco](https://microsoft.github.io/monaco-editor/), and [CodeMirror](https://codemirror.net/6/) in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another.\n\n*If you‚Äôre here for a direct comparison, feel free to [skip to the end](#head-to-head), where I recap and compare.*\n\nThe story\n---------\n\n### Prelude: Ace\n\nIn the early days of Replit, around 2011, there was no code editor. It was a pure [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) interface, a console with a simple input box. Adding a code editor was an obvious next step, especially if we cater to more complex programs. Code editors give us features like syntax highlighting, editor shortcuts, auto-indentation, search and replace, etc. Cloud9 released Ace at the time as a feature-full, performant web code editor. Ace editor is still actively maintained; it has a rich ecosystem and supports many languages, keybindings and works great in the browser.\n\n![OG Replit UI](https://cdn.sanity.io/images/bj34pdbp/migration/95fa6a2cc105d6582e4277514252a93c3e468816-2144x1296.png?w=3840&q=100&fit=max&auto=format)\n\nOG Replit UI\n\nWe used Ace until around late 2017 when we switched to Monaco. While Ace was still being maintained, only one person was working on it. After Amazon acquired Cloud9, it appeared as though they deprioritized the open-source project. The editor was not receiving as many updates, issues were racking up on GitHub, and the maintainers added almost no features. Overall, the API started to feel outdated and clunky. The maintainer is great, but there‚Äôs only so much he can do.\n\n### Interlude: Monaco\n\nAs you might know, Monaco is the editor that powers VSCode; in fact, Microsoft built VSCode around Monaco. If we switch to Monaco, we thought we‚Äôd be able to get all the cool updates and features from the good folks working on VSCode. Monaco had a shiny and modern UI that matched our website better, had great autocomplete for JavaScript, HTML, CSS, and seemed to have APIs that would make writing a language client for LSP easier. The docs were great, shipped with TypeScript definitions, and had more extensibili...\n\n‚ö†Ô∏è  REMEMBER: All your work must contribute to answering the ORIGINAL TASK above!"
        },
        {
          "role": "assistant",
          "content": "Tool result: Observed output of cmd `browser_use` executed:\nSearch Results:\nSearch results for '2018 VSCode blog post site:replit.com':\n\n1. Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n   URL: http://www.baidu.com/link?url=MOb44X05uFwrapDRy2ev9shoA3N2OpmUyTQE0-SY15L236Qi5FDAvlRTMVO_H-Eo\n   Description: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n\n\nÊü•ÁúãÊ≠§ÁΩëÈ°µÁöÑ‰∏≠ÊñáÁøªËØëÔºåËØ∑ÁÇπÂáª\n\n\nÁøªËØëÊ≠§È°µ\n\n\n\nwe didn‚Äôt want to maintain a fork of VSCode as the changes we made were not going to get accepted upstream, and it was still a long way from being usable in product So we wound up with two code editors on Repli\n\n\n\n   Content: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco Blog Eng Infra Ace, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser Mon, Dec 13, 2021 Updated at: Mon, Jul 14, 2025 Faris Masad I‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using Ace , Monaco , and CodeMirror in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another. If you‚Äôre here for a dir...\n\nMetadata:\n- Total results: 1\n- Language: en\n- Country: us\n\nFetched Content from http://www.baidu.com/link?url=MOb44X05uFwrapDRy2ev9shoA3N2OpmUyTQE0-SY15L236Qi5FDAvlRTMVO_H-Eo:\nReplit ‚Äî Comparing Code Editors: Ace, CodeMirror and MonacoFeatures[Replit Agent](https://replit.com/ai)[Collaboration](https://replit.com/collaboration)[Deployments](https://replit.com/deployments)[Teams](https://replit.com/teams)[Pricing](https://replit.com/pricing)[Blog](https://blog.replit.com)[Careers](https://replit.com/site/careers)[Log in](https://replit.com/login)[Start building](https://replit.com/signup)\n\n* Features\n* [Pricing](https://replit.com/pricing)\n* [Blog](https://blog.replit.com)\n* [Careers](https://replit.com/site/careers)\n[Log in](https://replit.com/login)[Start building](https://replit.com/signup)[Blog](/)\n\n* [Eng](/category/eng)\n* [Infra](/category/infra)\n\nAce, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser\n====================================================================================\n\n![](https://cdn.sanity.io/images/bj34pdbp/migration/3dd7ff672c7b36fc06bf0eda3ae537c0a61a7276-674x421.png?w=1920&q=75&fit=clip&auto=format)Mon, Dec 13, 2021\n\nUpdated at:\n\nMon, Jul 14, 2025![Faris Masad](https://cdn.sanity.io/images/bj34pdbp/migration/75bc9c67f558a32f79041fc1bbe87e9c904f2bfb-800x800.jpg)\n\nFaris Masad\n\nI‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using [Ace](https://ace.c9.io/), [Monaco](https://microsoft.github.io/monaco-editor/), and [CodeMirror](https://codemirror.net/6/) in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another.\n\n*If you‚Äôre here for a direct comparison, feel free to [skip to the end](#head-to-head), where I recap and compare.*\n\nThe story\n---------\n\n### Prelude: Ace\n\nIn the early days of Replit, around 2011, there was no code editor. It was a pure [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) interface, a console with a simple input box. Adding a code editor was an obvious next step, especially if we cater to more complex programs. Code editors give us features like syntax highlighting, editor shortcuts, auto-indentation, search and replace, etc. Cloud9 released Ace at the time as a feature-full, performant web code editor. Ace editor is still actively maintained; it has a rich ecosystem and supports many languages, keybindings and works great in the browser.\n\n![OG Replit UI](https://cdn.sanity.io/images/bj34pdbp/migration/95fa6a2cc105d6582e4277514252a93c3e468816-2144x1296.png?w=3840&q=100&fit=max&auto=format)\n\nOG Replit UI\n\nWe used Ace until around late 2017 when we switched to Monaco. While Ace was still being maintained, only one person was working on it. After Amazon acquired Cloud9, it appeared as though they deprioritized the open-source project. The editor was not receiving as many updates, issues were racking up on GitHub, and the maintainers added almost no features. Overall, the API started to feel outdated and clunky. The maintainer is great, but there‚Äôs only so much he can do.\n\n### Interlude: Monaco\n\nAs you might know, Monaco is the editor that powers VSCode; in fact, Microsoft built VSCode around Monaco. If we switch to Monaco, we thought we‚Äôd be able to get all the cool updates and features from the good folks working on VSCode. Monaco had a shiny and modern UI that matched our website better, had great autocomplete for JavaScript, HTML, CSS, and seemed to have APIs that would make writing a language client for LSP easier. The docs were great, shipped with TypeScript definitions, and had more extensibili..."
        }
      ],
      "error_message": null
    },
    "step_2": {
      "step": 2,
      "agent_id": "2",
      "agent_name": "FinalSynthesizer",
      "status": "success",
      "start_time": 1758524249.0696156,
      "end_time": 1758524271.9824698,
      "duration": 22.912854194641113,
      "messages": [
        {
          "role": "user",
          "content": "üéØ ORIGINAL TASK REQUIREMENT:\nIn the 2018 VSCode blog post on replit.com, what was the command they clicked on in the last video to remove extra lines?\n================================================================================\nStep 3 - Current Task Input:\nTool result: Observed output of cmd `browser_use` executed:\nSearch Results:\nSearch results for '2018 VSCode blog post site:replit.com':\n\n1. Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n   URL: http://www.baidu.com/link?url=MOb44X05uFwrapDRy2ev9shoA3N2OpmUyTQE0-SY15L236Qi5FDAvlRTMVO_H-Eo\n   Description: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n\n\nÊü•ÁúãÊ≠§ÁΩëÈ°µÁöÑ‰∏≠ÊñáÁøªËØëÔºåËØ∑ÁÇπÂáª\n\n\nÁøªËØëÊ≠§È°µ\n\n\n\nwe didn‚Äôt want to maintain a fork of VSCode as the changes we made were not going to get accepted upstream, and it was still a long way from being usable in product So we wound up with two code editors on Repli\n\n\n\n   Content: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco Blog Eng Infra Ace, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser Mon, Dec 13, 2021 Updated at: Mon, Jul 14, 2025 Faris Masad I‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using Ace , Monaco , and CodeMirror in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another. If you‚Äôre here for a dir...\n\nMetadata:\n- Total results: 1\n- Language: en\n- Country: us\n\nFetched Content from http://www.baidu.com/link?url=MOb44X05uFwrapDRy2ev9shoA3N2OpmUyTQE0-SY15L236Qi5FDAvlRTMVO_H-Eo:\nReplit ‚Äî Comparing Code Editors: Ace, CodeMirror and MonacoFeatures[Replit Agent](https://replit.com/ai)[Collaboration](https://replit.com/collaboration)[Deployments](https://replit.com/deployments)[Teams](https://replit.com/teams)[Pricing](https://replit.com/pricing)[Blog](https://blog.replit.com)[Careers](https://replit.com/site/careers)[Log in](https://replit.com/login)[Start building](https://replit.com/signup)\n\n* Features\n* [Pricing](https://replit.com/pricing)\n* [Blog](https://blog.replit.com)\n* [Careers](https://replit.com/site/careers)\n[Log in](https://replit.com/login)[Start building](https://replit.com/signup)[Blog](/)\n\n* [Eng](/category/eng)\n* [Infra](/category/infra)\n\nAce, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser\n====================================================================================\n\n![](https://cdn.sanity.io/images/bj34pdbp/migration/3dd7ff672c7b36fc06bf0eda3ae537c0a61a7276-674x421.png?w=1920&q=75&fit=clip&auto=format)Mon, Dec 13, 2021\n\nUpdated at:\n\nMon, Jul 14, 2025![Faris Masad](https://cdn.sanity.io/images/bj34pdbp/migration/75bc9c67f558a32f79041fc1bbe87e9c904f2bfb-800x800.jpg)\n\nFaris Masad\n\nI‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using [Ace](https://ace.c9.io/), [Monaco](https://microsoft.github.io/monaco-editor/), and [CodeMirror](https://codemirror.net/6/) in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another.\n\n*If you‚Äôre here for a direct comparison, feel free to [skip to the end](#head-to-head), where I recap and compare.*\n\nThe story\n---------\n\n### Prelude: Ace\n\nIn the early days of Replit, around 2011, there was no code editor. It was a pure [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) interface, a console with a simple input box. Adding a code editor was an obvious next step, especially if we cater to more complex programs. Code editors give us features like syntax highlighting, editor shortcuts, auto-indentation, search and replace, etc. Cloud9 released Ace at the time as a feature-full, performant web code editor. Ace editor is still actively maintained; it has a rich ecosystem and supports many languages, keybindings and works great in the browser.\n\n![OG Replit UI](https://cdn.sanity.io/images/bj34pdbp/migration/95fa6a2cc105d6582e4277514252a93c3e468816-2144x1296.png?w=3840&q=100&fit=max&auto=format)\n\nOG Replit UI\n\nWe used Ace until around late 2017 when we switched to Monaco. While Ace was still being maintained, only one person was working on it. After Amazon acquired Cloud9, it appeared as though they deprioritized the open-source project. The editor was not receiving as many updates, issues were racking up on GitHub, and the maintainers added almost no features. Overall, the API started to feel outdated and clunky. The maintainer is great, but there‚Äôs only so much he can do.\n\n### Interlude: Monaco\n\nAs you might know, Monaco is the editor that powers VSCode; in fact, Microsoft built VSCode around Monaco. If we switch to Monaco, we thought we‚Äôd be able to get all the cool updates and features from the good folks working on VSCode. Monaco had a shiny and modern UI that matched our website better, had great autocomplete for JavaScript, HTML, CSS, and seemed to have APIs that would make writing a language client for LSP easier. The docs were great, shipped with TypeScript definitions, and had more extensibili...\n\nPrevious Steps Context:\nStep 1 (WebNavigator - success): Tool result: Observed output of cmd `browser_use` executed:\nSearch Results:\nSearch results for '2018 VSCode blog post site:replit.com':\n\n1. Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n   URL: http://www.baidu.com/link?url=ChIiRj8p1KeEbjA52MkTgfI_5oHxV4tce-_p1Akjx9LkHIR2luV9fB7HSZ2O34wo\n   Description: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n\n\nÊü•ÁúãÊ≠§ÁΩëÈ°µÁöÑ‰∏≠ÊñáÁøªËØëÔºåËØ∑ÁÇπÂáª\n\n\nÁøªËØëÊ≠§È°µ\n\n\n\nwe didn‚Äôt want to maintain a fork of VSCode as the changes we made were not going to get accepted upstream, and it was still a long way from being usable in product So we wound up with two code editors on Repli\n\n\n\n   Content: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco Blog Eng Infra Ace, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser Mon, Dec 13, 2021 Updated at: Mon, Jul 14, 2025 Faris Masad I‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using Ace , Monaco , and CodeMirror in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another. If you‚Äôre here for a dir...\n\nMetadata:\n- Total results: 1\n- Language: en\n- Country: us\n\nFetched Content from http://www.baidu.com/link?url=ChIiRj8p1KeEbjA52MkTgfI_5oHxV4tce-_p1Akjx9LkHIR2luV9fB7HSZ2O34wo:\nReplit ‚Äî Comparing Code Editors: Ace, CodeMirror and MonacoFeatures[Replit Agent](https://replit.com/ai)[Collaboration](https://replit.com/collaboration)[Deployments](https://replit.com/deployments)[Teams](https://replit.com/teams)[Pricing](https://replit.com/pricing)[Blog](https://blog.replit.com)[Careers](https://replit.com/site/careers)[Log in](https://replit.com/login)[Start building](https://replit.com/signup)\n\n* Features\n* [Pricing](https://replit.com/pricing)\n* [Blog](https://blog.replit.com)\n* [Careers](https://replit.com/site/careers)\n[Log in](https://replit.com/login)[Start building](https://replit.com/signup)[Blog](/)\n\n* [Eng](/category/eng)\n* [Infra](/category/infra)\n\nAce, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser\n====================================================================================\n\n![](https://cdn.sanity.io/images/bj34pdbp/migration/3dd7ff672c7b36fc06bf0eda3ae537c0a61a7276-674x421.png?w=1920&q=75&fit=clip&auto=format)Mon, Dec 13, 2021\n\nUpdated at:\n\nMon, Jul 14, 2025![Faris Masad](https://cdn.sanity.io/images/bj34pdbp/migration/75bc9c67f558a32f79041fc1bbe87e9c904f2bfb-800x800.jpg)\n\nFaris Masad\n\nI‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using [Ace](https://ace.c9.io/), [Monaco](https://microsoft.github.io/monaco-editor/), and [CodeMirror](https://codemirror.net/6/) in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another.\n\n*If you‚Äôre here for a direct comparison, feel free to [skip to the end](#head-to-head), where I recap and compare.*\n\nThe story\n---------\n\n### Prelude: Ace\n\nIn the early days of Replit, around 2011, there was no code editor. It was a pure [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) interface, a console with a simple input box. Adding a code editor was an obvious next step, especially if we cater to more complex programs. Code editors give us features like syntax highlighting, editor shortcuts, auto-indentation, search and replace, etc. Cloud9 released Ace at the time as a feature-full, performant web code editor. Ace editor is still actively maintained; it has a rich ecosystem and supports many languages, keybindings and works great in the browser.\n\n![OG Replit UI](https://cdn.sanity.io/images/bj34pdbp/migration/95fa6a2cc105d6582e4277514252a93c3e468816-2144x1296.png?w=3840&q=100&fit=max&auto=format)\n\nOG Replit UI\n\nWe used Ace until around late 2017 when we switched to Monaco. While Ace was still being maintained, only one person was working on it. After Amazon acquired Cloud9, it appeared as though they deprioritized the open-source project. The editor was not receiving as many updates, issues were racking up on GitHub, and the maintainers added almost no features. Overall, the API started to feel outdated and clunky. The maintainer is great, but there‚Äôs only so much he can do.\n\n### Interlude: Monaco\n\nAs you might know, Monaco is the editor that powers VSCode; in fact, Microsoft built VSCode around Monaco. If we switch to Monaco, we thought we‚Äôd be able to get all the cool updates and features from the good folks working on VSCode. Monaco had a shiny and modern UI that matched our website better, had great autocomplete for JavaScript, HTML, CSS, and seemed to have APIs that would make writing a language client for LSP easier. The docs were great, shipped with TypeScript definitions, and had more extensibili...\nStep 2 (ContentAnalyzer - success): Tool result: Observed output of cmd `browser_use` executed:\nSearch Results:\nSearch results for '2018 VSCode blog post site:replit.com':\n\n1. Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n   URL: http://www.baidu.com/link?url=MOb44X05uFwrapDRy2ev9shoA3N2OpmUyTQE0-SY15L236Qi5FDAvlRTMVO_H-Eo\n   Description: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n\n\nÊü•ÁúãÊ≠§ÁΩëÈ°µÁöÑ‰∏≠ÊñáÁøªËØëÔºåËØ∑ÁÇπÂáª\n\n\nÁøªËØëÊ≠§È°µ\n\n\n\nwe didn‚Äôt want to maintain a fork of VSCode as the changes we made were not going to get accepted upstream, and it was still a long way from being usable in product So we wound up with two code editors on Repli\n\n\n\n   Content: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco Blog Eng Infra Ace, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser Mon, Dec 13, 2021 Updated at: Mon, Jul 14, 2025 Faris Masad I‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using Ace , Monaco , and CodeMirror in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another. If you‚Äôre here for a dir...\n\nMetadata:\n- Total results: 1\n- Language: en\n- Country: us\n\nFetched Content from http://www.baidu.com/link?url=MOb44X05uFwrapDRy2ev9shoA3N2OpmUyTQE0-SY15L236Qi5FDAvlRTMVO_H-Eo:\nReplit ‚Äî Comparing Code Editors: Ace, CodeMirror and MonacoFeatures[Replit Agent](https://replit.com/ai)[Collaboration](https://replit.com/collaboration)[Deployments](https://replit.com/deployments)[Teams](https://replit.com/teams)[Pricing](https://replit.com/pricing)[Blog](https://blog.replit.com)[Careers](https://replit.com/site/careers)[Log in](https://replit.com/login)[Start building](https://replit.com/signup)\n\n* Features\n* [Pricing](https://replit.com/pricing)\n* [Blog](https://blog.replit.com)\n* [Careers](https://replit.com/site/careers)\n[Log in](https://replit.com/login)[Start building](https://replit.com/signup)[Blog](/)\n\n* [Eng](/category/eng)\n* [Infra](/category/infra)\n\nAce, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser\n====================================================================================\n\n![](https://cdn.sanity.io/images/bj34pdbp/migration/3dd7ff672c7b36fc06bf0eda3ae537c0a61a7276-674x421.png?w=1920&q=75&fit=clip&auto=format)Mon, Dec 13, 2021\n\nUpdated at:\n\nMon, Jul 14, 2025![Faris Masad](https://cdn.sanity.io/images/bj34pdbp/migration/75bc9c67f558a32f79041fc1bbe87e9c904f2bfb-800x800.jpg)\n\nFaris Masad\n\nI‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using [Ace](https://ace.c9.io/), [Monaco](https://microsoft.github.io/monaco-editor/), and [CodeMirror](https://codemirror.net/6/) in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another.\n\n*If you‚Äôre here for a direct comparison, feel free to [skip to the end](#head-to-head), where I recap and compare.*\n\nThe story\n---------\n\n### Prelude: Ace\n\nIn the early days of Replit, around 2011, there was no code editor. It was a pure [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) interface, a console with a simple input box. Adding a code editor was an obvious next step, especially if we cater to more complex programs. Code editors give us features like syntax highlighting, editor shortcuts, auto-indentation, search and replace, etc. Cloud9 released Ace at the time as a feature-full, performant web code editor. Ace editor is still actively maintained; it has a rich ecosystem and supports many languages, keybindings and works great in the browser.\n\n![OG Replit UI](https://cdn.sanity.io/images/bj34pdbp/migration/95fa6a2cc105d6582e4277514252a93c3e468816-2144x1296.png?w=3840&q=100&fit=max&auto=format)\n\nOG Replit UI\n\nWe used Ace until around late 2017 when we switched to Monaco. While Ace was still being maintained, only one person was working on it. After Amazon acquired Cloud9, it appeared as though they deprioritized the open-source project. The editor was not receiving as many updates, issues were racking up on GitHub, and the maintainers added almost no features. Overall, the API started to feel outdated and clunky. The maintainer is great, but there‚Äôs only so much he can do.\n\n### Interlude: Monaco\n\nAs you might know, Monaco is the editor that powers VSCode; in fact, Microsoft built VSCode around Monaco. If we switch to Monaco, we thought we‚Äôd be able to get all the cool updates and features from the good folks working on VSCode. Monaco had a shiny and modern UI that matched our website better, had great autocomplete for JavaScript, HTML, CSS, and seemed to have APIs that would make writing a language client for LSP easier. The docs were great, shipped with TypeScript definitions, and had more extensibili...\n\n‚ö†Ô∏è  REMEMBER: All your work must contribute to answering the ORIGINAL TASK above!"
        },
        {
          "role": "assistant",
          "content": "Tool result: Observed output of cmd `browser_use` executed:\nSearch Results:\nSearch results for '2018 VSCode blog post site:replit.com':\n\n1. Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n   URL: http://www.baidu.com/link?url=Ddm_937kldbZzgPoYSmk8Wm6dx6ks4oH23nIme_FAbdRQg7qJ34Fe7YidGRdHvDq\n   Description: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco\n\n\nÊü•ÁúãÊ≠§ÁΩëÈ°µÁöÑ‰∏≠ÊñáÁøªËØëÔºåËØ∑ÁÇπÂáª\n\n\nÁøªËØëÊ≠§È°µ\n\n\n\nwe didn‚Äôt want to maintain a fork of VSCode as the changes we made were not going to get accepted upstream, and it was still a long way from being usable in product So we wound up with two code editors on Repli\n\n\n\n   Content: Replit ‚Äî Comparing Code Editors: Ace, CodeMirror and Monaco Blog Eng Infra Ace, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser Mon, Dec 13, 2021 Updated at: Mon, Jul 14, 2025 Faris Masad I‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using Ace , Monaco , and CodeMirror in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another. If you‚Äôre here for a dir...\n\nMetadata:\n- Total results: 1\n- Language: en\n- Country: us\n\nFetched Content from http://www.baidu.com/link?url=Ddm_937kldbZzgPoYSmk8Wm6dx6ks4oH23nIme_FAbdRQg7qJ34Fe7YidGRdHvDq:\nReplit ‚Äî Comparing Code Editors: Ace, CodeMirror and MonacoFeatures[Replit Agent](https://replit.com/ai)[Collaboration](https://replit.com/collaboration)[Deployments](https://replit.com/deployments)[Teams](https://replit.com/teams)[Pricing](https://replit.com/pricing)[Blog](https://blog.replit.com)[Careers](https://replit.com/site/careers)[Log in](https://replit.com/login)[Start building](https://replit.com/signup)\n\n* Features\n* [Pricing](https://replit.com/pricing)\n* [Blog](https://blog.replit.com)\n* [Careers](https://replit.com/site/careers)\n[Log in](https://replit.com/login)[Start building](https://replit.com/signup)[Blog](/)\n\n* [Eng](/category/eng)\n* [Infra](/category/infra)\n\nAce, CodeMirror, and Monaco: A Comparison of the Code Editors You Use in the Browser\n====================================================================================\n\n![](https://cdn.sanity.io/images/bj34pdbp/migration/3dd7ff672c7b36fc06bf0eda3ae537c0a61a7276-674x421.png?w=1920&q=75&fit=clip&auto=format)Mon, Dec 13, 2021\n\nUpdated at:\n\nMon, Jul 14, 2025![Faris Masad](https://cdn.sanity.io/images/bj34pdbp/migration/75bc9c67f558a32f79041fc1bbe87e9c904f2bfb-800x800.jpg)\n\nFaris Masad\n\nI‚Äôve been working on Replit for roughly six years now, and as the team has grown, I‚Äôve focused on the IDE (what we call the workspace) portion of the product. Naturally, I was increasingly preoccupied with the code editor. While we‚Äôve considered creating a code editor that meets our needs, the complexity involved in developing one, the richness of open-source choices available, and the size of our staff made it a fruitless rabbit hole to enter. Our time is best spent elsewhere. I have had the pleasure (and the pain) of using [Ace](https://ace.c9.io/), [Monaco](https://microsoft.github.io/monaco-editor/), and [CodeMirror](https://codemirror.net/6/) in production settings, sometimes simultaneously (more on that later). In this post, I‚Äôll go over some Replit history, my experience using the editors, and how they stack up against one another.\n\n*If you‚Äôre here for a direct comparison, feel free to [skip to the end](#head-to-head), where I recap and compare.*\n\nThe story\n---------\n\n### Prelude: Ace\n\nIn the early days of Replit, around 2011, there was no code editor. It was a pure [REPL](https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop) interface, a console with a simple input box. Adding a code editor was an obvious next step, especially if we cater to more complex programs. Code editors give us features like syntax highlighting, editor shortcuts, auto-indentation, search and replace, etc. Cloud9 released Ace at the time as a feature-full, performant web code editor. Ace editor is still actively maintained; it has a rich ecosystem and supports many languages, keybindings and works great in the browser.\n\n![OG Replit UI](https://cdn.sanity.io/images/bj34pdbp/migration/95fa6a2cc105d6582e4277514252a93c3e468816-2144x1296.png?w=3840&q=100&fit=max&auto=format)\n\nOG Replit UI\n\nWe used Ace until around late 2017 when we switched to Monaco. While Ace was still being maintained, only one person was working on it. After Amazon acquired Cloud9, it appeared as though they deprioritized the open-source project. The editor was not receiving as many updates, issues were racking up on GitHub, and the maintainers added almost no features. Overall, the API started to feel outdated and clunky. The maintainer is great, but there‚Äôs only so much he can do.\n\n### Interlude: Monaco\n\nAs you might know, Monaco is the editor that powers VSCode; in fact, Microsoft built VSCode around Monaco. If we switch to Monaco, we thought we‚Äôd be able to get all the cool updates and features from the good folks working on VSCode. Monaco had a shiny and modern UI that matched our website better, had great autocomplete for JavaScript, HTML, CSS, and seemed to have APIs that would make writing a language client for LSP easier. The docs were great, shipped with TypeScript definitions, and had more extensibili..."
        }
      ],
      "error_message": null
    }
  },
  "timestamp": 1758524276.3955812
}